[{"_id": "64ca9c48ab8472757bd245a0", "mode": "staged", "originalfile": "/FileStore/platform/extra/tempFile1690999873.csv", "in": [], "out": ["64ca9c48ab8472757bd245a1"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "CustomerBehavior-PBI_HDFS", "comment": "", "pipeline_id": "64ca9c48ab8472757bd2459d", "sub_type": "HDFS", "stage_type": "source", "stage_attributes": {"url": "/FileStore/platform/extra/tempFile1690999873.csv", "filename": "tempFile1690999873.csv", "delimiter": ",", "file_type": "Delimeted", "dbfs_token": "", "dbfs_domain": "", "is_header": "Use Header Line", "server_url": "/numtraPlatform/NumtraPlatformV3/uploads/platform/"}, "status": "new", "position": {"x": -80, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/source/hdfs-source.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "source", "text": "HDFS", "slug": "hdfs", "fontFamily": "Roboto Condensed", "fontWeight": "Normal", "mode": "manual"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"url": "", "file_type": "", "dbfs_token": "", "dbfs_domain": "", "delimiter": "", "is_header": "Use Header Line"}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "d2596556-3f80-4d6d-b0c0-61914b958779", "original_schema": [{"inherited": true, "checked": true, "field": "Customer_Behaviour[Daily Time Spent on Site]", "alias": "Customer_Behaviour[Daily Time Spent on Site]", "type": "real", "position": 0}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Age]", "alias": "Customer_Behaviour[Age]", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Area Income]", "alias": "Customer_Behaviour[Area Income]", "type": "real", "position": 2}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Daily Internet Usage]", "alias": "Customer_Behaviour[Daily Internet Usage]", "type": "real", "position": 3}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Ad Topic Line]", "alias": "Customer_Behaviour[Ad Topic Line]", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[City]", "alias": "Customer_Behaviour[City]", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Male]", "alias": "Customer_Behaviour[Male]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Country]", "alias": "Customer_Behaviour[Country]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Timestamp]", "alias": "Customer_Behaviour[Timestamp]", "type": "numeric", "position": 8}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Clicked on Ad]", "alias": "Customer_Behaviour[Clicked on Ad]", "type": "numeric", "position": 9}], "actual_schema": [{"inherited": true, "checked": true, "field": "Customer_Behaviour[Daily Time Spent on Site]", "alias": "Customer_Behaviour[Daily Time Spent on Site]", "type": "real", "position": 0}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Age]", "alias": "Customer_Behaviour[Age]", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Area Income]", "alias": "Customer_Behaviour[Area Income]", "type": "real", "position": 2}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Daily Internet Usage]", "alias": "Customer_Behaviour[Daily Internet Usage]", "type": "real", "position": 3}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Ad Topic Line]", "alias": "Customer_Behaviour[Ad Topic Line]", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[City]", "alias": "Customer_Behaviour[City]", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Male]", "alias": "Customer_Behaviour[Male]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Country]", "alias": "Customer_Behaviour[Country]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Timestamp]", "alias": "Customer_Behaviour[Timestamp]", "type": "numeric", "position": 8}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Clicked on Ad]", "alias": "Customer_Behaviour[Clicked on Ad]", "type": "numeric", "position": 9}], "selected_schema": [], "created_at": "2023-08-02 18:11:20.774000", "joinSchema": [], "updated_at": "2023-08-02 18:11:21.549000", "__v": 0, "stage_runningstate": "executed", "datacache": 0, "originalcount": 1000, "sampleData": [{"Customer_Behaviour[Daily Time Spent on Site]": 47.64, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 45632.51, "Customer_Behaviour[Daily Internet Usage]": 122.02, "Customer_Behaviour[Ad Topic Line]": "Centralized neutral neural-net", "Customer_Behaviour[City]": "West Brandonton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Qatar", "Customer_Behaviour[Timestamp]": 1458159541000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.95, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 30976.0, "Customer_Behaviour[Daily Internet Usage]": 143.56, "Customer_Behaviour[Ad Topic Line]": "Grass-roots coherent extranet", "Customer_Behaviour[City]": "West William", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Barbados", "Customer_Behaviour[Timestamp]": 1458811909000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.39, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 23936.86, "Customer_Behaviour[Daily Internet Usage]": 129.41, "Customer_Behaviour[Ad Topic Line]": "Customizable multi-tasking website", "Customer_Behaviour[City]": "West Dylanberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Palestinian Territory", "Customer_Behaviour[Timestamp]": 1454181641000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.49, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Area Income]": 32635.7, "Customer_Behaviour[Daily Internet Usage]": 164.83, "Customer_Behaviour[Ad Topic Line]": "Mandatory disintermediate utilization", "Customer_Behaviour[City]": "South John", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1463734173000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.39, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 68962.32, "Customer_Behaviour[Daily Internet Usage]": 167.22, "Customer_Behaviour[Ad Topic Line]": "Exclusive neutral parallelism", "Customer_Behaviour[City]": "Harperborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tokelau", "Customer_Behaviour[Timestamp]": 1465838829000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.95, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Area Income]": 58295.82, "Customer_Behaviour[Daily Internet Usage]": 129.23, "Customer_Behaviour[Ad Topic Line]": "Monitored systematic hierarchy", "Customer_Behaviour[City]": "South Cathyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greece", "Customer_Behaviour[Timestamp]": 1468917130000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.2, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 32708.94, "Customer_Behaviour[Daily Internet Usage]": 119.2, "Customer_Behaviour[Ad Topic Line]": "Open-architected impactful productivity", "Customer_Behaviour[City]": "Palmerside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "British Virgin Islands", "Customer_Behaviour[Timestamp]": 1460610515000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.6, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 30227.98, "Customer_Behaviour[Daily Internet Usage]": 212.58, "Customer_Behaviour[Ad Topic Line]": "Multi-layered 4thgeneration knowledge user", "Customer_Behaviour[City]": "Port Cassie", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1452780009000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 38.93, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 27508.41, "Customer_Behaviour[Daily Internet Usage]": 162.08, "Customer_Behaviour[Ad Topic Line]": "Intuitive exuding service-desk", "Customer_Behaviour[City]": "Millerchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1457678950000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.01, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 54286.1, "Customer_Behaviour[Daily Internet Usage]": 119.93, "Customer_Behaviour[Ad Topic Line]": "Centralized 24/7 installation", "Customer_Behaviour[City]": "West Christopher", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Italy", "Customer_Behaviour[Timestamp]": 1461582114000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.31, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 62722.57, "Customer_Behaviour[Daily Internet Usage]": 119.3, "Customer_Behaviour[Ad Topic Line]": "Team-oriented encompassing portal", "Customer_Behaviour[City]": "Amandahaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkey", "Customer_Behaviour[Timestamp]": 1455435418000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.19, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 75254.88, "Customer_Behaviour[Daily Internet Usage]": 150.61, "Customer_Behaviour[Ad Topic Line]": "Cross-group regional website", "Customer_Behaviour[City]": "Garciaside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Israel", "Customer_Behaviour[Timestamp]": 1455709320000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 44.98, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 52336.64, "Customer_Behaviour[Daily Internet Usage]": 129.31, "Customer_Behaviour[Ad Topic Line]": "Organized global model", "Customer_Behaviour[City]": "Port Sarahshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Svalbard & Jan Mayen Islands", "Customer_Behaviour[Timestamp]": 1460247227000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.82, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 24852.9, "Customer_Behaviour[Daily Internet Usage]": 156.36, "Customer_Behaviour[Ad Topic Line]": "Phased transitional instruction set", "Customer_Behaviour[City]": "Brendachester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iran", "Customer_Behaviour[Timestamp]": 1464302987000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.96, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 66281.46, "Customer_Behaviour[Daily Internet Usage]": 141.22, "Customer_Behaviour[Ad Topic Line]": "Streamlined cohesive conglomeration", "Customer_Behaviour[City]": "Robertfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Christmas Island", "Customer_Behaviour[Timestamp]": 1464915323000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.89, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 51317.33, "Customer_Behaviour[Daily Internet Usage]": 105.22, "Customer_Behaviour[Ad Topic Line]": "Synchronized user-facing core", "Customer_Behaviour[City]": "Jensenborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Rwanda", "Customer_Behaviour[Timestamp]": 1452212247000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.33, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 51510.18, "Customer_Behaviour[Daily Internet Usage]": 200.22, "Customer_Behaviour[Ad Topic Line]": "Organized client-driven alliance", "Customer_Behaviour[City]": "Bradleyburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turks and Caicos Islands", "Customer_Behaviour[Timestamp]": 1465164694000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.53, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 32536.98, "Customer_Behaviour[Daily Internet Usage]": 131.72, "Customer_Behaviour[Ad Topic Line]": "Synergized multimedia emulation", "Customer_Behaviour[City]": "North Regina", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Norfolk Island", "Customer_Behaviour[Timestamp]": 1461355822000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.13, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 60248.97, "Customer_Behaviour[Daily Internet Usage]": 139.01, "Customer_Behaviour[Ad Topic Line]": "Customer-focused optimizing moderator", "Customer_Behaviour[City]": "Davidmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bouvet Island (Bouvetoya)", "Customer_Behaviour[Timestamp]": 1454317255000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.13, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 55605.92, "Customer_Behaviour[Daily Internet Usage]": 111.71, "Customer_Behaviour[Ad Topic Line]": "Customizable executive software", "Customer_Behaviour[City]": "Lake Conniefurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ukraine", "Customer_Behaviour[Timestamp]": 1455746129000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.64, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 61652.53, "Customer_Behaviour[Daily Internet Usage]": 115.91, "Customer_Behaviour[Ad Topic Line]": "Down-sized uniform info-mediaries", "Customer_Behaviour[City]": "Lake Christopherfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Montserrat", "Customer_Behaviour[Timestamp]": 1452016612000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.94, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Area Income]": 30726.26, "Customer_Behaviour[Daily Internet Usage]": 138.71, "Customer_Behaviour[Ad Topic Line]": "Streamlined next generation implementation", "Customer_Behaviour[City]": "East Tylershire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Timor-Leste", "Customer_Behaviour[Timestamp]": 1461051268000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.76, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 47861.93, "Customer_Behaviour[Daily Internet Usage]": 105.15, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered scalable groupware", "Customer_Behaviour[City]": "Lake Dustin", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1465745144000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.7, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 42696.67, "Customer_Behaviour[Daily Internet Usage]": 109.07, "Customer_Behaviour[Ad Topic Line]": "Phased dynamic customer loyalty", "Customer_Behaviour[City]": "New Tina", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1457997191000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.9, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 71392.53, "Customer_Behaviour[Daily Internet Usage]": 138.35, "Customer_Behaviour[Ad Topic Line]": "Down-sized modular intranet", "Customer_Behaviour[City]": "Christopherport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jersey", "Customer_Behaviour[Timestamp]": 1463140270000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.79, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 59550.05, "Customer_Behaviour[Daily Internet Usage]": 149.67, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive content-based focus group", "Customer_Behaviour[City]": "Port Sarahhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1456001225000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.94, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 64927.19, "Customer_Behaviour[Daily Internet Usage]": 156.3, "Customer_Behaviour[Ad Topic Line]": "Function-based optimizing protocol", "Customer_Behaviour[City]": "Williamsborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lithuania", "Customer_Behaviour[Timestamp]": 1452293230000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.61, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 51868.85, "Customer_Behaviour[Daily Internet Usage]": 158.22, "Customer_Behaviour[Ad Topic Line]": "Up-sized secondary software", "Customer_Behaviour[City]": "North Michael", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Egypt", "Customer_Behaviour[Timestamp]": 1459154786000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.49, "Customer_Behaviour[Age]": 53, "Customer_Behaviour[Area Income]": 31947.65, "Customer_Behaviour[Daily Internet Usage]": 169.18, "Customer_Behaviour[Ad Topic Line]": "Persevering reciprocal firmware", "Customer_Behaviour[City]": "Hernandezville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Western Sahara", "Customer_Behaviour[Timestamp]": 1467537750000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.39, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 66541.05, "Customer_Behaviour[Daily Internet Usage]": 150.99, "Customer_Behaviour[Ad Topic Line]": "De-engineered mobile infrastructure", "Customer_Behaviour[City]": "Erinton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Christmas Island", "Customer_Behaviour[Timestamp]": 1461822625000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.53, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 33258.09, "Customer_Behaviour[Daily Internet Usage]": 135.18, "Customer_Behaviour[Ad Topic Line]": "Customer-focused upward-trending contingency", "Customer_Behaviour[City]": "Hughesport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guinea", "Customer_Behaviour[Timestamp]": 1459660231000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.63, "Customer_Behaviour[Age]": 60, "Customer_Behaviour[Area Income]": 60333.38, "Customer_Behaviour[Daily Internet Usage]": 176.98, "Customer_Behaviour[Ad Topic Line]": "User-friendly upward-trending intranet", "Customer_Behaviour[City]": "New Lucasburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Madagascar", "Customer_Behaviour[Timestamp]": 1452987471000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.6, "Customer_Behaviour[Age]": 55, "Customer_Behaviour[Area Income]": 66815.54, "Customer_Behaviour[Daily Internet Usage]": 162.95, "Customer_Behaviour[Ad Topic Line]": "Focused intangible moderator", "Customer_Behaviour[City]": "Port Christopherborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Arab Emirates", "Customer_Behaviour[Timestamp]": 1468426344000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.45, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 29727.79, "Customer_Behaviour[Daily Internet Usage]": 207.18, "Customer_Behaviour[Ad Topic Line]": "Customer-focused transitional strategy", "Customer_Behaviour[City]": "Millerside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Somalia", "Customer_Behaviour[Timestamp]": 1468383053000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.97, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 49269.98, "Customer_Behaviour[Daily Internet Usage]": 152.49, "Customer_Behaviour[Ad Topic Line]": "Advanced web-enabled standardization", "Customer_Behaviour[City]": "Lake Jessica", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bhutan", "Customer_Behaviour[Timestamp]": 1465669932000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 37.75, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 35466.8, "Customer_Behaviour[Daily Internet Usage]": 225.24, "Customer_Behaviour[Ad Topic Line]": "Polarized dynamic throughput", "Customer_Behaviour[City]": "South Daniel", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Uzbekistan", "Customer_Behaviour[Timestamp]": 1456516103000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.33, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 68787.09, "Customer_Behaviour[Daily Internet Usage]": 127.11, "Customer_Behaviour[Ad Topic Line]": "Devolved zero administration intranet", "Customer_Behaviour[City]": "Suzannetown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1466514921000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.31, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 56366.88, "Customer_Behaviour[Daily Internet Usage]": 127.07, "Customer_Behaviour[Ad Topic Line]": "Cross-platform regional task-force", "Customer_Behaviour[City]": "Brianfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1460994873000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.98, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 21644.91, "Customer_Behaviour[Daily Internet Usage]": 175.37, "Customer_Behaviour[Ad Topic Line]": "Down-sized well-modulated archive", "Customer_Behaviour[City]": "East Michelleberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lithuania", "Customer_Behaviour[Timestamp]": 1462352424000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.67, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 53817.02, "Customer_Behaviour[Daily Internet Usage]": 132.55, "Customer_Behaviour[Ad Topic Line]": "Realigned zero tolerance emulation", "Customer_Behaviour[City]": "Port Eric", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Martin", "Customer_Behaviour[Timestamp]": 1465843800000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.24, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 76368.31, "Customer_Behaviour[Daily Internet Usage]": 176.73, "Customer_Behaviour[Ad Topic Line]": "Versatile transitional monitoring", "Customer_Behaviour[City]": "Timothyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cuba", "Customer_Behaviour[Timestamp]": 1451836900000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.49, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 50335.46, "Customer_Behaviour[Daily Internet Usage]": 127.83, "Customer_Behaviour[Ad Topic Line]": "User-centric intangible task-force", "Customer_Behaviour[City]": "Guzmanland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belize", "Customer_Behaviour[Timestamp]": 1452593249000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 38.37, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 41229.16, "Customer_Behaviour[Daily Internet Usage]": 140.46, "Customer_Behaviour[Ad Topic Line]": "Multi-layered user-facing paradigm", "Customer_Behaviour[City]": "East John", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Antarctica (the territory South of 60 deg S)", "Customer_Behaviour[Timestamp]": 1463119768000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.78, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 71718.51, "Customer_Behaviour[Daily Internet Usage]": 152.24, "Customer_Behaviour[Ad Topic Line]": "Enterprise-wide client-driven contingency", "Customer_Behaviour[City]": "Heatherberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Dominica", "Customer_Behaviour[Timestamp]": 1467168209000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.61, "Customer_Behaviour[Age]": 57, "Customer_Behaviour[Area Income]": 61770.34, "Customer_Behaviour[Daily Internet Usage]": 150.29, "Customer_Behaviour[Ad Topic Line]": "Diverse modular interface", "Customer_Behaviour[City]": "South George", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1460317681000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 44.64, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 55787.58, "Customer_Behaviour[Daily Internet Usage]": 127.01, "Customer_Behaviour[Ad Topic Line]": "Up-sized incremental encryption", "Customer_Behaviour[City]": "Codyburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belize", "Customer_Behaviour[Timestamp]": 1455432703000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.55, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 73234.87, "Customer_Behaviour[Daily Internet Usage]": 159.24, "Customer_Behaviour[Ad Topic Line]": "Managed grid-enabled standardization", "Customer_Behaviour[City]": "Ramirezside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liechtenstein", "Customer_Behaviour[Timestamp]": 1462762738000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.28, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 50960.08, "Customer_Behaviour[Daily Internet Usage]": 140.39, "Customer_Behaviour[Ad Topic Line]": "Universal 24/7 implementation", "Customer_Behaviour[City]": "East Rachelview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Equatorial Guinea", "Customer_Behaviour[Timestamp]": 1454039659000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 34.66, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 48246.6, "Customer_Behaviour[Daily Internet Usage]": 194.83, "Customer_Behaviour[Ad Topic Line]": "Customer-focused multi-tasking Internet solution", "Customer_Behaviour[City]": "Curtisport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mongolia", "Customer_Behaviour[Timestamp]": 1468498030000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.18, "Customer_Behaviour[Age]": 55, "Customer_Behaviour[Area Income]": 28271.84, "Customer_Behaviour[Daily Internet Usage]": 143.42, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented contextually-based extranet", "Customer_Behaviour[City]": "Frankbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Svalbard & Jan Mayen Islands", "Customer_Behaviour[Timestamp]": 1452467670000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.36, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Area Income]": 70053.27, "Customer_Behaviour[Daily Internet Usage]": 137.43, "Customer_Behaviour[Ad Topic Line]": "Centralized tertiary pricing structure", "Customer_Behaviour[City]": "East Eric", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guinea", "Customer_Behaviour[Timestamp]": 1466644963000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.72, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 42995.8, "Customer_Behaviour[Daily Internet Usage]": 105.69, "Customer_Behaviour[Ad Topic Line]": "Synergized context-sensitive database", "Customer_Behaviour[City]": "Jacobstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kuwait", "Customer_Behaviour[Timestamp]": 1456685564000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.85, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 31343.39, "Customer_Behaviour[Daily Internet Usage]": 145.96, "Customer_Behaviour[Ad Topic Line]": "Profit-focused dedicated utilization", "Customer_Behaviour[City]": "East Stephen", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Vietnam", "Customer_Behaviour[Timestamp]": 1451791335000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.53, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 40763.13, "Customer_Behaviour[Daily Internet Usage]": 168.34, "Customer_Behaviour[Ad Topic Line]": "Stand-alone tangible moderator", "Customer_Behaviour[City]": "Turnerchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guatemala", "Customer_Behaviour[Timestamp]": 1451944118000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.95, "Customer_Behaviour[Age]": 60, "Customer_Behaviour[Area Income]": 36752.24, "Customer_Behaviour[Daily Internet Usage]": 157.04, "Customer_Behaviour[Ad Topic Line]": "Polarized tangible collaboration", "Customer_Behaviour[City]": "Youngfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1464096638000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.88, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Area Income]": 43444.86, "Customer_Behaviour[Daily Internet Usage]": 136.64, "Customer_Behaviour[Ad Topic Line]": "Virtual scalable secured line", "Customer_Behaviour[City]": "Port Melissaberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Singapore", "Customer_Behaviour[Timestamp]": 1454576017000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.73, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 39840.55, "Customer_Behaviour[Daily Internet Usage]": 153.76, "Customer_Behaviour[Ad Topic Line]": "Synchronized leadingedge help-desk", "Customer_Behaviour[City]": "Aliciatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Canada", "Customer_Behaviour[Timestamp]": 1456040568000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.86, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 32593.59, "Customer_Behaviour[Daily Internet Usage]": 145.85, "Customer_Behaviour[Ad Topic Line]": "Total 5thgeneration standardization", "Customer_Behaviour[City]": "Josephstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1466961386000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.08, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 41629.86, "Customer_Behaviour[Daily Internet Usage]": 123.91, "Customer_Behaviour[Ad Topic Line]": "Sharable grid-enabled matrix", "Customer_Behaviour[City]": "West Ericfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1451799273000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.23, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 43313.73, "Customer_Behaviour[Daily Internet Usage]": 106.86, "Customer_Behaviour[Ad Topic Line]": "Balanced asynchronous hierarchy", "Customer_Behaviour[City]": "New Brendafurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kenya", "Customer_Behaviour[Timestamp]": 1457460043000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.86, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 51633.34, "Customer_Behaviour[Daily Internet Usage]": 116.53, "Customer_Behaviour[Ad Topic Line]": "Face-to-face even-keeled website", "Customer_Behaviour[City]": "Kentmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1463465660000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.22, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 37345.24, "Customer_Behaviour[Daily Internet Usage]": 120.9, "Customer_Behaviour[Ad Topic Line]": "User-friendly client-server instruction set", "Customer_Behaviour[City]": "North Russellborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1455158402000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.51, "Customer_Behaviour[Age]": 58, "Customer_Behaviour[Area Income]": 39132.64, "Customer_Behaviour[Daily Internet Usage]": 140.83, "Customer_Behaviour[Ad Topic Line]": "Assimilated fault-tolerant hub", "Customer_Behaviour[City]": "Penatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1466042484000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.89, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 68519.96, "Customer_Behaviour[Daily Internet Usage]": 163.38, "Customer_Behaviour[Ad Topic Line]": "Compatible systemic function", "Customer_Behaviour[City]": "Hartmanchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cyprus", "Customer_Behaviour[Timestamp]": 1454473274000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.01, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 34127.21, "Customer_Behaviour[Daily Internet Usage]": 151.95, "Customer_Behaviour[Ad Topic Line]": "Front-line tangible alliance", "Customer_Behaviour[City]": "Hansenmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1466478881000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 53.3, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 44893.71, "Customer_Behaviour[Daily Internet Usage]": 111.94, "Customer_Behaviour[Ad Topic Line]": "Self-enabling optimal initiative", "Customer_Behaviour[City]": "West Jessicahaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mauritania", "Customer_Behaviour[Timestamp]": 1462568851000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 34.87, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 59621.02, "Customer_Behaviour[Daily Internet Usage]": 200.23, "Customer_Behaviour[Ad Topic Line]": "Configurable logistical Graphical User Interface", "Customer_Behaviour[City]": "Davilachester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Czech Republic", "Customer_Behaviour[Timestamp]": 1465753963000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.6, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 20856.54, "Customer_Behaviour[Daily Internet Usage]": 170.49, "Customer_Behaviour[Ad Topic Line]": "Virtual bandwidth-monitored initiative", "Customer_Behaviour[City]": "North Ricardotown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Chile", "Customer_Behaviour[Timestamp]": 1452497782000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.95, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 68737.75, "Customer_Behaviour[Daily Internet Usage]": 136.59, "Customer_Behaviour[Ad Topic Line]": "Cloned object-oriented benchmark", "Customer_Behaviour[City]": "Millerbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkmenistan", "Customer_Behaviour[Timestamp]": 1458810772000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.94, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 76893.84, "Customer_Behaviour[Daily Internet Usage]": 154.97, "Customer_Behaviour[Ad Topic Line]": "Fundamental fault-tolerant neural-net", "Customer_Behaviour[City]": "Garciaview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Latvia", "Customer_Behaviour[Timestamp]": 1455435024000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.7, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 53441.69, "Customer_Behaviour[Daily Internet Usage]": 133.99, "Customer_Behaviour[Ad Topic Line]": "Compatible intangible customer loyalty", "Customer_Behaviour[City]": "Williamstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkey", "Customer_Behaviour[Timestamp]": 1455132051000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.35, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 41356.31, "Customer_Behaviour[Daily Internet Usage]": 119.84, "Customer_Behaviour[Ad Topic Line]": "Distributed 3rdgeneration definition", "Customer_Behaviour[City]": "West Connor", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kazakhstan", "Customer_Behaviour[Timestamp]": 1461422078000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 34.86, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 49942.66, "Customer_Behaviour[Daily Internet Usage]": 154.75, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive cohesive budgetary management", "Customer_Behaviour[City]": "West Justin", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bahrain", "Customer_Behaviour[Timestamp]": 1466272592000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.42, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 74445.18, "Customer_Behaviour[Daily Internet Usage]": 143.94, "Customer_Behaviour[Ad Topic Line]": "Diverse executive groupware", "Customer_Behaviour[City]": "West Tinashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Pierre and Miquelon", "Customer_Behaviour[Timestamp]": 1468915158000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.32, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 49309.14, "Customer_Behaviour[Daily Internet Usage]": 239.52, "Customer_Behaviour[Ad Topic Line]": "Synergized cohesive array", "Customer_Behaviour[City]": "Jamesfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1466941938000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.77, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 58348.41, "Customer_Behaviour[Daily Internet Usage]": 123.51, "Customer_Behaviour[Ad Topic Line]": "Universal even-keeled analyzer", "Customer_Behaviour[City]": "Harveyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turks and Caicos Islands", "Customer_Behaviour[Timestamp]": 1462320093000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.32, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 62060.11, "Customer_Behaviour[Daily Internet Usage]": 128.17, "Customer_Behaviour[Ad Topic Line]": "Monitored real-time superstructure", "Customer_Behaviour[City]": "North Kevinside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1464038078000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.03, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 24030.06, "Customer_Behaviour[Daily Internet Usage]": 150.84, "Customer_Behaviour[Ad Topic Line]": "Automated static concept", "Customer_Behaviour[City]": "Christinetown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1469285243000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.44, "Customer_Behaviour[Age]": 56, "Customer_Behaviour[Area Income]": 43450.11, "Customer_Behaviour[Daily Internet Usage]": 168.27, "Customer_Behaviour[Ad Topic Line]": "Profit-focused attitude-oriented task-force", "Customer_Behaviour[City]": "Petersonfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tajikistan", "Customer_Behaviour[Timestamp]": 1455117797000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.2, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 25408.21, "Customer_Behaviour[Daily Internet Usage]": 161.16, "Customer_Behaviour[Ad Topic Line]": "Cross-platform multimedia algorithm", "Customer_Behaviour[City]": "New Lindaberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liechtenstein", "Customer_Behaviour[Timestamp]": 1461505335000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.7, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Area Income]": 62784.85, "Customer_Behaviour[Daily Internet Usage]": 123.13, "Customer_Behaviour[Ad Topic Line]": "Progressive non-volatile neural-net", "Customer_Behaviour[City]": "Port Crystal", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "France", "Customer_Behaviour[Timestamp]": 1452315202000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.84, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 42042.95, "Customer_Behaviour[Daily Internet Usage]": 121.05, "Customer_Behaviour[Ad Topic Line]": "Programmable uniform productivity", "Customer_Behaviour[City]": "South Jasminebury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Albania", "Customer_Behaviour[Timestamp]": 1466270606000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.25, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 54875.95, "Customer_Behaviour[Daily Internet Usage]": 109.77, "Customer_Behaviour[Ad Topic Line]": "De-engineered fault-tolerant database", "Customer_Behaviour[City]": "Charlottefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1467207305000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.02, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 50199.77, "Customer_Behaviour[Daily Internet Usage]": 125.22, "Customer_Behaviour[Ad Topic Line]": "Configurable bottom-line application", "Customer_Behaviour[City]": "West Lindseybury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Thailand", "Customer_Behaviour[Timestamp]": 1460526172000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.58, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 56694.12, "Customer_Behaviour[Daily Internet Usage]": 136.94, "Customer_Behaviour[Ad Topic Line]": "Proactive next generation knowledge user", "Customer_Behaviour[City]": "Lake David", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1456478328000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.66, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 27086.4, "Customer_Behaviour[Daily Internet Usage]": 156.54, "Customer_Behaviour[Ad Topic Line]": "Devolved responsive structure", "Customer_Behaviour[City]": "Tinaton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Honduras", "Customer_Behaviour[Timestamp]": 1468841611000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.37, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Area Income]": 32847.53, "Customer_Behaviour[Daily Internet Usage]": 144.27, "Customer_Behaviour[Ad Topic Line]": "De-engineered solution-oriented open architecture", "Customer_Behaviour[City]": "Alexanderfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Guiana", "Customer_Behaviour[Timestamp]": 1451952173000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.88, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 32006.82, "Customer_Behaviour[Daily Internet Usage]": 148.61, "Customer_Behaviour[Ad Topic Line]": "Customizable modular Internet solution", "Customer_Behaviour[City]": "West Pamela", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Northern Mariana Islands", "Customer_Behaviour[Timestamp]": 1463274186000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.67, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 48913.07, "Customer_Behaviour[Daily Internet Usage]": 133.18, "Customer_Behaviour[Ad Topic Line]": "Stand-alone encompassing throughput", "Customer_Behaviour[City]": "West Amanda", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lebanon", "Customer_Behaviour[Timestamp]": 1462440516000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.01, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 46339.25, "Customer_Behaviour[Daily Internet Usage]": 127.26, "Customer_Behaviour[Ad Topic Line]": "Re-engineered real-time success", "Customer_Behaviour[City]": "Garciamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tonga", "Customer_Behaviour[Timestamp]": 1467745185000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.05, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 66348.95, "Customer_Behaviour[Daily Internet Usage]": 141.36, "Customer_Behaviour[Ad Topic Line]": "Digitized contextually-based product", "Customer_Behaviour[City]": "South Kyle", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Southern Territories", "Customer_Behaviour[Timestamp]": 1462446569000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.53, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 66873.9, "Customer_Behaviour[Daily Internet Usage]": 167.22, "Customer_Behaviour[Ad Topic Line]": "Organic interactive support", "Customer_Behaviour[City]": "Combsstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Serbia", "Customer_Behaviour[Timestamp]": 1458919059000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.52, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 72270.88, "Customer_Behaviour[Daily Internet Usage]": 171.62, "Customer_Behaviour[Ad Topic Line]": "Function-based stable alliance", "Customer_Behaviour[City]": "Lake Allenville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "New Caledonia", "Customer_Behaviour[Timestamp]": 1453561333000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 52.62, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 73863.25, "Customer_Behaviour[Daily Internet Usage]": 176.52, "Customer_Behaviour[Ad Topic Line]": "Enterprise-wide foreground emulation", "Customer_Behaviour[City]": "Port Juan", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Seychelles", "Customer_Behaviour[Timestamp]": 1454358635000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.25, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 62378.05, "Customer_Behaviour[Daily Internet Usage]": 152.36, "Customer_Behaviour[Ad Topic Line]": "Customer-focused incremental system engine", "Customer_Behaviour[City]": "Michellefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mayotte", "Customer_Behaviour[Timestamp]": 1453570746000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 33.52, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 42191.61, "Customer_Behaviour[Daily Internet Usage]": 165.56, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented optimizing middleware", "Customer_Behaviour[City]": "Jessicahaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cambodia", "Customer_Behaviour[Timestamp]": 1462830878000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.92, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Area Income]": 23975.35, "Customer_Behaviour[Daily Internet Usage]": 161.16, "Customer_Behaviour[Ad Topic Line]": "Extended interactive model", "Customer_Behaviour[City]": "Roberttown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Pierre and Miquelon", "Customer_Behaviour[Timestamp]": 1465826391000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.55, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 41851.38, "Customer_Behaviour[Daily Internet Usage]": 169.4, "Customer_Behaviour[Ad Topic Line]": "Upgradable even-keeled challenge", "Customer_Behaviour[City]": "New Amanda", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1455866970000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.89, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 47160.53, "Customer_Behaviour[Daily Internet Usage]": 110.68, "Customer_Behaviour[Ad Topic Line]": "Horizontal national architecture", "Customer_Behaviour[City]": "North April", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "France", "Customer_Behaviour[Timestamp]": 1461112913000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.06, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 44174.25, "Customer_Behaviour[Daily Internet Usage]": 105.0, "Customer_Behaviour[Ad Topic Line]": "Adaptive contextually-based methodology", "Customer_Behaviour[City]": "Port Paultown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Austria", "Customer_Behaviour[Timestamp]": 1460469668000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.5, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 67050.16, "Customer_Behaviour[Daily Internet Usage]": 135.31, "Customer_Behaviour[Ad Topic Line]": "Configurable dynamic adapter", "Customer_Behaviour[City]": "East Vincentstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Zambia", "Customer_Behaviour[Timestamp]": 1458041148000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 36.87, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 29398.61, "Customer_Behaviour[Daily Internet Usage]": 195.91, "Customer_Behaviour[Ad Topic Line]": "Self-enabling incremental collaboration", "Customer_Behaviour[City]": "New Rebecca", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Anguilla", "Customer_Behaviour[Timestamp]": 1453981840000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.47, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 60953.93, "Customer_Behaviour[Daily Internet Usage]": 219.79, "Customer_Behaviour[Ad Topic Line]": "Secured scalable Graphical User Interface", "Customer_Behaviour[City]": "Port Brookeland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Martinique", "Customer_Behaviour[Timestamp]": 1467820599000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 36.31, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 57983.3, "Customer_Behaviour[Daily Internet Usage]": 168.92, "Customer_Behaviour[Ad Topic Line]": "Reverse-engineered well-modulated capability", "Customer_Behaviour[City]": "East Yvonnechester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Eritrea", "Customer_Behaviour[Timestamp]": 1460940573000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.23, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Area Income]": 52736.33, "Customer_Behaviour[Daily Internet Usage]": 115.35, "Customer_Behaviour[Ad Topic Line]": "Integrated coherent pricing structure", "Customer_Behaviour[City]": "Burgessside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mexico", "Customer_Behaviour[Timestamp]": 1468718036000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.91, "Customer_Behaviour[Age]": 19, "Customer_Behaviour[Area Income]": 53309.61, "Customer_Behaviour[Daily Internet Usage]": 184.94, "Customer_Behaviour[Ad Topic Line]": "Upgradable directional system engine", "Customer_Behaviour[City]": "Port Kathleenfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Nauru", "Customer_Behaviour[Timestamp]": 1465482246000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.87, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Area Income]": 43698.53, "Customer_Behaviour[Daily Internet Usage]": 126.97, "Customer_Behaviour[Ad Topic Line]": "Public-key non-volatile implementation", "Customer_Behaviour[City]": "Charlenetown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Barthelemy", "Customer_Behaviour[Timestamp]": 1464661038000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 37.45, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 31281.01, "Customer_Behaviour[Daily Internet Usage]": 167.86, "Customer_Behaviour[Ad Topic Line]": "Horizontal high-level concept", "Customer_Behaviour[City]": "South Johnnymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Antigua and Barbuda", "Customer_Behaviour[Timestamp]": 1460259016000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.84, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 45800.48, "Customer_Behaviour[Daily Internet Usage]": 111.59, "Customer_Behaviour[Ad Topic Line]": "Reduced multimedia project", "Customer_Behaviour[City]": "Hannaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1455002485000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.38, "Customer_Behaviour[Age]": 59, "Customer_Behaviour[Area Income]": 42362.49, "Customer_Behaviour[Daily Internet Usage]": 158.56, "Customer_Behaviour[Ad Topic Line]": "Object-based modular functionalities", "Customer_Behaviour[City]": "East Anthony", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1466183476000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.6, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 45400.5, "Customer_Behaviour[Daily Internet Usage]": 113.7, "Customer_Behaviour[Ad Topic Line]": "Organic asynchronous hierarchy", "Customer_Behaviour[City]": "Rogerburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1453965029000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.73, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 60812.77, "Customer_Behaviour[Daily Internet Usage]": 144.71, "Customer_Behaviour[Ad Topic Line]": "Proactive client-server productivity", "Customer_Behaviour[City]": "Andersonchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cote d'Ivoire", "Customer_Behaviour[Timestamp]": 1460155705000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.2, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 26023.99, "Customer_Behaviour[Daily Internet Usage]": 123.8, "Customer_Behaviour[Ad Topic Line]": "Balanced value-added database", "Customer_Behaviour[City]": "Meyersstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1466157526000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.56, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 62318.38, "Customer_Behaviour[Daily Internet Usage]": 125.45, "Customer_Behaviour[Ad Topic Line]": "Seamless composite budgetary management", "Customer_Behaviour[City]": "Michelleside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kenya", "Customer_Behaviour[Timestamp]": 1461618939000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.67, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 28019.09, "Customer_Behaviour[Daily Internet Usage]": 153.69, "Customer_Behaviour[Ad Topic Line]": "Face-to-face reciprocal methodology", "Customer_Behaviour[City]": "Port Brian", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Zimbabwe", "Customer_Behaviour[Timestamp]": 1462783495000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.88, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 19991.72, "Customer_Behaviour[Daily Internet Usage]": 136.85, "Customer_Behaviour[Ad Topic Line]": "Upgradable even-keeled hardware", "Customer_Behaviour[City]": "Kristintown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Madagascar", "Customer_Behaviour[Timestamp]": 1456790166000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.52, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 66929.03, "Customer_Behaviour[Daily Internet Usage]": 219.69, "Customer_Behaviour[Ad Topic Line]": "Versatile responsive knowledge user", "Customer_Behaviour[City]": "Davisfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Kitts and Nevis", "Customer_Behaviour[Timestamp]": 1459664242000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.34, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 31215.88, "Customer_Behaviour[Daily Internet Usage]": 148.93, "Customer_Behaviour[Ad Topic Line]": "Proactive radical support", "Customer_Behaviour[City]": "Alvaradoport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bangladesh", "Customer_Behaviour[Timestamp]": 1460929151000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.73, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 34191.23, "Customer_Behaviour[Daily Internet Usage]": 142.04, "Customer_Behaviour[Ad Topic Line]": "Versatile content-based protocol", "Customer_Behaviour[City]": "Monicaview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bangladesh", "Customer_Behaviour[Timestamp]": 1468081413000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.68, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 51067.54, "Customer_Behaviour[Daily Internet Usage]": 258.62, "Customer_Behaviour[Ad Topic Line]": "Seamless cohesive conglomeration", "Customer_Behaviour[City]": "Katieport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Faroe Islands", "Customer_Behaviour[Timestamp]": 1467118262000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.34, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 46693.76, "Customer_Behaviour[Daily Internet Usage]": 152.86, "Customer_Behaviour[Ad Topic Line]": "De-engineered actuating hierarchy", "Customer_Behaviour[City]": "East Brittanyville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1466267578000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.09, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 19345.36, "Customer_Behaviour[Daily Internet Usage]": 180.42, "Customer_Behaviour[Ad Topic Line]": "Balanced motivating help-desk", "Customer_Behaviour[City]": "West Travismouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Heard Island and McDonald Islands", "Customer_Behaviour[Timestamp]": 1464439117000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.99, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 37713.23, "Customer_Behaviour[Daily Internet Usage]": 108.15, "Customer_Behaviour[Ad Topic Line]": "Sharable optimal capacity", "Customer_Behaviour[City]": "Brownton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bahamas", "Customer_Behaviour[Timestamp]": 1468710534000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.03, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 57846.68, "Customer_Behaviour[Daily Internet Usage]": 120.85, "Customer_Behaviour[Ad Topic Line]": "Advanced systemic productivity", "Customer_Behaviour[City]": "Keithtown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Netherlands Antilles", "Customer_Behaviour[Timestamp]": 1455752820000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.03, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 28387.42, "Customer_Behaviour[Daily Internet Usage]": 129.33, "Customer_Behaviour[Ad Topic Line]": "User-friendly bandwidth-monitored attitude", "Customer_Behaviour[City]": "South Jade", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tuvalu", "Customer_Behaviour[Timestamp]": 1467191071000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.53, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 56759.48, "Customer_Behaviour[Daily Internet Usage]": 123.28, "Customer_Behaviour[Ad Topic Line]": "Networked even-keeled workforce", "Customer_Behaviour[City]": "Williamsport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1462789308000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.58, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 28028.74, "Customer_Behaviour[Daily Internet Usage]": 255.07, "Customer_Behaviour[Ad Topic Line]": "Cross-group value-added success", "Customer_Behaviour[City]": "Port Katelynview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Congo", "Customer_Behaviour[Timestamp]": 1459795019000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.66, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 72684.44, "Customer_Behaviour[Daily Internet Usage]": 139.42, "Customer_Behaviour[Ad Topic Line]": "Upgradable asymmetric emulation", "Customer_Behaviour[City]": "Lake Jesus", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Dominican Republic", "Customer_Behaviour[Timestamp]": 1455965571000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.04, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 65499.93, "Customer_Behaviour[Daily Internet Usage]": 147.92, "Customer_Behaviour[Ad Topic Line]": "Universal transitional Graphical User Interface", "Customer_Behaviour[City]": "Andrewborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Serbia", "Customer_Behaviour[Timestamp]": 1464638879000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.84, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 41232.89, "Customer_Behaviour[Daily Internet Usage]": 171.72, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered 3rdgeneration migration", "Customer_Behaviour[City]": "New Keithburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Trinidad and Tobago", "Customer_Behaviour[Timestamp]": 1457573779000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.87, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 51869.87, "Customer_Behaviour[Daily Internet Usage]": 119.65, "Customer_Behaviour[Ad Topic Line]": "Team-oriented dynamic forecast", "Customer_Behaviour[City]": "Kevinberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1457648932000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.41, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 59144.02, "Customer_Behaviour[Daily Internet Usage]": 160.73, "Customer_Behaviour[Ad Topic Line]": "Customer-focused zero-defect process improvement", "Customer_Behaviour[City]": "Lovemouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Egypt", "Customer_Behaviour[Timestamp]": 1454685997000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.92, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 33951.63, "Customer_Behaviour[Daily Internet Usage]": 145.08, "Customer_Behaviour[Ad Topic Line]": "Focused systemic benchmark", "Customer_Behaviour[City]": "Taylorhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1464730906000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.01, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 48347.64, "Customer_Behaviour[Daily Internet Usage]": 127.37, "Customer_Behaviour[Ad Topic Line]": "Organized 24/7 middleware", "Customer_Behaviour[City]": "Butlerfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United States of America", "Customer_Behaviour[Timestamp]": 1465637872000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.99, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 49282.87, "Customer_Behaviour[Daily Internet Usage]": 177.46, "Customer_Behaviour[Ad Topic Line]": "Phased full-range hardware", "Customer_Behaviour[City]": "Masseyshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ecuador", "Customer_Behaviour[Timestamp]": 1462045324000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.38, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 25603.93, "Customer_Behaviour[Daily Internet Usage]": 159.6, "Customer_Behaviour[Ad Topic Line]": "Polarized analyzing intranet", "Customer_Behaviour[City]": "Port Blake", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Spain", "Customer_Behaviour[Timestamp]": 1468805797000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.59, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 28265.81, "Customer_Behaviour[Daily Internet Usage]": 121.81, "Customer_Behaviour[Ad Topic Line]": "Digitized disintermediate ability", "Customer_Behaviour[City]": "Brandymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Indonesia", "Customer_Behaviour[Timestamp]": 1458628898000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.84, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 70592.81, "Customer_Behaviour[Daily Internet Usage]": 167.42, "Customer_Behaviour[Ad Topic Line]": "Public-key real-time definition", "Customer_Behaviour[City]": "Port Jessica", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1467105546000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.48, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 29359.2, "Customer_Behaviour[Daily Internet Usage]": 141.34, "Customer_Behaviour[Ad Topic Line]": "Reverse-engineered 24hour hardware", "Customer_Behaviour[City]": "Yuton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Eritrea", "Customer_Behaviour[Timestamp]": 1467245973000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.2, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 51315.38, "Customer_Behaviour[Daily Internet Usage]": 119.3, "Customer_Behaviour[Ad Topic Line]": "Distributed maximized ability", "Customer_Behaviour[City]": "Welchshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belgium", "Customer_Behaviour[Timestamp]": 1459683516000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.49, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Area Income]": 43974.49, "Customer_Behaviour[Daily Internet Usage]": 159.77, "Customer_Behaviour[Ad Topic Line]": "Fully-configurable holistic throughput", "Customer_Behaviour[City]": "Timothyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "American Samoa", "Customer_Behaviour[Timestamp]": 1460126144000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.19, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 33987.27, "Customer_Behaviour[Daily Internet Usage]": 117.3, "Customer_Behaviour[Ad Topic Line]": "Progressive uniform budgetary management", "Customer_Behaviour[City]": "Lake Stephenborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Thailand", "Customer_Behaviour[Timestamp]": 1458932555000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.12, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 28210.03, "Customer_Behaviour[Daily Internet Usage]": 124.54, "Customer_Behaviour[Ad Topic Line]": "Synergistic stable infrastructure", "Customer_Behaviour[City]": "Silvaton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greece", "Customer_Behaviour[Timestamp]": 1463088726000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.7, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 49158.5, "Customer_Behaviour[Daily Internet Usage]": 120.25, "Customer_Behaviour[Ad Topic Line]": "Expanded zero administration attitude", "Customer_Behaviour[City]": "Florestown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guernsey", "Customer_Behaviour[Timestamp]": 1462889551000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.7, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 42898.21, "Customer_Behaviour[Daily Internet Usage]": 126.95, "Customer_Behaviour[Ad Topic Line]": "Innovative regional structure", "Customer_Behaviour[City]": "Jensenton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1464327327000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.35, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 70232.95, "Customer_Behaviour[Daily Internet Usage]": 132.63, "Customer_Behaviour[Ad Topic Line]": "Universal asymmetric workforce", "Customer_Behaviour[City]": "Rivasland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Macao", "Customer_Behaviour[Timestamp]": 1465766513000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.56, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 63102.19, "Customer_Behaviour[Daily Internet Usage]": 124.85, "Customer_Behaviour[Ad Topic Line]": "Business-focused client-driven forecast", "Customer_Behaviour[City]": "Helenborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1452175131000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.21, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 47575.44, "Customer_Behaviour[Daily Internet Usage]": 105.94, "Customer_Behaviour[Ad Topic Line]": "Open-source global strategy", "Customer_Behaviour[City]": "Pattymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Djibouti", "Customer_Behaviour[Timestamp]": 1454864795000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.12, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 39031.89, "Customer_Behaviour[Daily Internet Usage]": 113.8, "Customer_Behaviour[Ad Topic Line]": "Stand-alone motivating moratorium", "Customer_Behaviour[City]": "South Alexisborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cote d'Ivoire", "Customer_Behaviour[Timestamp]": 1455521261000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.99, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 61068.26, "Customer_Behaviour[Daily Internet Usage]": 121.07, "Customer_Behaviour[Ad Topic Line]": "Profound bottom-line standardization", "Customer_Behaviour[City]": "New Charleschester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Romania", "Customer_Behaviour[Timestamp]": 1458812040000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.3, "Customer_Behaviour[Age]": 58, "Customer_Behaviour[Area Income]": 49090.51, "Customer_Behaviour[Daily Internet Usage]": 173.43, "Customer_Behaviour[Ad Topic Line]": "Managed client-server access", "Customer_Behaviour[City]": "East Breannafurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cayman Islands", "Customer_Behaviour[Timestamp]": 1459800072000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.86, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 18819.34, "Customer_Behaviour[Daily Internet Usage]": 166.86, "Customer_Behaviour[Ad Topic Line]": "Horizontal modular success", "Customer_Behaviour[City]": "Estesfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1467998041000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.79, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 47997.75, "Customer_Behaviour[Daily Internet Usage]": 132.08, "Customer_Behaviour[Ad Topic Line]": "Team-oriented zero-defect initiative", "Customer_Behaviour[City]": "South Aaron", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "American Samoa", "Customer_Behaviour[Timestamp]": 1454287949000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.61, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 65856.74, "Customer_Behaviour[Daily Internet Usage]": 136.18, "Customer_Behaviour[Ad Topic Line]": "Progressive intermediate throughput", "Customer_Behaviour[City]": "Catherinefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ethiopia", "Customer_Behaviour[Timestamp]": 1451679469000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.94, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 68447.17, "Customer_Behaviour[Daily Internet Usage]": 128.16, "Customer_Behaviour[Ad Topic Line]": "Assimilated next generation firmware", "Customer_Behaviour[City]": "North Kimberly", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Morocco", "Customer_Behaviour[Timestamp]": 1462062193000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.65, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 63649.04, "Customer_Behaviour[Daily Internet Usage]": 138.87, "Customer_Behaviour[Ad Topic Line]": "Business-focused background synergy", "Customer_Behaviour[City]": "North Aaronburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Western Sahara", "Customer_Behaviour[Timestamp]": 1462746267000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.61, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Area Income]": 27241.11, "Customer_Behaviour[Daily Internet Usage]": 156.99, "Customer_Behaviour[Ad Topic Line]": "Ergonomic methodical encoding", "Customer_Behaviour[City]": "Danielview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "New Zealand", "Customer_Behaviour[Timestamp]": 1459835655000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.6, "Customer_Behaviour[Age]": 55, "Customer_Behaviour[Area Income]": 55121.65, "Customer_Behaviour[Daily Internet Usage]": 168.29, "Customer_Behaviour[Ad Topic Line]": "Switchable analyzing encryption", "Customer_Behaviour[City]": "Lake Ian", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cambodia", "Customer_Behaviour[Timestamp]": 1468260763000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.39, "Customer_Behaviour[Age]": 58, "Customer_Behaviour[Area Income]": 32252.38, "Customer_Behaviour[Daily Internet Usage]": 154.23, "Customer_Behaviour[Ad Topic Line]": "Programmable uniform website", "Customer_Behaviour[City]": "West Shannon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1455444409000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.69, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 37345.34, "Customer_Behaviour[Daily Internet Usage]": 109.22, "Customer_Behaviour[Ad Topic Line]": "Fundamental methodical support", "Customer_Behaviour[City]": "South Jackieberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guam", "Customer_Behaviour[Timestamp]": 1459475832000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 64.75, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 63001.03, "Customer_Behaviour[Daily Internet Usage]": 117.66, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered stable leverage", "Customer_Behaviour[City]": "North Sarashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1459905548000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.9, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 48467.68, "Customer_Behaviour[Daily Internet Usage]": 114.53, "Customer_Behaviour[Ad Topic Line]": "Cross-group human-resource time-frame", "Customer_Behaviour[City]": "East Jessefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Kingdom", "Customer_Behaviour[Timestamp]": 1456340891000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.32, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 27964.6, "Customer_Behaviour[Daily Internet Usage]": 125.65, "Customer_Behaviour[Ad Topic Line]": "Realigned intangible benchmark", "Customer_Behaviour[City]": "Rochabury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Yemen", "Customer_Behaviour[Timestamp]": 1461781530000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.66, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 49101.67, "Customer_Behaviour[Daily Internet Usage]": 118.16, "Customer_Behaviour[Ad Topic Line]": "Grass-roots mission-critical emulation", "Customer_Behaviour[City]": "Wrightview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Antigua and Barbuda", "Customer_Behaviour[Timestamp]": 1457489237000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.86, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Area Income]": 53188.69, "Customer_Behaviour[Daily Internet Usage]": 134.46, "Customer_Behaviour[Ad Topic Line]": "Proactive encompassing paradigm", "Customer_Behaviour[City]": "Perryburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Guiana", "Customer_Behaviour[Timestamp]": 1452360783000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.15, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 36424.94, "Customer_Behaviour[Daily Internet Usage]": 112.72, "Customer_Behaviour[Ad Topic Line]": "Automated multi-state toolset", "Customer_Behaviour[City]": "Richardsonshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cyprus", "Customer_Behaviour[Timestamp]": 1469319736000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.72, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 28275.48, "Customer_Behaviour[Daily Internet Usage]": 120.12, "Customer_Behaviour[Ad Topic Line]": "Managed didactic flexibility", "Customer_Behaviour[City]": "Kimberlymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Pierre and Miquelon", "Customer_Behaviour[Timestamp]": 1455371873000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.04, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 48098.86, "Customer_Behaviour[Daily Internet Usage]": 161.58, "Customer_Behaviour[Ad Topic Line]": "Cross-platform neutral system engine", "Customer_Behaviour[City]": "Meghanchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Poland", "Customer_Behaviour[Timestamp]": 1462703108000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.6, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 68448.94, "Customer_Behaviour[Daily Internet Usage]": 135.08, "Customer_Behaviour[Ad Topic Line]": "Focused high-level frame", "Customer_Behaviour[City]": "Tammyshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1455735057000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.83, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 35684.82, "Customer_Behaviour[Daily Internet Usage]": 129.01, "Customer_Behaviour[Ad Topic Line]": "Total human-resource flexibility", "Customer_Behaviour[City]": "Greerport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saudi Arabia", "Customer_Behaviour[Timestamp]": 1454045956000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.86, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 51171.23, "Customer_Behaviour[Daily Internet Usage]": 161.24, "Customer_Behaviour[Ad Topic Line]": "Ergonomic zero tolerance encoding", "Customer_Behaviour[City]": "East Sharon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ghana", "Customer_Behaviour[Timestamp]": 1456235748000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.77, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 58847.07, "Customer_Behaviour[Daily Internet Usage]": 141.13, "Customer_Behaviour[Ad Topic Line]": "Cross-platform zero-defect structure", "Customer_Behaviour[City]": "Johnstonmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iran", "Customer_Behaviour[Timestamp]": 1468063082000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.2, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 57739.03, "Customer_Behaviour[Daily Internet Usage]": 110.66, "Customer_Behaviour[Ad Topic Line]": "Innovative maximized groupware", "Customer_Behaviour[City]": "East Heatherside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "New Zealand", "Customer_Behaviour[Timestamp]": 1458385776000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 38.63, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Area Income]": 57777.11, "Customer_Behaviour[Daily Internet Usage]": 222.11, "Customer_Behaviour[Ad Topic Line]": "Cross-platform logistical pricing structure", "Customer_Behaviour[City]": "Chapmanmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1460026265000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.91, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 51691.55, "Customer_Behaviour[Daily Internet Usage]": 181.02, "Customer_Behaviour[Ad Topic Line]": "Future-proofed fresh-thinking conglomeration", "Customer_Behaviour[City]": "Elizabethstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1468765564000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.01, "Customer_Behaviour[Age]": 53, "Customer_Behaviour[Area Income]": 51463.17, "Customer_Behaviour[Daily Internet Usage]": 161.77, "Customer_Behaviour[Ad Topic Line]": "Sharable multimedia conglomeration", "Customer_Behaviour[City]": "East Brettton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ecuador", "Customer_Behaviour[Timestamp]": 1456869997000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.55, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 51593.46, "Customer_Behaviour[Daily Internet Usage]": 151.18, "Customer_Behaviour[Ad Topic Line]": "Robust object-oriented Graphic Interface", "Customer_Behaviour[City]": "Westshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Micronesia", "Customer_Behaviour[Timestamp]": 1452717515000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 53.54, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 47314.45, "Customer_Behaviour[Daily Internet Usage]": 108.03, "Customer_Behaviour[Ad Topic Line]": "Optimized systemic capability", "Customer_Behaviour[City]": "Julietown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Palau", "Customer_Behaviour[Timestamp]": 1466679901000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.19, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 55358.88, "Customer_Behaviour[Daily Internet Usage]": 136.99, "Customer_Behaviour[Ad Topic Line]": "Right-sized system-worthy project", "Customer_Behaviour[City]": "Adamsbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "France", "Customer_Behaviour[Timestamp]": 1453085473000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.76, "Customer_Behaviour[Age]": 51, "Customer_Behaviour[Area Income]": 45522.44, "Customer_Behaviour[Daily Internet Usage]": 195.07, "Customer_Behaviour[Ad Topic Line]": "Versatile optimizing projection", "Customer_Behaviour[City]": "North Angelastad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1468817602000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.36, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 46931.03, "Customer_Behaviour[Daily Internet Usage]": 110.84, "Customer_Behaviour[Ad Topic Line]": "Universal multi-state system engine", "Customer_Behaviour[City]": "Amandafort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belarus", "Customer_Behaviour[Timestamp]": 1467335524000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 61.04, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 75805.12, "Customer_Behaviour[Daily Internet Usage]": 149.21, "Customer_Behaviour[Ad Topic Line]": "Operative didactic Local Area Network", "Customer_Behaviour[City]": "Ronaldport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Benin", "Customer_Behaviour[Timestamp]": 1462203088000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 44.33, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 43386.07, "Customer_Behaviour[Daily Internet Usage]": 120.63, "Customer_Behaviour[Ad Topic Line]": "Ergonomic empowering frame", "Customer_Behaviour[City]": "Estradashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guyana", "Customer_Behaviour[Timestamp]": 1452763679000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 52.84, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 28495.21, "Customer_Behaviour[Daily Internet Usage]": 122.31, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered mobile encoding", "Customer_Behaviour[City]": "Hobbsbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1468664044000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.04, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 67323.0, "Customer_Behaviour[Daily Internet Usage]": 182.11, "Customer_Behaviour[Ad Topic Line]": "Organic logistical adapter", "Customer_Behaviour[City]": "New Christinatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Qatar", "Customer_Behaviour[Timestamp]": 1454518473000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.03, "Customer_Behaviour[Age]": 55, "Customer_Behaviour[Area Income]": 28186.65, "Customer_Behaviour[Daily Internet Usage]": 150.77, "Customer_Behaviour[Ad Topic Line]": "Programmable didactic capacity", "Customer_Behaviour[City]": "Port Georgebury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1457767116000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.18, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 65899.68, "Customer_Behaviour[Daily Internet Usage]": 126.44, "Customer_Behaviour[Ad Topic Line]": "Reactive impactful challenge", "Customer_Behaviour[City]": "West Leahton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1463702448000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.57, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 23410.75, "Customer_Behaviour[Daily Internet Usage]": 130.86, "Customer_Behaviour[Ad Topic Line]": "Implemented asynchronous application", "Customer_Behaviour[City]": "Reginamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belgium", "Customer_Behaviour[Timestamp]": 1460732837000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.06, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 43241.19, "Customer_Behaviour[Daily Internet Usage]": 131.55, "Customer_Behaviour[Ad Topic Line]": "Multi-layered secondary software", "Customer_Behaviour[City]": "Jamesmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1467168524000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.15, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 41335.84, "Customer_Behaviour[Daily Internet Usage]": 117.3, "Customer_Behaviour[Ad Topic Line]": "Expanded value-added emulation", "Customer_Behaviour[City]": "Brandonbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hong Kong", "Customer_Behaviour[Timestamp]": 1468536209000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.19, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Area Income]": 52581.16, "Customer_Behaviour[Daily Internet Usage]": 173.05, "Customer_Behaviour[Ad Topic Line]": "Stand-alone empowering benchmark", "Customer_Behaviour[City]": "Leahside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guatemala", "Customer_Behaviour[Timestamp]": 1453583757000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.77, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Area Income]": 57667.99, "Customer_Behaviour[Daily Internet Usage]": 132.27, "Customer_Behaviour[Ad Topic Line]": "Face-to-face dedicated flexibility", "Customer_Behaviour[City]": "Port Sherrystad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malta", "Customer_Behaviour[Timestamp]": 1464751070000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.33, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 31072.44, "Customer_Behaviour[Daily Internet Usage]": 169.4, "Customer_Behaviour[Ad Topic Line]": "Optimized attitude-oriented initiative", "Customer_Behaviour[City]": "Josephmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Japan", "Customer_Behaviour[Timestamp]": 1458024861000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.8, "Customer_Behaviour[Age]": 57, "Customer_Behaviour[Area Income]": 43708.88, "Customer_Behaviour[Daily Internet Usage]": 152.94, "Customer_Behaviour[Ad Topic Line]": "Virtual executive implementation", "Customer_Behaviour[City]": "Destinyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Namibia", "Customer_Behaviour[Timestamp]": 1455460681000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.44, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 48453.55, "Customer_Behaviour[Daily Internet Usage]": 119.27, "Customer_Behaviour[Ad Topic Line]": "Enhanced intermediate standardization", "Customer_Behaviour[City]": "Mezaton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1462338097000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.19, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 61004.51, "Customer_Behaviour[Daily Internet Usage]": 123.08, "Customer_Behaviour[Ad Topic Line]": "Versatile solution-oriented secured line", "Customer_Behaviour[City]": "North Mark", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1463055072000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.59, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 58677.69, "Customer_Behaviour[Daily Internet Usage]": 113.69, "Customer_Behaviour[Ad Topic Line]": "User-centric solution-oriented emulation", "Customer_Behaviour[City]": "Brittanyborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Monaco", "Customer_Behaviour[Timestamp]": 1469251299000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.57, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 56435.6, "Customer_Behaviour[Daily Internet Usage]": 131.98, "Customer_Behaviour[Ad Topic Line]": "Multi-channeled non-volatile website", "Customer_Behaviour[City]": "West Ericaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1453554858000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.23, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Area Income]": 41521.28, "Customer_Behaviour[Daily Internet Usage]": 122.59, "Customer_Behaviour[Ad Topic Line]": "Self-enabling zero administration neural-net", "Customer_Behaviour[City]": "Ericksonmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sweden", "Customer_Behaviour[Timestamp]": 1451994797000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.35, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 47510.42, "Customer_Behaviour[Daily Internet Usage]": 118.69, "Customer_Behaviour[Ad Topic Line]": "Sharable secondary Graphical User Interface", "Customer_Behaviour[City]": "East Heidi", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Zimbabwe", "Customer_Behaviour[Timestamp]": 1461880705000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.99, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 62466.1, "Customer_Behaviour[Daily Internet Usage]": 124.58, "Customer_Behaviour[Ad Topic Line]": "Innovative homogeneous alliance", "Customer_Behaviour[City]": "New Angelview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Costa Rica", "Customer_Behaviour[Timestamp]": 1455266775000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.8, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 59683.16, "Customer_Behaviour[Daily Internet Usage]": 248.51, "Customer_Behaviour[Ad Topic Line]": "Diverse leadingedge website", "Customer_Behaviour[City]": "Lake Brandonview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1468243417000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.13, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 41097.17, "Customer_Behaviour[Daily Internet Usage]": 120.49, "Customer_Behaviour[Ad Topic Line]": "Optimized intermediate help-desk", "Customer_Behaviour[City]": "Morganport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1454028319000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.11, "Customer_Behaviour[Age]": 58, "Customer_Behaviour[Area Income]": 39799.73, "Customer_Behaviour[Daily Internet Usage]": 195.69, "Customer_Behaviour[Ad Topic Line]": "Sharable reciprocal project", "Customer_Behaviour[City]": "Browntown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Netherlands", "Customer_Behaviour[Timestamp]": 1452011204000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.93, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 57887.64, "Customer_Behaviour[Daily Internet Usage]": 111.8, "Customer_Behaviour[Ad Topic Line]": "Reactive demand-driven strategy", "Customer_Behaviour[City]": "Bradleyside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sierra Leone", "Customer_Behaviour[Timestamp]": 1465518915000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 36.56, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 42838.29, "Customer_Behaviour[Daily Internet Usage]": 195.89, "Customer_Behaviour[Ad Topic Line]": "Team-oriented bi-directional secured line", "Customer_Behaviour[City]": "West Ryan", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Uganda", "Customer_Behaviour[Timestamp]": 1451661264000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.58, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 49822.78, "Customer_Behaviour[Daily Internet Usage]": 115.91, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented system-worthy forecast", "Customer_Behaviour[City]": "Johnsontown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brunei Darussalam", "Customer_Behaviour[Timestamp]": 1461505570000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.6, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 48206.04, "Customer_Behaviour[Daily Internet Usage]": 185.47, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered interactive neural-net", "Customer_Behaviour[City]": "New Henry", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mayotte", "Customer_Behaviour[Timestamp]": 1462214221000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.46, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 66187.58, "Customer_Behaviour[Daily Internet Usage]": 151.63, "Customer_Behaviour[Ad Topic Line]": "Ameliorated leadingedge help-desk", "Customer_Behaviour[City]": "South Lisa", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Albania", "Customer_Behaviour[Timestamp]": 1460055177000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 52.67, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 14775.5, "Customer_Behaviour[Daily Internet Usage]": 191.26, "Customer_Behaviour[Ad Topic Line]": "Persevering 5thgeneration knowledge user", "Customer_Behaviour[City]": "New Hollyberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jersey", "Customer_Behaviour[Timestamp]": 1463639858000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.96, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 77143.61, "Customer_Behaviour[Daily Internet Usage]": 197.66, "Customer_Behaviour[Ad Topic Line]": "Expanded modular application", "Customer_Behaviour[City]": "Staceyfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1452760024000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.49, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 36884.23, "Customer_Behaviour[Daily Internet Usage]": 170.04, "Customer_Behaviour[Ad Topic Line]": "Front-line actuating functionalities", "Customer_Behaviour[City]": "North Brittanyburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liechtenstein", "Customer_Behaviour[Timestamp]": 1460531256000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.35, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 44304.13, "Customer_Behaviour[Daily Internet Usage]": 119.86, "Customer_Behaviour[Ad Topic Line]": "Inverse stable synergy", "Customer_Behaviour[City]": "Lake Charlottestad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kenya", "Customer_Behaviour[Timestamp]": 1460061482000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.63, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 25767.16, "Customer_Behaviour[Daily Internet Usage]": 142.23, "Customer_Behaviour[Ad Topic Line]": "Operative full-range forecast", "Customer_Behaviour[City]": "Tammymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Luxembourg", "Customer_Behaviour[Timestamp]": 1457622464000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.84, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 37605.11, "Customer_Behaviour[Daily Internet Usage]": 139.32, "Customer_Behaviour[Ad Topic Line]": "Operative secondary functionalities", "Customer_Behaviour[City]": "Lake Vanessa", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cyprus", "Customer_Behaviour[Timestamp]": 1462091232000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.32, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 67682.32, "Customer_Behaviour[Daily Internet Usage]": 127.65, "Customer_Behaviour[Ad Topic Line]": "Managed 24hour analyzer", "Customer_Behaviour[City]": "Port Douglasborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Netherlands", "Customer_Behaviour[Timestamp]": 1458292119000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 53.22, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 44307.18, "Customer_Behaviour[Daily Internet Usage]": 108.85, "Customer_Behaviour[Ad Topic Line]": "Horizontal client-server database", "Customer_Behaviour[City]": "Port Aprilville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United States Virgin Islands", "Customer_Behaviour[Timestamp]": 1464242637000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.51, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 23942.61, "Customer_Behaviour[Daily Internet Usage]": 127.2, "Customer_Behaviour[Ad Topic Line]": "Digitized homogeneous core", "Customer_Behaviour[City]": "Lake Faith", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Western Sahara", "Customer_Behaviour[Timestamp]": 1461939000000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 36.91, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Area Income]": 54645.2, "Customer_Behaviour[Daily Internet Usage]": 159.69, "Customer_Behaviour[Ad Topic Line]": "Ameliorated coherent open architecture", "Customer_Behaviour[City]": "North Samantha", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Zimbabwe", "Customer_Behaviour[Timestamp]": 1456297980000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.47, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 46780.09, "Customer_Behaviour[Daily Internet Usage]": 141.52, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented bifurcated contingency", "Customer_Behaviour[City]": "Holderville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Chad", "Customer_Behaviour[Timestamp]": 1459021066000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.51, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 47682.28, "Customer_Behaviour[Daily Internet Usage]": 105.71, "Customer_Behaviour[Ad Topic Line]": "Re-engineered zero-defect open architecture", "Customer_Behaviour[City]": "Jeffreymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Moldova", "Customer_Behaviour[Timestamp]": 1459414423000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.49, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 47968.32, "Customer_Behaviour[Daily Internet Usage]": 124.67, "Customer_Behaviour[Ad Topic Line]": "Synchronized full-range portal", "Customer_Behaviour[City]": "Smithside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Vietnam", "Customer_Behaviour[Timestamp]": 1465906090000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.69, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 48758.92, "Customer_Behaviour[Daily Internet Usage]": 108.27, "Customer_Behaviour[Ad Topic Line]": "Integrated encompassing support", "Customer_Behaviour[City]": "Vanessastad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jersey", "Customer_Behaviour[Timestamp]": 1462994022000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.21, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 49206.4, "Customer_Behaviour[Daily Internet Usage]": 115.6, "Customer_Behaviour[Ad Topic Line]": "Realigned 24/7 core", "Customer_Behaviour[City]": "Carterland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mexico", "Customer_Behaviour[Timestamp]": 1456630475000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.46, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 56683.32, "Customer_Behaviour[Daily Internet Usage]": 113.53, "Customer_Behaviour[Ad Topic Line]": "Enhanced tertiary utilization", "Customer_Behaviour[City]": "Cervantesshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malawi", "Customer_Behaviour[Timestamp]": 1462094605000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 61.88, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 38260.89, "Customer_Behaviour[Daily Internet Usage]": 108.18, "Customer_Behaviour[Ad Topic Line]": "Balanced disintermediate conglomeration", "Customer_Behaviour[City]": "North Debrashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1464595347000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.03, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 35764.49, "Customer_Behaviour[Daily Internet Usage]": 255.57, "Customer_Behaviour[Ad Topic Line]": "Networked local secured line", "Customer_Behaviour[City]": "East Mike", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Uruguay", "Customer_Behaviour[Timestamp]": 1464545520000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.87, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 62939.5, "Customer_Behaviour[Daily Internet Usage]": 190.41, "Customer_Behaviour[Ad Topic Line]": "Programmable empowering orchestration", "Customer_Behaviour[City]": "North Angelatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1462900427000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.34, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 32549.95, "Customer_Behaviour[Daily Internet Usage]": 173.75, "Customer_Behaviour[Ad Topic Line]": "Object-based motivating instruction set", "Customer_Behaviour[City]": "Clarkborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tokelau", "Customer_Behaviour[Timestamp]": 1459315778000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.39, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 51257.26, "Customer_Behaviour[Daily Internet Usage]": 107.19, "Customer_Behaviour[Ad Topic Line]": "Realigned intermediate application", "Customer_Behaviour[City]": "Josephberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Armenia", "Customer_Behaviour[Timestamp]": 1453642898000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.53, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 67575.12, "Customer_Behaviour[Daily Internet Usage]": 158.81, "Customer_Behaviour[Ad Topic Line]": "Optional tangible productivity", "Customer_Behaviour[City]": "South Jeanneport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mayotte", "Customer_Behaviour[Timestamp]": 1463963574000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.84, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 34903.67, "Customer_Behaviour[Daily Internet Usage]": 123.22, "Customer_Behaviour[Ad Topic Line]": "Virtual homogeneous budgetary management", "Customer_Behaviour[City]": "Jonesshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Macao", "Customer_Behaviour[Timestamp]": 1463337890000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 37.74, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 65773.49, "Customer_Behaviour[Daily Internet Usage]": 190.95, "Customer_Behaviour[Ad Topic Line]": "Balanced uniform algorithm", "Customer_Behaviour[City]": "Lake James", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Denmark", "Customer_Behaviour[Timestamp]": 1464353137000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.36, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 49597.08, "Customer_Behaviour[Daily Internet Usage]": 115.79, "Customer_Behaviour[Ad Topic Line]": "Fully-configurable asynchronous firmware", "Customer_Behaviour[City]": "Port Jennifer", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "El Salvador", "Customer_Behaviour[Timestamp]": 1456466416000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.46, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 42078.89, "Customer_Behaviour[Daily Internet Usage]": 108.1, "Customer_Behaviour[Ad Topic Line]": "Exclusive systematic algorithm", "Customer_Behaviour[City]": "Chrismouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1456096031000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.66, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 46197.59, "Customer_Behaviour[Daily Internet Usage]": 151.72, "Customer_Behaviour[Ad Topic Line]": "Exclusive cohesive intranet", "Customer_Behaviour[City]": "Port Beth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1461938906000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.78, "Customer_Behaviour[Age]": 51, "Customer_Behaviour[Area Income]": 49957.0, "Customer_Behaviour[Daily Internet Usage]": 122.04, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented asynchronous Internet solution", "Customer_Behaviour[City]": "West David", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1455210127000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.47, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 24078.93, "Customer_Behaviour[Daily Internet Usage]": 203.9, "Customer_Behaviour[Ad Topic Line]": "Sharable 5thgeneration access", "Customer_Behaviour[City]": "Fraziershire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1469173483000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.62, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 53647.81, "Customer_Behaviour[Daily Internet Usage]": 121.28, "Customer_Behaviour[Ad Topic Line]": "Monitored homogeneous artificial intelligence", "Customer_Behaviour[City]": "Robertfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Macao", "Customer_Behaviour[Timestamp]": 1466908455000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 37.01, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 48826.14, "Customer_Behaviour[Daily Internet Usage]": 216.01, "Customer_Behaviour[Ad Topic Line]": "Secured encompassing Graphical User Interface", "Customer_Behaviour[City]": "Port Derekberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "San Marino", "Customer_Behaviour[Timestamp]": 1458441853000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.91, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 21773.22, "Customer_Behaviour[Daily Internet Usage]": 146.44, "Customer_Behaviour[Ad Topic Line]": "Team-oriented executive core", "Customer_Behaviour[City]": "West Randy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Norfolk Island", "Customer_Behaviour[Timestamp]": 1459487848000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.56, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 50628.31, "Customer_Behaviour[Daily Internet Usage]": 109.98, "Customer_Behaviour[Ad Topic Line]": "Reduced background data-warehouse", "Customer_Behaviour[City]": "Zacharyton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Paraguay", "Customer_Behaviour[Timestamp]": 1455254419000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.0, "Customer_Behaviour[Age]": 56, "Customer_Behaviour[Area Income]": 50491.45, "Customer_Behaviour[Daily Internet Usage]": 149.53, "Customer_Behaviour[Ad Topic Line]": "Public-key bi-directional Graphical User Interface", "Customer_Behaviour[City]": "New Marcusbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bahamas", "Customer_Behaviour[Timestamp]": 1461962421000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.98, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 43241.88, "Customer_Behaviour[Daily Internet Usage]": 150.79, "Customer_Behaviour[Ad Topic Line]": "Front-line fresh-thinking installation", "Customer_Behaviour[City]": "Huffmanchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ethiopia", "Customer_Behaviour[Timestamp]": 1467064307000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.49, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 38645.4, "Customer_Behaviour[Daily Internet Usage]": 130.84, "Customer_Behaviour[Ad Topic Line]": "Assimilated multi-state paradigm", "Customer_Behaviour[City]": "Williamsfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Dominican Republic", "Customer_Behaviour[Timestamp]": 1464656317000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 61.76, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 33553.9, "Customer_Behaviour[Daily Internet Usage]": 114.69, "Customer_Behaviour[Ad Topic Line]": "Open-source local approach", "Customer_Behaviour[City]": "Edwardsport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jamaica", "Customer_Behaviour[Timestamp]": 1464339231000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.3, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 63071.34, "Customer_Behaviour[Daily Internet Usage]": 116.19, "Customer_Behaviour[Ad Topic Line]": "Polarized intangible encoding", "Customer_Behaviour[City]": "Lake Evantown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Barthelemy", "Customer_Behaviour[Timestamp]": 1462778007000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.18, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 39211.49, "Customer_Behaviour[Daily Internet Usage]": 107.92, "Customer_Behaviour[Ad Topic Line]": "Reactive upward-trending migration", "Customer_Behaviour[City]": "Hansenland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Georgia", "Customer_Behaviour[Timestamp]": 1457179421000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.6, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Area Income]": 65956.71, "Customer_Behaviour[Daily Internet Usage]": 135.67, "Customer_Behaviour[Ad Topic Line]": "Customer-focused fault-tolerant implementation", "Customer_Behaviour[City]": "Port Michaelmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brazil", "Customer_Behaviour[Timestamp]": 1452898185000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.6, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 40159.2, "Customer_Behaviour[Daily Internet Usage]": 190.05, "Customer_Behaviour[Ad Topic Line]": "Customizable homogeneous contingency", "Customer_Behaviour[City]": "Tylerport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Syrian Arab Republic", "Customer_Behaviour[Timestamp]": 1455248349000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.76, "Customer_Behaviour[Age]": 51, "Customer_Behaviour[Area Income]": 66980.27, "Customer_Behaviour[Daily Internet Usage]": 162.05, "Customer_Behaviour[Ad Topic Line]": "Face-to-face modular budgetary management", "Customer_Behaviour[City]": "South Davidhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ghana", "Customer_Behaviour[Timestamp]": 1469246682000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.3, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 48335.2, "Customer_Behaviour[Daily Internet Usage]": 145.73, "Customer_Behaviour[Ad Topic Line]": "Decentralized bottom-line help-desk", "Customer_Behaviour[City]": "Jonathanland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lithuania", "Customer_Behaviour[Timestamp]": 1456287097000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 64.79, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 42251.59, "Customer_Behaviour[Daily Internet Usage]": 116.07, "Customer_Behaviour[Ad Topic Line]": "Visionary mission-critical application", "Customer_Behaviour[City]": "North Virginia", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Maldives", "Customer_Behaviour[Timestamp]": 1455740569000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.96, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 69868.48, "Customer_Behaviour[Daily Internet Usage]": 193.15, "Customer_Behaviour[Ad Topic Line]": "Stand-alone well-modulated product", "Customer_Behaviour[City]": "East Jason", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cayman Islands", "Customer_Behaviour[Timestamp]": 1455242138000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.99, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 72802.42, "Customer_Behaviour[Daily Internet Usage]": 138.46, "Customer_Behaviour[Ad Topic Line]": "Ameliorated bandwidth-monitored contingency", "Customer_Behaviour[City]": "North Cassie", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Haiti", "Customer_Behaviour[Timestamp]": 1452500292000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.53, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 56129.89, "Customer_Behaviour[Daily Internet Usage]": 141.58, "Customer_Behaviour[Ad Topic Line]": "Front-line neutral alliance", "Customer_Behaviour[City]": "North Destiny", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Arab Emirates", "Customer_Behaviour[Timestamp]": 1461362481000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.55, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 41547.62, "Customer_Behaviour[Daily Internet Usage]": 109.04, "Customer_Behaviour[Ad Topic Line]": "Re-engineered optimal policy", "Customer_Behaviour[City]": "West Gabriellamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Canada", "Customer_Behaviour[Timestamp]": 1454555417000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.66, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 59240.24, "Customer_Behaviour[Daily Internet Usage]": 172.57, "Customer_Behaviour[Ad Topic Line]": "Implemented uniform synergy", "Customer_Behaviour[City]": "Alvarezland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Svalbard & Jan Mayen Islands", "Customer_Behaviour[Timestamp]": 1456085352000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.78, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 39939.39, "Customer_Behaviour[Daily Internet Usage]": 124.32, "Customer_Behaviour[Ad Topic Line]": "Mandatory empowering focus group", "Customer_Behaviour[City]": "Melanieton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1466377485000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.25, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 47051.02, "Customer_Behaviour[Daily Internet Usage]": 194.44, "Customer_Behaviour[Ad Topic Line]": "Intuitive global website", "Customer_Behaviour[City]": "Waltertown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iran", "Customer_Behaviour[Timestamp]": 1451795987000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.08, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 35349.26, "Customer_Behaviour[Daily Internet Usage]": 125.27, "Customer_Behaviour[Ad Topic Line]": "Synergized clear-thinking protocol", "Customer_Behaviour[City]": "Fosterside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1459067557000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.04, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 69784.85, "Customer_Behaviour[Daily Internet Usage]": 159.05, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered multi-state complexity", "Customer_Behaviour[City]": "Davidstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Netherlands Antilles", "Customer_Behaviour[Timestamp]": 1468167956000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.18, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 50760.23, "Customer_Behaviour[Daily Internet Usage]": 151.96, "Customer_Behaviour[Ad Topic Line]": "Enhanced intangible portal", "Customer_Behaviour[City]": "Lake Tracy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hong Kong", "Customer_Behaviour[Timestamp]": 1466828493000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.48, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 20592.99, "Customer_Behaviour[Daily Internet Usage]": 162.43, "Customer_Behaviour[Ad Topic Line]": "Switchable real-time product", "Customer_Behaviour[City]": "Dianaville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malawi", "Customer_Behaviour[Timestamp]": 1463424719000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.37, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 72196.29, "Customer_Behaviour[Daily Internet Usage]": 140.77, "Customer_Behaviour[Ad Topic Line]": "Up-sized asymmetric firmware", "Customer_Behaviour[City]": "Lake Matthew", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mexico", "Customer_Behaviour[Timestamp]": 1466878673000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.88, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 64011.26, "Customer_Behaviour[Daily Internet Usage]": 125.12, "Customer_Behaviour[Ad Topic Line]": "Customer-focused explicit challenge", "Customer_Behaviour[City]": "Sarahland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Yemen", "Customer_Behaviour[Timestamp]": 1461268584000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.17, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 66193.81, "Customer_Behaviour[Daily Internet Usage]": 123.62, "Customer_Behaviour[Ad Topic Line]": "Extended leadingedge solution", "Customer_Behaviour[City]": "New Patrick", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Montenegro", "Customer_Behaviour[Timestamp]": 1457264166000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.7, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 63126.96, "Customer_Behaviour[Daily Internet Usage]": 173.01, "Customer_Behaviour[Ad Topic Line]": "Front-line bifurcated ability", "Customer_Behaviour[City]": "Nicholasland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mayotte", "Customer_Behaviour[Timestamp]": 1459742268000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.01, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 29875.8, "Customer_Behaviour[Daily Internet Usage]": 178.35, "Customer_Behaviour[Ad Topic Line]": "Virtual 5thgeneration emulation", "Customer_Behaviour[City]": "Ronniemouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brazil", "Customer_Behaviour[Timestamp]": 1464990201000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.95, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 61833.9, "Customer_Behaviour[Daily Internet Usage]": 256.09, "Customer_Behaviour[Ad Topic Line]": "Cloned 5thgeneration orchestration", "Customer_Behaviour[City]": "Wrightburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tunisia", "Customer_Behaviour[Timestamp]": 1459039991000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.47, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 59785.94, "Customer_Behaviour[Daily Internet Usage]": 236.5, "Customer_Behaviour[Ad Topic Line]": "Organic bottom-line service-desk", "Customer_Behaviour[City]": "Davidton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "San Marino", "Customer_Behaviour[Timestamp]": 1457901342000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.37, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 73889.99, "Customer_Behaviour[Daily Internet Usage]": 225.58, "Customer_Behaviour[Ad Topic Line]": "Robust logistical utilization", "Customer_Behaviour[City]": "South Manuel", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iceland", "Customer_Behaviour[Timestamp]": 1464924978000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.91, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 53852.85, "Customer_Behaviour[Daily Internet Usage]": 208.36, "Customer_Behaviour[Ad Topic Line]": "Enhanced dedicated support", "Customer_Behaviour[City]": "Brandonstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Myanmar", "Customer_Behaviour[Timestamp]": 1454014772000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.52, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 51739.63, "Customer_Behaviour[Daily Internet Usage]": 214.23, "Customer_Behaviour[Ad Topic Line]": "Synergistic fresh-thinking array", "Customer_Behaviour[City]": "North Tara", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bosnia and Herzegovina", "Customer_Behaviour[Timestamp]": 1461188962000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.03, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 71511.08, "Customer_Behaviour[Daily Internet Usage]": 187.53, "Customer_Behaviour[Ad Topic Line]": "Intuitive dynamic attitude", "Customer_Behaviour[City]": "Pruittmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1462172458000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.02, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 46179.97, "Customer_Behaviour[Daily Internet Usage]": 209.82, "Customer_Behaviour[Ad Topic Line]": "Business-focused value-added definition", "Customer_Behaviour[City]": "West Guybury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bouvet Island (Bouvetoya)", "Customer_Behaviour[Timestamp]": 1453898296000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.37, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 61389.5, "Customer_Behaviour[Daily Internet Usage]": 201.58, "Customer_Behaviour[Ad Topic Line]": "Synchronized systemic hierarchy", "Customer_Behaviour[City]": "Johnstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Luxembourg", "Customer_Behaviour[Timestamp]": 1460431599000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.82, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 76435.3, "Customer_Behaviour[Daily Internet Usage]": 221.94, "Customer_Behaviour[Ad Topic Line]": "Reactive demand-driven capacity", "Customer_Behaviour[City]": "Kellytown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ukraine", "Customer_Behaviour[Timestamp]": 1454995698000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.98, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 57691.95, "Customer_Behaviour[Daily Internet Usage]": 202.61, "Customer_Behaviour[Ad Topic Line]": "Innovative user-facing extranet", "Customer_Behaviour[City]": "Mackenziemouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Russian Federation", "Customer_Behaviour[Timestamp]": 1461749278000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 64.24, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 59784.18, "Customer_Behaviour[Daily Internet Usage]": 252.36, "Customer_Behaviour[Ad Topic Line]": "Front-line intermediate database", "Customer_Behaviour[City]": "Zacharystad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tunisia", "Customer_Behaviour[Timestamp]": 1460807623000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.38, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 64929.61, "Customer_Behaviour[Daily Internet Usage]": 212.3, "Customer_Behaviour[Ad Topic Line]": "Balanced dynamic application", "Customer_Behaviour[City]": "Bowenview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Helena", "Customer_Behaviour[Timestamp]": 1454891018000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.47, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 57519.64, "Customer_Behaviour[Daily Internet Usage]": 204.86, "Customer_Behaviour[Ad Topic Line]": "Reduced global support", "Customer_Behaviour[City]": "Jamesberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Niger", "Customer_Behaviour[Timestamp]": 1455197182000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.4, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 67058.72, "Customer_Behaviour[Daily Internet Usage]": 198.72, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered demand-driven alliance", "Customer_Behaviour[City]": "Johnport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sri Lanka", "Customer_Behaviour[Timestamp]": 1465412041000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.94, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 58526.04, "Customer_Behaviour[Daily Internet Usage]": 225.29, "Customer_Behaviour[Ad Topic Line]": "Visionary reciprocal circuit", "Customer_Behaviour[City]": "Odomville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Kingdom", "Customer_Behaviour[Timestamp]": 1462310398000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.6, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 67479.62, "Customer_Behaviour[Daily Internet Usage]": 177.55, "Customer_Behaviour[Ad Topic Line]": "Sharable bottom-line solution", "Customer_Behaviour[City]": "Thomasview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1460001376000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.63, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 56113.37, "Customer_Behaviour[Daily Internet Usage]": 239.22, "Customer_Behaviour[Ad Topic Line]": "Upgradable asynchronous circuit", "Customer_Behaviour[City]": "Port Gregory", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Azerbaijan", "Customer_Behaviour[Timestamp]": 1455469515000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.61, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 47708.42, "Customer_Behaviour[Daily Internet Usage]": 183.43, "Customer_Behaviour[Ad Topic Line]": "Customer-focused empowering ability", "Customer_Behaviour[City]": "Lake Amy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1462003633000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.08, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 71228.44, "Customer_Behaviour[Daily Internet Usage]": 169.5, "Customer_Behaviour[Ad Topic Line]": "Stand-alone national attitude", "Customer_Behaviour[City]": "Smithburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1457534733000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.01, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 74543.81, "Customer_Behaviour[Daily Internet Usage]": 222.63, "Customer_Behaviour[Ad Topic Line]": "Advanced full-range migration", "Customer_Behaviour[City]": "New Michaeltown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turks and Caicos Islands", "Customer_Behaviour[Timestamp]": 1467898654000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 64.1, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 60465.72, "Customer_Behaviour[Daily Internet Usage]": 215.93, "Customer_Behaviour[Ad Topic Line]": "Seamless object-oriented structure", "Customer_Behaviour[City]": "East Tiffanyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cote d'Ivoire", "Customer_Behaviour[Timestamp]": 1459527665000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.79, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 74535.94, "Customer_Behaviour[Daily Internet Usage]": 184.1, "Customer_Behaviour[Ad Topic Line]": "Distributed tertiary system engine", "Customer_Behaviour[City]": "Sharpberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bouvet Island (Bouvetoya)", "Customer_Behaviour[Timestamp]": 1458056954000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.51, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 73600.28, "Customer_Behaviour[Daily Internet Usage]": 200.55, "Customer_Behaviour[Ad Topic Line]": "Total 5thgeneration encoding", "Customer_Behaviour[City]": "North Kristine", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Central African Republic", "Customer_Behaviour[Timestamp]": 1467348117000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.84, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 52968.22, "Customer_Behaviour[Daily Internet Usage]": 238.63, "Customer_Behaviour[Ad Topic Line]": "Progressive empowering alliance", "Customer_Behaviour[City]": "Wongland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Albania", "Customer_Behaviour[Timestamp]": 1468012712000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 89.91, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 59593.56, "Customer_Behaviour[Daily Internet Usage]": 194.23, "Customer_Behaviour[Ad Topic Line]": "Innovative background conglomeration", "Customer_Behaviour[City]": "Wallacechester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Maldives", "Customer_Behaviour[Timestamp]": 1468076136000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.49, "Customer_Behaviour[Age]": 20, "Customer_Behaviour[Area Income]": 56884.74, "Customer_Behaviour[Daily Internet Usage]": 202.16, "Customer_Behaviour[Ad Topic Line]": "Polarized 6thgeneration info-mediaries", "Customer_Behaviour[City]": "Bradshawborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guernsey", "Customer_Behaviour[Timestamp]": 1465558293000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.02, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 72272.9, "Customer_Behaviour[Daily Internet Usage]": 210.54, "Customer_Behaviour[Ad Topic Line]": "Operative system-worthy protocol", "Customer_Behaviour[City]": "Johnstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Micronesia", "Customer_Behaviour[Timestamp]": 1457535431000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.0, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 56067.38, "Customer_Behaviour[Daily Internet Usage]": 211.87, "Customer_Behaviour[Ad Topic Line]": "Extended systemic policy", "Customer_Behaviour[City]": "Andersonton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Eritrea", "Customer_Behaviour[Timestamp]": 1457937974000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.58, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 56791.75, "Customer_Behaviour[Daily Internet Usage]": 231.94, "Customer_Behaviour[Ad Topic Line]": "Self-enabling holistic process improvement", "Customer_Behaviour[City]": "Johnsport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Benin", "Customer_Behaviour[Timestamp]": 1460044922000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.65, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 63274.88, "Customer_Behaviour[Daily Internet Usage]": 212.79, "Customer_Behaviour[Ad Topic Line]": "Horizontal client-driven hierarchy", "Customer_Behaviour[City]": "South Ronald", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1454592632000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.57, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 61227.59, "Customer_Behaviour[Daily Internet Usage]": 230.93, "Customer_Behaviour[Ad Topic Line]": "User-friendly asymmetric info-mediaries", "Customer_Behaviour[City]": "Lisaberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Egypt", "Customer_Behaviour[Timestamp]": 1463459251000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 89.05, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 57868.44, "Customer_Behaviour[Daily Internet Usage]": 206.98, "Customer_Behaviour[Ad Topic Line]": "Polarized bandwidth-monitored moratorium", "Customer_Behaviour[City]": "Stewartbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Falkland Islands (Malvinas)", "Customer_Behaviour[Timestamp]": 1459678076000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.41, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 66618.21, "Customer_Behaviour[Daily Internet Usage]": 223.03, "Customer_Behaviour[Ad Topic Line]": "Centralized systematic knowledgebase", "Customer_Behaviour[City]": "Benjaminchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Dominica", "Customer_Behaviour[Timestamp]": 1459805446000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.36, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 73104.47, "Customer_Behaviour[Daily Internet Usage]": 233.56, "Customer_Behaviour[Ad Topic Line]": "Future-proofed grid-enabled implementation", "Customer_Behaviour[City]": "North Wesleychester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jersey", "Customer_Behaviour[Timestamp]": 1467820833000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.7, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 67633.44, "Customer_Behaviour[Daily Internet Usage]": 215.44, "Customer_Behaviour[Ad Topic Line]": "Profound zero administration instruction set", "Customer_Behaviour[City]": "Port Jeffrey", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United States Minor Outlying Islands", "Customer_Behaviour[Timestamp]": 1452730990000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.86, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 64122.36, "Customer_Behaviour[Daily Internet Usage]": 190.25, "Customer_Behaviour[Ad Topic Line]": "Up-sized executive moderator", "Customer_Behaviour[City]": "Lake Josetown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gibraltar", "Customer_Behaviour[Timestamp]": 1454699161000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.08, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 77460.07, "Customer_Behaviour[Daily Internet Usage]": 210.6, "Customer_Behaviour[Ad Topic Line]": "Ergonomic client-driven application", "Customer_Behaviour[City]": "Kimberlyhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turks and Caicos Islands", "Customer_Behaviour[Timestamp]": 1457746759000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.54, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 72524.86, "Customer_Behaviour[Daily Internet Usage]": 172.1, "Customer_Behaviour[Ad Topic Line]": "Multi-channeled asynchronous open system", "Customer_Behaviour[City]": "Port Jodi", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Togo", "Customer_Behaviour[Timestamp]": 1464468110000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.4, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 66699.12, "Customer_Behaviour[Daily Internet Usage]": 247.31, "Customer_Behaviour[Ad Topic Line]": "Adaptive 24hour Graphic Interface", "Customer_Behaviour[City]": "Sylviaview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Palau", "Customer_Behaviour[Timestamp]": 1455317468000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.01, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 57756.89, "Customer_Behaviour[Daily Internet Usage]": 251.0, "Customer_Behaviour[Ad Topic Line]": "Horizontal multi-state interface", "Customer_Behaviour[City]": "West Michaelhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Angola", "Customer_Behaviour[Timestamp]": 1456749117000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.83, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 58019.64, "Customer_Behaviour[Daily Internet Usage]": 162.44, "Customer_Behaviour[Ad Topic Line]": "Diverse stable circuit", "Customer_Behaviour[City]": "Walshhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Nauru", "Customer_Behaviour[Timestamp]": 1453043431000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 86.69, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 62238.58, "Customer_Behaviour[Daily Internet Usage]": 198.56, "Customer_Behaviour[Ad Topic Line]": "Customer-focused attitude-oriented instruction set", "Customer_Behaviour[City]": "South Jennifer", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Chad", "Customer_Behaviour[Timestamp]": 1464329967000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.23, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 68094.85, "Customer_Behaviour[Daily Internet Usage]": 196.23, "Customer_Behaviour[Ad Topic Line]": "Secured clear-thinking middleware", "Customer_Behaviour[City]": "South Daniellefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Qatar", "Customer_Behaviour[Timestamp]": 1458397425000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.41, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 64395.85, "Customer_Behaviour[Daily Internet Usage]": 163.05, "Customer_Behaviour[Ad Topic Line]": "Right-sized value-added initiative", "Customer_Behaviour[City]": "Dianashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Singapore", "Customer_Behaviour[Timestamp]": 1469248625000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.74, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 72423.97, "Customer_Behaviour[Daily Internet Usage]": 227.56, "Customer_Behaviour[Ad Topic Line]": "Multi-channeled reciprocal artificial intelligence", "Customer_Behaviour[City]": "Hammondport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kazakhstan", "Customer_Behaviour[Timestamp]": 1468951582000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.04, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 60309.58, "Customer_Behaviour[Daily Internet Usage]": 199.43, "Customer_Behaviour[Ad Topic Line]": "Realigned systematic function", "Customer_Behaviour[City]": "Hernandezfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Rwanda", "Customer_Behaviour[Timestamp]": 1455087127000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.86, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 63115.34, "Customer_Behaviour[Daily Internet Usage]": 208.23, "Customer_Behaviour[Ad Topic Line]": "Networked high-level structure", "Customer_Behaviour[City]": "New Jeffreychester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bouvet Island (Bouvetoya)", "Customer_Behaviour[Timestamp]": 1463969704000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.56, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 53673.08, "Customer_Behaviour[Daily Internet Usage]": 210.46, "Customer_Behaviour[Ad Topic Line]": "Advanced modular Local Area Network", "Customer_Behaviour[City]": "South Denisefurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1465132584000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.05, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 66624.6, "Customer_Behaviour[Daily Internet Usage]": 191.14, "Customer_Behaviour[Ad Topic Line]": "Reduced bi-directional strategy", "Customer_Behaviour[City]": "North Anna", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Arab Emirates", "Customer_Behaviour[Timestamp]": 1453420109000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.4, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 77567.85, "Customer_Behaviour[Daily Internet Usage]": 214.42, "Customer_Behaviour[Ad Topic Line]": "Digitized heuristic solution", "Customer_Behaviour[City]": "Port Destiny", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Antigua and Barbuda", "Customer_Behaviour[Timestamp]": 1465086553000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.78, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 70410.11, "Customer_Behaviour[Daily Internet Usage]": 218.79, "Customer_Behaviour[Ad Topic Line]": "Multi-layered non-volatile Graphical User Interface", "Customer_Behaviour[City]": "Wilsonburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saudi Arabia", "Customer_Behaviour[Timestamp]": 1464114958000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.9, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 66107.84, "Customer_Behaviour[Daily Internet Usage]": 212.67, "Customer_Behaviour[Ad Topic Line]": "Synchronized multimedia model", "Customer_Behaviour[City]": "Murphymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1461313884000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.98, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 65461.92, "Customer_Behaviour[Daily Internet Usage]": 229.22, "Customer_Behaviour[Ad Topic Line]": "Ameliorated upward-trending definition", "Customer_Behaviour[City]": "Taylorberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Seychelles", "Customer_Behaviour[Timestamp]": 1460721074000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.88, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 55353.41, "Customer_Behaviour[Daily Internet Usage]": 254.57, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered human-resource structure", "Customer_Behaviour[City]": "Melissafurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Poland", "Customer_Behaviour[Timestamp]": 1467419062000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.83, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 67516.07, "Customer_Behaviour[Daily Internet Usage]": 200.59, "Customer_Behaviour[Ad Topic Line]": "Managed upward-trending instruction set", "Customer_Behaviour[City]": "East Brianberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Estonia", "Customer_Behaviour[Timestamp]": 1457086428000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 89.15, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 59886.58, "Customer_Behaviour[Daily Internet Usage]": 171.07, "Customer_Behaviour[Ad Topic Line]": "Phased zero administration success", "Customer_Behaviour[City]": "Townsendfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1461569421000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.68, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 74430.08, "Customer_Behaviour[Daily Internet Usage]": 199.08, "Customer_Behaviour[Ad Topic Line]": "Configurable multi-state utilization", "Customer_Behaviour[City]": "Robertbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Colombia", "Customer_Behaviour[Timestamp]": 1468720733000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.06, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 58633.63, "Customer_Behaviour[Daily Internet Usage]": 201.04, "Customer_Behaviour[Ad Topic Line]": "Diverse multi-tasking parallelism", "Customer_Behaviour[City]": "New Tinamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brunei Darussalam", "Customer_Behaviour[Timestamp]": 1461731297000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.65, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 72209.99, "Customer_Behaviour[Daily Internet Usage]": 158.05, "Customer_Behaviour[Ad Topic Line]": "Up-sized tertiary contingency", "Customer_Behaviour[City]": "Ramosstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Finland", "Customer_Behaviour[Timestamp]": 1467494543000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.03, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 60372.64, "Customer_Behaviour[Daily Internet Usage]": 204.52, "Customer_Behaviour[Ad Topic Line]": "Expanded clear-thinking core", "Customer_Behaviour[City]": "North Shannon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Philippines", "Customer_Behaviour[Timestamp]": 1466328275000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.7, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 71136.49, "Customer_Behaviour[Daily Internet Usage]": 222.25, "Customer_Behaviour[Ad Topic Line]": "Open-source coherent monitoring", "Customer_Behaviour[City]": "West Russell", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ecuador", "Customer_Behaviour[Timestamp]": 1465709479000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.03, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 63727.5, "Customer_Behaviour[Daily Internet Usage]": 201.15, "Customer_Behaviour[Ad Topic Line]": "Persevering tertiary capability", "Customer_Behaviour[City]": "Masonhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1452086401000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.91, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 61608.23, "Customer_Behaviour[Daily Internet Usage]": 231.42, "Customer_Behaviour[Ad Topic Line]": "Enterprise-wide bi-directional secured line", "Customer_Behaviour[City]": "Derrickhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cuba", "Customer_Behaviour[Timestamp]": 1454213420000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.47, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 64447.77, "Customer_Behaviour[Daily Internet Usage]": 226.11, "Customer_Behaviour[Ad Topic Line]": "Total directional approach", "Customer_Behaviour[City]": "New Brandy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkey", "Customer_Behaviour[Timestamp]": 1463345320000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.65, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 67669.06, "Customer_Behaviour[Daily Internet Usage]": 212.56, "Customer_Behaviour[Ad Topic Line]": "Robust transitional ability", "Customer_Behaviour[City]": "East Timothy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Southern Territories", "Customer_Behaviour[Timestamp]": 1458190812000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.04, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 50723.67, "Customer_Behaviour[Daily Internet Usage]": 244.55, "Customer_Behaviour[Ad Topic Line]": "Self-enabling didactic pricing structure", "Customer_Behaviour[City]": "West Alyssa", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malaysia", "Customer_Behaviour[Timestamp]": 1469006844000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.44, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 70547.16, "Customer_Behaviour[Daily Internet Usage]": 230.14, "Customer_Behaviour[Ad Topic Line]": "Customizable tangible hierarchy", "Customer_Behaviour[City]": "Bruceburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Christmas Island", "Customer_Behaviour[Timestamp]": 1460731548000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.15, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 62312.23, "Customer_Behaviour[Daily Internet Usage]": 203.23, "Customer_Behaviour[Ad Topic Line]": "Intuitive explicit conglomeration", "Customer_Behaviour[City]": "Port Robin", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greenland", "Customer_Behaviour[Timestamp]": 1453316977000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.28, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 52686.47, "Customer_Behaviour[Daily Internet Usage]": 254.34, "Customer_Behaviour[Ad Topic Line]": "Right-sized asynchronous website", "Customer_Behaviour[City]": "Port Aliciabury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guadeloupe", "Customer_Behaviour[Timestamp]": 1455522910000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.88, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 78119.5, "Customer_Behaviour[Daily Internet Usage]": 179.58, "Customer_Behaviour[Ad Topic Line]": "Advanced 5thgeneration capability", "Customer_Behaviour[City]": "Port Whitneyhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belgium", "Customer_Behaviour[Timestamp]": 1455046672000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.1, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 57014.84, "Customer_Behaviour[Daily Internet Usage]": 242.37, "Customer_Behaviour[Ad Topic Line]": "Universal asymmetric archive", "Customer_Behaviour[City]": "Jeffreyshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Israel", "Customer_Behaviour[Timestamp]": 1453708373000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.3, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 58337.18, "Customer_Behaviour[Daily Internet Usage]": 216.87, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered regional toolset", "Customer_Behaviour[City]": "North Loriburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Estonia", "Customer_Behaviour[Timestamp]": 1452324496000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.76, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 69285.69, "Customer_Behaviour[Daily Internet Usage]": 237.39, "Customer_Behaviour[Ad Topic Line]": "Customizable zero-defect matrix", "Customer_Behaviour[City]": "South Tomside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Pierre and Miquelon", "Customer_Behaviour[Timestamp]": 1464268710000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.87, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 67938.77, "Customer_Behaviour[Daily Internet Usage]": 213.36, "Customer_Behaviour[Ad Topic Line]": "Front-line fresh-thinking open system", "Customer_Behaviour[City]": "West Brenda", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tonga", "Customer_Behaviour[Timestamp]": 1467144821000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.71, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 61610.05, "Customer_Behaviour[Daily Internet Usage]": 210.23, "Customer_Behaviour[Ad Topic Line]": "Reactive responsive emulation", "Customer_Behaviour[City]": "Greenechester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1464506967000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.61, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 62667.51, "Customer_Behaviour[Daily Internet Usage]": 228.76, "Customer_Behaviour[Ad Topic Line]": "Enterprise-wide local matrices", "Customer_Behaviour[City]": "Gravesport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Morocco", "Customer_Behaviour[Timestamp]": 1460907963000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.95, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 67714.82, "Customer_Behaviour[Daily Internet Usage]": 238.58, "Customer_Behaviour[Ad Topic Line]": "Persevering even-keeled help-desk", "Customer_Behaviour[City]": "Millerland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Wallis and Futuna", "Customer_Behaviour[Timestamp]": 1460299715000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.07, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 69710.51, "Customer_Behaviour[Daily Internet Usage]": 226.45, "Customer_Behaviour[Ad Topic Line]": "Grass-roots eco-centric instruction set", "Customer_Behaviour[City]": "Port Jessicamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Chile", "Customer_Behaviour[Timestamp]": 1460824715000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.39, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 66269.49, "Customer_Behaviour[Daily Internet Usage]": 214.74, "Customer_Behaviour[Ad Topic Line]": "Fully-configurable incremental Graphical User Interface", "Customer_Behaviour[City]": "Paulport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gabon", "Customer_Behaviour[Timestamp]": 1462263683000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.97, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 55041.6, "Customer_Behaviour[Daily Internet Usage]": 250.0, "Customer_Behaviour[Ad Topic Line]": "Mandatory 3rdgeneration moderator", "Customer_Behaviour[City]": "Cynthiaside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Holy See (Vatican City State)", "Customer_Behaviour[Timestamp]": 1463875318000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.79, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 61771.9, "Customer_Behaviour[Daily Internet Usage]": 214.53, "Customer_Behaviour[Ad Topic Line]": "Managed eco-centric encoding", "Customer_Behaviour[City]": "New Juan", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cameroon", "Customer_Behaviour[Timestamp]": 1459364990000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.7, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 61383.79, "Customer_Behaviour[Daily Internet Usage]": 231.07, "Customer_Behaviour[Ad Topic Line]": "Visionary multi-tasking alliance", "Customer_Behaviour[City]": "Amyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Somalia", "Customer_Behaviour[Timestamp]": 1452354568000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.88, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 63924.82, "Customer_Behaviour[Daily Internet Usage]": 186.48, "Customer_Behaviour[Ad Topic Line]": "Ameliorated tangible hierarchy", "Customer_Behaviour[City]": "Harrishaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lebanon", "Customer_Behaviour[Timestamp]": 1460950916000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.74, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 66524.8, "Customer_Behaviour[Daily Internet Usage]": 243.37, "Customer_Behaviour[Ad Topic Line]": "Enhanced maximized access", "Customer_Behaviour[City]": "Birdshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1459096889000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.29, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 60638.38, "Customer_Behaviour[Daily Internet Usage]": 232.54, "Customer_Behaviour[Ad Topic Line]": "Re-contextualized systemic time-frame", "Customer_Behaviour[City]": "Jacksonmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Niue", "Customer_Behaviour[Timestamp]": 1453927677000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.84, "Customer_Behaviour[Age]": 21, "Customer_Behaviour[Area Income]": 48537.18, "Customer_Behaviour[Daily Internet Usage]": 186.98, "Customer_Behaviour[Ad Topic Line]": "Reactive bi-directional workforce", "Customer_Behaviour[City]": "Hayesmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cyprus", "Customer_Behaviour[Timestamp]": 1454830866000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.72, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 68614.98, "Customer_Behaviour[Daily Internet Usage]": 186.37, "Customer_Behaviour[Ad Topic Line]": "Re-engineered neutral success", "Customer_Behaviour[City]": "Juliaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Costa Rica", "Customer_Behaviour[Timestamp]": 1461042928000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 90.97, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 54520.14, "Customer_Behaviour[Daily Internet Usage]": 180.77, "Customer_Behaviour[Ad Topic Line]": "Multi-lateral empowering throughput", "Customer_Behaviour[City]": "Kimberlytown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Congo", "Customer_Behaviour[Timestamp]": 1455646896000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.18, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 69476.42, "Customer_Behaviour[Daily Internet Usage]": 243.61, "Customer_Behaviour[Ad Topic Line]": "Proactive asymmetric definition", "Customer_Behaviour[City]": "New Johnberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Pitcairn Islands", "Customer_Behaviour[Timestamp]": 1458895215000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.33, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 54989.93, "Customer_Behaviour[Daily Internet Usage]": 240.95, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive zero tolerance Local Area Network", "Customer_Behaviour[City]": "Shawstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belize", "Customer_Behaviour[Timestamp]": 1458088090000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.84, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 65883.39, "Customer_Behaviour[Daily Internet Usage]": 231.59, "Customer_Behaviour[Ad Topic Line]": "Reduced incremental productivity", "Customer_Behaviour[City]": "Faithview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Singapore", "Customer_Behaviour[Timestamp]": 1457044276000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.05, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 65421.39, "Customer_Behaviour[Daily Internet Usage]": 220.92, "Customer_Behaviour[Ad Topic Line]": "Realigned scalable standardization", "Customer_Behaviour[City]": "Richardsontown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Finland", "Customer_Behaviour[Timestamp]": 1456480473000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.71, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 58476.57, "Customer_Behaviour[Daily Internet Usage]": 200.58, "Customer_Behaviour[Ad Topic Line]": "Team-oriented context-sensitive installation", "Customer_Behaviour[City]": "East Christopherbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cameroon", "Customer_Behaviour[Timestamp]": 1466747422000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.09, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 66636.84, "Customer_Behaviour[Daily Internet Usage]": 214.08, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive systematic budgetary management", "Customer_Behaviour[City]": "Port Christinemouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sweden", "Customer_Behaviour[Timestamp]": 1464037245000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.26, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 63060.55, "Customer_Behaviour[Daily Internet Usage]": 184.03, "Customer_Behaviour[Ad Topic Line]": "Multi-layered tangible portal", "Customer_Behaviour[City]": "New Paul", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bosnia and Herzegovina", "Customer_Behaviour[Timestamp]": 1463027759000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.9, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 60550.66, "Customer_Behaviour[Daily Internet Usage]": 211.39, "Customer_Behaviour[Ad Topic Line]": "De-engineered tertiary secured line", "Customer_Behaviour[City]": "Hartport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Czech Republic", "Customer_Behaviour[Timestamp]": 1468678434000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.12, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 46653.75, "Customer_Behaviour[Daily Internet Usage]": 230.91, "Customer_Behaviour[Ad Topic Line]": "Realigned next generation projection", "Customer_Behaviour[City]": "Hurleyborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gibraltar", "Customer_Behaviour[Timestamp]": 1455692757000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.58, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 39699.13, "Customer_Behaviour[Daily Internet Usage]": 199.39, "Customer_Behaviour[Ad Topic Line]": "Decentralized needs-based analyzer", "Customer_Behaviour[City]": "Erikville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hong Kong", "Customer_Behaviour[Timestamp]": 1463004137000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.2, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 75044.35, "Customer_Behaviour[Daily Internet Usage]": 178.51, "Customer_Behaviour[Ad Topic Line]": "Multi-layered fresh-thinking process improvement", "Customer_Behaviour[City]": "Karenton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Barbados", "Customer_Behaviour[Timestamp]": 1456773995000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.49, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 58996.12, "Customer_Behaviour[Daily Internet Usage]": 237.34, "Customer_Behaviour[Ad Topic Line]": "Persevering eco-centric flexibility", "Customer_Behaviour[City]": "Lake Adrian", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1454170529000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.19, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 62475.99, "Customer_Behaviour[Daily Internet Usage]": 228.81, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered needs-based Local Area Network", "Customer_Behaviour[City]": "Mollyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Libyan Arab Jamahiriya", "Customer_Behaviour[Timestamp]": 1454220850000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.4, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 66691.23, "Customer_Behaviour[Daily Internet Usage]": 207.87, "Customer_Behaviour[Ad Topic Line]": "Polarized multimedia system engine", "Customer_Behaviour[City]": "West Daleborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Azerbaijan", "Customer_Behaviour[Timestamp]": 1463954063000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.07, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 44559.43, "Customer_Behaviour[Daily Internet Usage]": 261.02, "Customer_Behaviour[Ad Topic Line]": "Face-to-face analyzing encryption", "Customer_Behaviour[City]": "Stephenborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1456826495000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.62, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 73207.15, "Customer_Behaviour[Daily Internet Usage]": 217.79, "Customer_Behaviour[Ad Topic Line]": "Self-enabling even-keeled methodology", "Customer_Behaviour[City]": "Lake Kurtmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Rwanda", "Customer_Behaviour[Timestamp]": 1459757994000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.44, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 60845.55, "Customer_Behaviour[Daily Internet Usage]": 206.79, "Customer_Behaviour[Ad Topic Line]": "Public-key zero-defect analyzer", "Customer_Behaviour[City]": "West Thomas", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greece", "Customer_Behaviour[Timestamp]": 1463318314000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.22, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 61806.31, "Customer_Behaviour[Daily Internet Usage]": 224.58, "Customer_Behaviour[Ad Topic Line]": "Integrated motivating neural-net", "Customer_Behaviour[City]": "New Tyler", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kyrgyz Republic", "Customer_Behaviour[Timestamp]": 1467731650000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.66, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 67080.94, "Customer_Behaviour[Daily Internet Usage]": 168.15, "Customer_Behaviour[Ad Topic Line]": "Operative scalable emulation", "Customer_Behaviour[City]": "Reyesland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gabon", "Customer_Behaviour[Timestamp]": 1466374095000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.59, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 67744.56, "Customer_Behaviour[Daily Internet Usage]": 224.23, "Customer_Behaviour[Ad Topic Line]": "Robust responsive collaboration", "Customer_Behaviour[City]": "Lake Courtney", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1469142875000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.97, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 70449.04, "Customer_Behaviour[Daily Internet Usage]": 216.0, "Customer_Behaviour[Ad Topic Line]": "Programmable empowering middleware", "Customer_Behaviour[City]": "Mariebury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1468374526000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.26, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 70203.74, "Customer_Behaviour[Daily Internet Usage]": 202.77, "Customer_Behaviour[Ad Topic Line]": "Public-key mission-critical core", "Customer_Behaviour[City]": "New Jasmine", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Swaziland", "Customer_Behaviour[Timestamp]": 1465388749000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.95, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 56379.3, "Customer_Behaviour[Daily Internet Usage]": 230.36, "Customer_Behaviour[Ad Topic Line]": "Mandatory dedicated data-warehouse", "Customer_Behaviour[City]": "Lake Brian", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Madagascar", "Customer_Behaviour[Timestamp]": 1456506061000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.23, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 51015.11, "Customer_Behaviour[Daily Internet Usage]": 202.12, "Customer_Behaviour[Ad Topic Line]": "Re-engineered responsive definition", "Customer_Behaviour[City]": "Lake Kevin", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "American Samoa", "Customer_Behaviour[Timestamp]": 1459022056000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.58, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 55479.62, "Customer_Behaviour[Daily Internet Usage]": 248.16, "Customer_Behaviour[Ad Topic Line]": "Cloned explicit middleware", "Customer_Behaviour[City]": "East Sheriville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Moldova", "Customer_Behaviour[Timestamp]": 1453917344000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.68, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 66225.72, "Customer_Behaviour[Daily Internet Usage]": 208.05, "Customer_Behaviour[Ad Topic Line]": "Inverse high-level capability", "Customer_Behaviour[City]": "Leonchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Israel", "Customer_Behaviour[Timestamp]": 1452962430000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.99, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 61270.14, "Customer_Behaviour[Daily Internet Usage]": 230.9, "Customer_Behaviour[Ad Topic Line]": "Inverse bi-directional knowledge user", "Customer_Behaviour[City]": "Taylorport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Polynesia", "Customer_Behaviour[Timestamp]": 1455545627000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.24, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 63976.44, "Customer_Behaviour[Daily Internet Usage]": 214.42, "Customer_Behaviour[Ad Topic Line]": "Monitored dynamic instruction set", "Customer_Behaviour[City]": "Munozberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1465262946000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.18, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 52691.79, "Customer_Behaviour[Daily Internet Usage]": 167.67, "Customer_Behaviour[Ad Topic Line]": "Customer-focused full-range neural-net", "Customer_Behaviour[City]": "West Barbara", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bolivia", "Customer_Behaviour[Timestamp]": 1465500747000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.4, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 63966.72, "Customer_Behaviour[Daily Internet Usage]": 236.87, "Customer_Behaviour[Ad Topic Line]": "User-centric intangible contingency", "Customer_Behaviour[City]": "New Gabriel", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malaysia", "Customer_Behaviour[Timestamp]": 1459502474000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.93, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 74180.05, "Customer_Behaviour[Daily Internet Usage]": 218.22, "Customer_Behaviour[Ad Topic Line]": "Quality-focused scalable utilization", "Customer_Behaviour[City]": "Lake Matthewland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Niue", "Customer_Behaviour[Timestamp]": 1455926780000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.67, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 58909.36, "Customer_Behaviour[Daily Internet Usage]": 239.76, "Customer_Behaviour[Ad Topic Line]": "Seamless impactful info-mediaries", "Customer_Behaviour[City]": "Jamesville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Portugal", "Customer_Behaviour[Timestamp]": 1451616730000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.17, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 69869.66, "Customer_Behaviour[Daily Internet Usage]": 238.45, "Customer_Behaviour[Ad Topic Line]": "Cross-group neutral synergy", "Customer_Behaviour[City]": "West Lucas", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Panama", "Customer_Behaviour[Timestamp]": 1453249575000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.69, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 76408.19, "Customer_Behaviour[Daily Internet Usage]": 216.57, "Customer_Behaviour[Ad Topic Line]": "Monitored content-based implementation", "Customer_Behaviour[City]": "Lake Jasonchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Finland", "Customer_Behaviour[Timestamp]": 1468866785000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.37, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 55015.08, "Customer_Behaviour[Daily Internet Usage]": 207.27, "Customer_Behaviour[Ad Topic Line]": "Quality-focused zero-defect budgetary management", "Customer_Behaviour[City]": "Pearsonfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Pakistan", "Customer_Behaviour[Timestamp]": 1453524457000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.46, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 51636.12, "Customer_Behaviour[Daily Internet Usage]": 231.54, "Customer_Behaviour[Ad Topic Line]": "Intuitive fresh-thinking moderator", "Customer_Behaviour[City]": "Sellerstown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ireland", "Customer_Behaviour[Timestamp]": 1456743606000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.42, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 65791.17, "Customer_Behaviour[Daily Internet Usage]": 213.38, "Customer_Behaviour[Ad Topic Line]": "Quality-focused hybrid frame", "Customer_Behaviour[City]": "Carterport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lao People's Democratic Republic", "Customer_Behaviour[Timestamp]": 1455336968000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.56, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 68030.18, "Customer_Behaviour[Daily Internet Usage]": 213.75, "Customer_Behaviour[Ad Topic Line]": "Business-focused high-level hardware", "Customer_Behaviour[City]": "Greentown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brunei Darussalam", "Customer_Behaviour[Timestamp]": 1457433556000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.59, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 65826.53, "Customer_Behaviour[Daily Internet Usage]": 223.16, "Customer_Behaviour[Ad Topic Line]": "Managed disintermediate capability", "Customer_Behaviour[City]": "North Lisachester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Holy See (Vatican City State)", "Customer_Behaviour[Timestamp]": 1467630229000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.94, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 68333.01, "Customer_Behaviour[Daily Internet Usage]": 173.49, "Customer_Behaviour[Ad Topic Line]": "Function-based incremental standardization", "Customer_Behaviour[City]": "North Alexandra", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Myanmar", "Customer_Behaviour[Timestamp]": 1455111995000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.81, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 51847.26, "Customer_Behaviour[Daily Internet Usage]": 253.17, "Customer_Behaviour[Ad Topic Line]": "Realigned global initiative", "Customer_Behaviour[City]": "Garnerberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United States Virgin Islands", "Customer_Behaviour[Timestamp]": 1463148759000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.17, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 63580.22, "Customer_Behaviour[Daily Internet Usage]": 228.7, "Customer_Behaviour[Ad Topic Line]": "Business-focused maximized complexity", "Customer_Behaviour[City]": "North Anaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mexico", "Customer_Behaviour[Timestamp]": 1462147316000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.05, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 62161.26, "Customer_Behaviour[Daily Internet Usage]": 236.64, "Customer_Behaviour[Ad Topic Line]": "Upgradable local migration", "Customer_Behaviour[City]": "Hallfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jamaica", "Customer_Behaviour[Timestamp]": 1458512845000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.51, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 53412.32, "Customer_Behaviour[Daily Internet Usage]": 250.03, "Customer_Behaviour[Ad Topic Line]": "Future-proofed modular utilization", "Customer_Behaviour[City]": "Kingshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guinea", "Customer_Behaviour[Timestamp]": 1463650212000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.14, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 78092.95, "Customer_Behaviour[Daily Internet Usage]": 165.27, "Customer_Behaviour[Ad Topic Line]": "Re-engineered impactful software", "Customer_Behaviour[City]": "North Isabellaville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Western Sahara", "Customer_Behaviour[Timestamp]": 1458723151000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.53, "Customer_Behaviour[Age]": 51, "Customer_Behaviour[Area Income]": 46132.18, "Customer_Behaviour[Daily Internet Usage]": 244.91, "Customer_Behaviour[Ad Topic Line]": "Managed 6thgeneration hierarchy", "Customer_Behaviour[City]": "Reyesfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Barbados", "Customer_Behaviour[Timestamp]": 1466914946000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.57, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 70377.23, "Customer_Behaviour[Daily Internet Usage]": 212.38, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive transitional protocol", "Customer_Behaviour[City]": "North Stephanieberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Uruguay", "Customer_Behaviour[Timestamp]": 1458462170000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.49, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 56457.01, "Customer_Behaviour[Daily Internet Usage]": 181.11, "Customer_Behaviour[Ad Topic Line]": "Public-key asynchronous matrix", "Customer_Behaviour[City]": "Sherrishire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brazil", "Customer_Behaviour[Timestamp]": 1458882327000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 61.72, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 67279.06, "Customer_Behaviour[Daily Internet Usage]": 218.49, "Customer_Behaviour[Ad Topic Line]": "Grass-roots systematic hardware", "Customer_Behaviour[City]": "Port Daniel", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1455434137000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.53, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 54773.99, "Customer_Behaviour[Daily Internet Usage]": 236.29, "Customer_Behaviour[Ad Topic Line]": "User-centric composite contingency", "Customer_Behaviour[City]": "Brownview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Myanmar", "Customer_Behaviour[Timestamp]": 1458952322000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.15, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 72042.85, "Customer_Behaviour[Daily Internet Usage]": 194.37, "Customer_Behaviour[Ad Topic Line]": "Ergonomic neutral portal", "Customer_Behaviour[City]": "New Maria", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1457389935000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.59, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 67526.92, "Customer_Behaviour[Daily Internet Usage]": 211.64, "Customer_Behaviour[Ad Topic Line]": "Reverse-engineered maximized focus group", "Customer_Behaviour[City]": "Calebberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Georgia", "Customer_Behaviour[Timestamp]": 1466227053000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.77, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 63497.62, "Customer_Behaviour[Daily Internet Usage]": 211.83, "Customer_Behaviour[Ad Topic Line]": "Public-key intangible Graphical User Interface", "Customer_Behaviour[City]": "Gomezport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guam", "Customer_Behaviour[Timestamp]": 1451636826000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.4, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 60879.48, "Customer_Behaviour[Daily Internet Usage]": 235.01, "Customer_Behaviour[Ad Topic Line]": "Advanced local task-force", "Customer_Behaviour[City]": "Shaneland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tanzania", "Customer_Behaviour[Timestamp]": 1459994258000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.53, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 61467.33, "Customer_Behaviour[Daily Internet Usage]": 236.72, "Customer_Behaviour[Ad Topic Line]": "Profound well-modulated array", "Customer_Behaviour[City]": "East Aaron", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Indonesia", "Customer_Behaviour[Timestamp]": 1456696934000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.8, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 71222.4, "Customer_Behaviour[Daily Internet Usage]": 224.9, "Customer_Behaviour[Ad Topic Line]": "Multi-layered fresh-thinking neural-net", "Customer_Behaviour[City]": "East Michaelland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belize", "Customer_Behaviour[Timestamp]": 1453350643000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.53, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 73474.82, "Customer_Behaviour[Daily Internet Usage]": 223.93, "Customer_Behaviour[Ad Topic Line]": "Synchronized grid-enabled moratorium", "Customer_Behaviour[City]": "South Patrickfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1469095310000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.67, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 58576.12, "Customer_Behaviour[Daily Internet Usage]": 226.79, "Customer_Behaviour[Ad Topic Line]": "Total grid-enabled application", "Customer_Behaviour[City]": "Charlesbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Comoros", "Customer_Behaviour[Timestamp]": 1468979793000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.26, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 77988.71, "Customer_Behaviour[Daily Internet Usage]": 166.19, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented uniform knowledgebase", "Customer_Behaviour[City]": "West Robertside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malawi", "Customer_Behaviour[Timestamp]": 1464277212000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.38, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 55130.96, "Customer_Behaviour[Daily Internet Usage]": 238.06, "Customer_Behaviour[Ad Topic Line]": "Business-focused holistic benchmark", "Customer_Behaviour[City]": "Port Anthony", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Albania", "Customer_Behaviour[Timestamp]": 1457593651000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.8, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 63551.67, "Customer_Behaviour[Daily Internet Usage]": 249.54, "Customer_Behaviour[Ad Topic Line]": "Public-key solution-oriented focus group", "Customer_Behaviour[City]": "Austinland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1451863286000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.21, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 63394.41, "Customer_Behaviour[Daily Internet Usage]": 233.04, "Customer_Behaviour[Ad Topic Line]": "User-friendly content-based customer loyalty", "Customer_Behaviour[City]": "South Jaimeview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkmenistan", "Customer_Behaviour[Timestamp]": 1451727011000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.11, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 73884.48, "Customer_Behaviour[Daily Internet Usage]": 231.21, "Customer_Behaviour[Ad Topic Line]": "Reactive national success", "Customer_Behaviour[City]": "South Meredithmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Seychelles", "Customer_Behaviour[Timestamp]": 1452201710000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.29, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 57844.96, "Customer_Behaviour[Daily Internet Usage]": 252.07, "Customer_Behaviour[Ad Topic Line]": "Networked regional Local Area Network", "Customer_Behaviour[City]": "Villanuevaton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1452027522000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.31, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 62792.43, "Customer_Behaviour[Daily Internet Usage]": 238.1, "Customer_Behaviour[Ad Topic Line]": "Assimilated homogeneous service-desk", "Customer_Behaviour[City]": "North Garyhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Nepal", "Customer_Behaviour[Timestamp]": 1466194707000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.07, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 50337.93, "Customer_Behaviour[Daily Internet Usage]": 193.97, "Customer_Behaviour[Ad Topic Line]": "Monitored local Internet solution", "Customer_Behaviour[City]": "Richardsonmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sri Lanka", "Customer_Behaviour[Timestamp]": 1465887729000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.53, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 67686.16, "Customer_Behaviour[Daily Internet Usage]": 204.56, "Customer_Behaviour[Ad Topic Line]": "Customizable methodical Graphical User Interface", "Customer_Behaviour[City]": "New Dawnland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Honduras", "Customer_Behaviour[Timestamp]": 1467783292000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.5, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 68348.99, "Customer_Behaviour[Daily Internet Usage]": 203.84, "Customer_Behaviour[Ad Topic Line]": "Front-line systemic capability", "Customer_Behaviour[City]": "Tranland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Pakistan", "Customer_Behaviour[Timestamp]": 1456581104000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.76, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 66176.97, "Customer_Behaviour[Daily Internet Usage]": 242.59, "Customer_Behaviour[Ad Topic Line]": "Programmable high-level benchmark", "Customer_Behaviour[City]": "Anthonyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cameroon", "Customer_Behaviour[Timestamp]": 1464111778000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.41, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 61428.18, "Customer_Behaviour[Daily Internet Usage]": 259.76, "Customer_Behaviour[Ad Topic Line]": "Grass-roots empowering paradigm", "Customer_Behaviour[City]": "Christopherchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guinea-Bissau", "Customer_Behaviour[Timestamp]": 1462030042000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.54, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 57518.73, "Customer_Behaviour[Daily Internet Usage]": 219.75, "Customer_Behaviour[Ad Topic Line]": "Switchable secondary ability", "Customer_Behaviour[City]": "Alexisland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bahamas", "Customer_Behaviour[Timestamp]": 1459354559000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.13, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 70889.68, "Customer_Behaviour[Daily Internet Usage]": 224.98, "Customer_Behaviour[Ad Topic Line]": "Profit-focused systemic support", "Customer_Behaviour[City]": "Johnsonfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1463440866000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.06, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 40345.49, "Customer_Behaviour[Daily Internet Usage]": 225.99, "Customer_Behaviour[Ad Topic Line]": "Phased content-based middleware", "Customer_Behaviour[City]": "Port Davidland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Wallis and Futuna", "Customer_Behaviour[Timestamp]": 1469254731000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.29, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 33239.2, "Customer_Behaviour[Daily Internet Usage]": 219.72, "Customer_Behaviour[Ad Topic Line]": "Synergized well-modulated Graphical User Interface", "Customer_Behaviour[City]": "Lake Michael", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mongolia", "Customer_Behaviour[Timestamp]": 1455568865000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.07, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 68033.54, "Customer_Behaviour[Daily Internet Usage]": 235.56, "Customer_Behaviour[Ad Topic Line]": "Implemented bottom-line implementation", "Customer_Behaviour[City]": "West Michaelshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Denmark", "Customer_Behaviour[Timestamp]": 1453513348000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.92, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 38427.66, "Customer_Behaviour[Daily Internet Usage]": 182.65, "Customer_Behaviour[Ad Topic Line]": "Monitored context-sensitive initiative", "Customer_Behaviour[City]": "Port Calvintown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Russian Federation", "Customer_Behaviour[Timestamp]": 1456449524000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.35, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 53185.34, "Customer_Behaviour[Daily Internet Usage]": 253.48, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive client-server open system", "Customer_Behaviour[City]": "Parkerhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brazil", "Customer_Behaviour[Timestamp]": 1452478034000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.04, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 71881.84, "Customer_Behaviour[Daily Internet Usage]": 199.76, "Customer_Behaviour[Ad Topic Line]": "Synergistic non-volatile analyzer", "Customer_Behaviour[City]": "Cassandratown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mauritius", "Customer_Behaviour[Timestamp]": 1457218931000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.31, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 47139.21, "Customer_Behaviour[Daily Internet Usage]": 225.87, "Customer_Behaviour[Ad Topic Line]": "Object-based optimal solution", "Customer_Behaviour[City]": "West Dannyberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Djibouti", "Customer_Behaviour[Timestamp]": 1452116602000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.66, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 68877.02, "Customer_Behaviour[Daily Internet Usage]": 175.14, "Customer_Behaviour[Ad Topic Line]": "Profound dynamic attitude", "Customer_Behaviour[City]": "East Debraborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Syrian Arab Republic", "Customer_Behaviour[Timestamp]": 1455767916000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 86.53, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 46500.11, "Customer_Behaviour[Daily Internet Usage]": 233.36, "Customer_Behaviour[Ad Topic Line]": "Networked responsive application", "Customer_Behaviour[City]": "Colemanshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greece", "Customer_Behaviour[Timestamp]": 1467163161000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.95, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 69805.7, "Customer_Behaviour[Daily Internet Usage]": 201.29, "Customer_Behaviour[Ad Topic Line]": "Customer-focused impactful success", "Customer_Behaviour[City]": "Karenmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lao People's Democratic Republic", "Customer_Behaviour[Timestamp]": 1459844325000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.37, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 66412.04, "Customer_Behaviour[Daily Internet Usage]": 215.04, "Customer_Behaviour[Ad Topic Line]": "Enhanced regional conglomeration", "Customer_Behaviour[City]": "New Jessicaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Vietnam", "Customer_Behaviour[Timestamp]": 1452820805000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.61, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 58342.63, "Customer_Behaviour[Daily Internet Usage]": 235.97, "Customer_Behaviour[Ad Topic Line]": "Customizable value-added project", "Customer_Behaviour[City]": "Luisfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Monaco", "Customer_Behaviour[Timestamp]": 1459804993000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.89, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 64188.5, "Customer_Behaviour[Daily Internet Usage]": 201.54, "Customer_Behaviour[Ad Topic Line]": "Switchable multi-state success", "Customer_Behaviour[City]": "West Sharon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Singapore", "Customer_Behaviour[Timestamp]": 1463281850000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 89.21, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 44078.24, "Customer_Behaviour[Daily Internet Usage]": 210.53, "Customer_Behaviour[Ad Topic Line]": "Fundamental clear-thinking knowledgebase", "Customer_Behaviour[City]": "Lake Cynthia", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Reunion", "Customer_Behaviour[Timestamp]": 1468929958000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.44, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 65620.25, "Customer_Behaviour[Daily Internet Usage]": 210.39, "Customer_Behaviour[Ad Topic Line]": "Front-line incremental access", "Customer_Behaviour[City]": "Lake Jacob", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gabon", "Customer_Behaviour[Timestamp]": 1465532517000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.85, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 51816.27, "Customer_Behaviour[Daily Internet Usage]": 153.01, "Customer_Behaviour[Ad Topic Line]": "Digitized interactive initiative", "Customer_Behaviour[City]": "Meyerchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkmenistan", "Customer_Behaviour[Timestamp]": 1458374458000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.83, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 67990.84, "Customer_Behaviour[Daily Internet Usage]": 192.81, "Customer_Behaviour[Ad Topic Line]": "Quality-focused 5thgeneration orchestration", "Customer_Behaviour[City]": "Wintersfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ecuador", "Customer_Behaviour[Timestamp]": 1457102018000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.58, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 70701.31, "Customer_Behaviour[Daily Internet Usage]": 230.52, "Customer_Behaviour[Ad Topic Line]": "Configurable mission-critical algorithm", "Customer_Behaviour[City]": "East Carlos", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jamaica", "Customer_Behaviour[Timestamp]": 1469185510000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.16, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 60805.93, "Customer_Behaviour[Daily Internet Usage]": 197.15, "Customer_Behaviour[Ad Topic Line]": "Reduced holistic help-desk", "Customer_Behaviour[City]": "Blairville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1455191426000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.49, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 67132.46, "Customer_Behaviour[Daily Internet Usage]": 244.23, "Customer_Behaviour[Ad Topic Line]": "Organic 3rdgeneration encryption", "Customer_Behaviour[City]": "Mosleyburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Vanuatu", "Customer_Behaviour[Timestamp]": 1455449768000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.15, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 55195.61, "Customer_Behaviour[Daily Internet Usage]": 214.49, "Customer_Behaviour[Ad Topic Line]": "Monitored intermediate circuit", "Customer_Behaviour[City]": "West Wendyland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greenland", "Customer_Behaviour[Timestamp]": 1468810279000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 86.76, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 48679.54, "Customer_Behaviour[Daily Internet Usage]": 189.91, "Customer_Behaviour[Ad Topic Line]": "Object-based leadingedge complexity", "Customer_Behaviour[City]": "Lawrenceborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Syrian Arab Republic", "Customer_Behaviour[Timestamp]": 1455092473000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.88, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 63109.74, "Customer_Behaviour[Daily Internet Usage]": 233.61, "Customer_Behaviour[Ad Topic Line]": "Digitized zero-defect implementation", "Customer_Behaviour[City]": "Kennethview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Helena", "Customer_Behaviour[Timestamp]": 1451889435000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.65, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 66198.66, "Customer_Behaviour[Daily Internet Usage]": 208.01, "Customer_Behaviour[Ad Topic Line]": "Configurable impactful capacity", "Customer_Behaviour[City]": "Pamelamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ukraine", "Customer_Behaviour[Timestamp]": 1456515354000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.02, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 73174.19, "Customer_Behaviour[Daily Internet Usage]": 219.55, "Customer_Behaviour[Ad Topic Line]": "Distributed leadingedge orchestration", "Customer_Behaviour[City]": "Lesliefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malta", "Customer_Behaviour[Timestamp]": 1468420214000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.9, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 66773.83, "Customer_Behaviour[Daily Internet Usage]": 225.47, "Customer_Behaviour[Ad Topic Line]": "Multi-channeled 3rdgeneration model", "Customer_Behaviour[City]": "Garciatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mauritius", "Customer_Behaviour[Timestamp]": 1465627675000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.01, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 59797.64, "Customer_Behaviour[Daily Internet Usage]": 192.5, "Customer_Behaviour[Ad Topic Line]": "Devolved exuding Local Area Network", "Customer_Behaviour[City]": "Evansfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Slovakia (Slovak Republic)", "Customer_Behaviour[Timestamp]": 1462291370000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.71, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 62109.8, "Customer_Behaviour[Daily Internet Usage]": 246.06, "Customer_Behaviour[Ad Topic Line]": "Phased hybrid intranet", "Customer_Behaviour[City]": "Barbershire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Portugal", "Customer_Behaviour[Timestamp]": 1457690483000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.22, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 73882.91, "Customer_Behaviour[Daily Internet Usage]": 214.33, "Customer_Behaviour[Ad Topic Line]": "Inverse national core", "Customer_Behaviour[City]": "Turnerville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Norfolk Island", "Customer_Behaviour[Timestamp]": 1458674087000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.74, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 51409.45, "Customer_Behaviour[Daily Internet Usage]": 234.75, "Customer_Behaviour[Ad Topic Line]": "Quality-focused zero tolerance matrices", "Customer_Behaviour[City]": "West Zacharyborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ukraine", "Customer_Behaviour[Timestamp]": 1466277014000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.16, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 70185.06, "Customer_Behaviour[Daily Internet Usage]": 194.95, "Customer_Behaviour[Ad Topic Line]": "Decentralized 24hour approach", "Customer_Behaviour[City]": "Robinsonland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Finland", "Customer_Behaviour[Timestamp]": 1451880035000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.91, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 53223.58, "Customer_Behaviour[Daily Internet Usage]": 222.87, "Customer_Behaviour[Ad Topic Line]": "Distributed bifurcated challenge", "Customer_Behaviour[City]": "Haleberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1451946445000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.37, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 63664.32, "Customer_Behaviour[Daily Internet Usage]": 207.44, "Customer_Behaviour[Ad Topic Line]": "Open-architected system-worthy ability", "Customer_Behaviour[City]": "Estradafurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tonga", "Customer_Behaviour[Timestamp]": 1467174190000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.9, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 71727.51, "Customer_Behaviour[Daily Internet Usage]": 190.95, "Customer_Behaviour[Ad Topic Line]": "Centralized client-driven workforce", "Customer_Behaviour[City]": "Port Juan", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kyrgyz Republic", "Customer_Behaviour[Timestamp]": 1466205578000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.35, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 76984.21, "Customer_Behaviour[Daily Internet Usage]": 164.02, "Customer_Behaviour[Ad Topic Line]": "Proactive interactive service-desk", "Customer_Behaviour[City]": "Lake Hailey", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sweden", "Customer_Behaviour[Timestamp]": 1466410929000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.61, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 72154.68, "Customer_Behaviour[Daily Internet Usage]": 190.12, "Customer_Behaviour[Ad Topic Line]": "Assimilated encompassing portal", "Customer_Behaviour[City]": "Meaganfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Italy", "Customer_Behaviour[Timestamp]": 1460784273000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.72, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 65704.79, "Customer_Behaviour[Daily Internet Usage]": 179.82, "Customer_Behaviour[Ad Topic Line]": "Cross-group global orchestration", "Customer_Behaviour[City]": "North Monicaville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belarus", "Customer_Behaviour[Timestamp]": 1453007231000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.87, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 72948.76, "Customer_Behaviour[Daily Internet Usage]": 212.59, "Customer_Behaviour[Ad Topic Line]": "Down-sized bandwidth-monitored core", "Customer_Behaviour[City]": "Mullenside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Georgia and the South Sandwich Islands", "Customer_Behaviour[Timestamp]": 1468017010000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.81, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 71157.05, "Customer_Behaviour[Daily Internet Usage]": 229.19, "Customer_Behaviour[Ad Topic Line]": "Inverse zero-defect capability", "Customer_Behaviour[City]": "Sanchezland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greenland", "Customer_Behaviour[Timestamp]": 1459108211000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.94, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 74159.69, "Customer_Behaviour[Daily Internet Usage]": 190.84, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered real-time implementation", "Customer_Behaviour[City]": "Rogerland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1461937099000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.14, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 69758.31, "Customer_Behaviour[Daily Internet Usage]": 224.82, "Customer_Behaviour[Ad Topic Line]": "Assimilated stable encryption", "Customer_Behaviour[City]": "Newmanberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "France", "Customer_Behaviour[Timestamp]": 1466470367000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.85, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 58363.12, "Customer_Behaviour[Daily Internet Usage]": 213.96, "Customer_Behaviour[Ad Topic Line]": "Cloned optimal leverage", "Customer_Behaviour[City]": "Cannonbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bulgaria", "Customer_Behaviour[Timestamp]": 1453056355000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.18, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 69438.04, "Customer_Behaviour[Daily Internet Usage]": 225.02, "Customer_Behaviour[Ad Topic Line]": "De-engineered attitude-oriented projection", "Customer_Behaviour[City]": "Lisamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bolivia", "Customer_Behaviour[Timestamp]": 1465597270000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.55, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 68016.9, "Customer_Behaviour[Daily Internet Usage]": 219.91, "Customer_Behaviour[Ad Topic Line]": "Extended grid-enabled hierarchy", "Customer_Behaviour[City]": "Port Brittanyville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "British Virgin Islands", "Customer_Behaviour[Timestamp]": 1459206084000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.46, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 56909.3, "Customer_Behaviour[Daily Internet Usage]": 230.78, "Customer_Behaviour[Ad Topic Line]": "Mandatory coherent groupware", "Customer_Behaviour[City]": "Carterton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "India", "Customer_Behaviour[Timestamp]": 1465031609000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.62, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 57032.36, "Customer_Behaviour[Daily Internet Usage]": 195.68, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered systematic info-mediaries", "Customer_Behaviour[City]": "South Dianeshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iran", "Customer_Behaviour[Timestamp]": 1460669869000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.05, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 65756.36, "Customer_Behaviour[Daily Internet Usage]": 236.08, "Customer_Behaviour[Ad Topic Line]": "Centralized value-added hierarchy", "Customer_Behaviour[City]": "Villanuevastad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Namibia", "Customer_Behaviour[Timestamp]": 1463508406000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.18, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 69874.18, "Customer_Behaviour[Daily Internet Usage]": 203.87, "Customer_Behaviour[Ad Topic Line]": "Front-line even-keeled website", "Customer_Behaviour[City]": "Lake Lisa", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cayman Islands", "Customer_Behaviour[Timestamp]": 1453257096000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.78, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 50038.65, "Customer_Behaviour[Daily Internet Usage]": 232.78, "Customer_Behaviour[Ad Topic Line]": "Persistent fault-tolerant service-desk", "Customer_Behaviour[City]": "Valerieland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Swaziland", "Customer_Behaviour[Timestamp]": 1469051622000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.98, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 67432.49, "Customer_Behaviour[Daily Internet Usage]": 212.88, "Customer_Behaviour[Ad Topic Line]": "Up-sized maximized model", "Customer_Behaviour[City]": "Patrickmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Martin", "Customer_Behaviour[Timestamp]": 1465032327000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.6, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 73392.28, "Customer_Behaviour[Daily Internet Usage]": 194.23, "Customer_Behaviour[Ad Topic Line]": "Organized global flexibility", "Customer_Behaviour[City]": "Lake Deannaborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Rwanda", "Customer_Behaviour[Timestamp]": 1461311313000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.3, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 56735.83, "Customer_Behaviour[Daily Internet Usage]": 232.21, "Customer_Behaviour[Ad Topic Line]": "Balanced executive definition", "Customer_Behaviour[City]": "Davieshaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gabon", "Customer_Behaviour[Timestamp]": 1460795768000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.47, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 67033.34, "Customer_Behaviour[Daily Internet Usage]": 226.64, "Customer_Behaviour[Ad Topic Line]": "Focused coherent success", "Customer_Behaviour[City]": "North Kennethside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Poland", "Customer_Behaviour[Timestamp]": 1466814803000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.69, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 68717.0, "Customer_Behaviour[Daily Internet Usage]": 192.57, "Customer_Behaviour[Ad Topic Line]": "Robust context-sensitive neural-net", "Customer_Behaviour[City]": "Shelbyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1458710855000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.72, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 66861.67, "Customer_Behaviour[Daily Internet Usage]": 225.97, "Customer_Behaviour[Ad Topic Line]": "Fundamental tangible moratorium", "Customer_Behaviour[City]": "New Taylorburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Austria", "Customer_Behaviour[Timestamp]": 1456249066000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.24, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 54106.21, "Customer_Behaviour[Daily Internet Usage]": 199.29, "Customer_Behaviour[Ad Topic Line]": "Sharable value-added solution", "Customer_Behaviour[City]": "Deannaville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Luxembourg", "Customer_Behaviour[Timestamp]": 1459769991000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.82, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 58638.75, "Customer_Behaviour[Daily Internet Usage]": 169.1, "Customer_Behaviour[Ad Topic Line]": "Assimilated discrete strategy", "Customer_Behaviour[City]": "East Johnport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Slovakia (Slovak Republic)", "Customer_Behaviour[Timestamp]": 1454112337000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.25, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 70324.8, "Customer_Behaviour[Daily Internet Usage]": 220.08, "Customer_Behaviour[Ad Topic Line]": "Phased fault-tolerant definition", "Customer_Behaviour[City]": "Wagnerchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greenland", "Customer_Behaviour[Timestamp]": 1455553129000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.32, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 52416.18, "Customer_Behaviour[Daily Internet Usage]": 165.65, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive next generation Internet solution", "Customer_Behaviour[City]": "Daisymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Moldova", "Customer_Behaviour[Timestamp]": 1457413977000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 90.75, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 45945.88, "Customer_Behaviour[Daily Internet Usage]": 216.5, "Customer_Behaviour[Ad Topic Line]": "Decentralized methodical capability", "Customer_Behaviour[City]": "Lake Joseph", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Togo", "Customer_Behaviour[Timestamp]": 1457690312000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.41, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 65882.81, "Customer_Behaviour[Daily Internet Usage]": 222.08, "Customer_Behaviour[Ad Topic Line]": "Stand-alone logistical service-desk", "Customer_Behaviour[City]": "North Brandon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Nicaragua", "Customer_Behaviour[Timestamp]": 1460434962000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.79, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 55677.12, "Customer_Behaviour[Daily Internet Usage]": 235.94, "Customer_Behaviour[Ad Topic Line]": "Open-architected intangible strategy", "Customer_Behaviour[City]": "Wademouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Canada", "Customer_Behaviour[Timestamp]": 1462144913000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.05, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 75560.65, "Customer_Behaviour[Daily Internet Usage]": 203.44, "Customer_Behaviour[Ad Topic Line]": "Diverse directional hardware", "Customer_Behaviour[City]": "North Raymond", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1458841711000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.35, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 72330.57, "Customer_Behaviour[Daily Internet Usage]": 167.26, "Customer_Behaviour[Ad Topic Line]": "Total bi-directional success", "Customer_Behaviour[City]": "East Troyhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Yemen", "Customer_Behaviour[Timestamp]": 1457525408000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.75, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 52520.75, "Customer_Behaviour[Daily Internet Usage]": 249.45, "Customer_Behaviour[Ad Topic Line]": "Progressive 24/7 definition", "Customer_Behaviour[City]": "Lake Jose", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Barbados", "Customer_Behaviour[Timestamp]": 1465278076000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.03, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 59422.47, "Customer_Behaviour[Daily Internet Usage]": 217.37, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive next generation strategy", "Customer_Behaviour[City]": "Ashleymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "American Samoa", "Customer_Behaviour[Timestamp]": 1464737520000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.18, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 58443.99, "Customer_Behaviour[Daily Internet Usage]": 236.96, "Customer_Behaviour[Ad Topic Line]": "Open-source holistic productivity", "Customer_Behaviour[City]": "Lake Danielle", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1452457101000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.65, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 61117.5, "Customer_Behaviour[Daily Internet Usage]": 238.43, "Customer_Behaviour[Ad Topic Line]": "Function-based executive moderator", "Customer_Behaviour[City]": "West Dennis", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Pakistan", "Customer_Behaviour[Timestamp]": 1460962838000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.86, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 50506.44, "Customer_Behaviour[Daily Internet Usage]": 241.36, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered foreground encryption", "Customer_Behaviour[City]": "Austinborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "New Zealand", "Customer_Behaviour[Timestamp]": 1452633435000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.76, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 61039.13, "Customer_Behaviour[Daily Internet Usage]": 178.69, "Customer_Behaviour[Ad Topic Line]": "Monitored 24/7 moratorium", "Customer_Behaviour[City]": "South Pamela", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1463267294000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.64, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 46974.15, "Customer_Behaviour[Daily Internet Usage]": 221.59, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented real-time framework", "Customer_Behaviour[City]": "North Laurenview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Luxembourg", "Customer_Behaviour[Timestamp]": 1464084279000, "Customer_Behaviour[Clicked on Ad]": 0}], "samplecount": 1000, "samplefile": "/FileStore/platform/sampleData/64ca9c48ab8472757bd245a0/part-00000-9fb367dc-3789-4ede-8c65-c460c1b33b2d-c000.csv"}, {"_id": "64ca9c48ab8472757bd245a1", "mode": "staged", "originalfile": "/FileStore/platform/extra/tempFile1690999873.csv", "in": ["64ca9c48ab8472757bd245a0"], "out": ["64ca9c48ab8472757bd245a2"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "CustomerBehavior-PBI_AutoFE", "dataPercentage": "10", "comment": "", "pipeline_id": "64ca9c48ab8472757bd2459d", "sub_type": "Feature", "stage_type": "transformation", "stage_attributes": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "100", "sampledata": [{"Customer_Behaviour[Daily Time Spent on Site]": 47.0, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Daily Internet Usage]": 122.0, "Customer_Behaviour[Ad Topic Line]": "Centralized neutral neural-net", "Customer_Behaviour[City]": "West Brandonton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Qatar", "Customer_Behaviour[Timestamp]": 1458159541000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 45632.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 125.0, "Customer_Behaviour[City]_stringindexer_transform": 414.0, "Customer_Behaviour[Country]_stringindexer_transform": 46.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 143.0, "Customer_Behaviour[Ad Topic Line]": "Grass-roots coherent extranet", "Customer_Behaviour[City]": "West William", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Barbados", "Customer_Behaviour[Timestamp]": 1458811909000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 30976.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 415.0, "Customer_Behaviour[City]_stringindexer_transform": 288.0, "Customer_Behaviour[Country]_stringindexer_transform": 33.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 129.0, "Customer_Behaviour[Ad Topic Line]": "Customizable multi-tasking website", "Customer_Behaviour[City]": "West Dylanberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Palestinian Territory", "Customer_Behaviour[Timestamp]": 1454181641000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 23936.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 403.0, "Customer_Behaviour[City]_stringindexer_transform": 317.0, "Customer_Behaviour[Country]_stringindexer_transform": 208.0, "Customer_Behaviour[Timestamp]_dayofmonth": 30, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.0, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Daily Internet Usage]": 164.0, "Customer_Behaviour[Ad Topic Line]": "Mandatory disintermediate utilization", "Customer_Behaviour[City]": "South John", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1463734173000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 32635.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 69.0, "Customer_Behaviour[City]_stringindexer_transform": 203.0, "Customer_Behaviour[Country]_stringindexer_transform": 13.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 167.0, "Customer_Behaviour[Ad Topic Line]": "Exclusive neutral parallelism", "Customer_Behaviour[City]": "Harperborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tokelau", "Customer_Behaviour[Timestamp]": 1465838829000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 68962.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 39.0, "Customer_Behaviour[City]_stringindexer_transform": 237.0, "Customer_Behaviour[Country]_stringindexer_transform": 113.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.0, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Daily Internet Usage]": 129.0, "Customer_Behaviour[Ad Topic Line]": "Monitored systematic hierarchy", "Customer_Behaviour[City]": "South Cathyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greece", "Customer_Behaviour[Timestamp]": 1468917130000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 58295.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 94.0, "Customer_Behaviour[City]_stringindexer_transform": 357.0, "Customer_Behaviour[Country]_stringindexer_transform": 19.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 119.0, "Customer_Behaviour[Ad Topic Line]": "Open-architected impactful productivity", "Customer_Behaviour[City]": "Palmerside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "British Virgin Islands", "Customer_Behaviour[Timestamp]": 1460610515000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 32708.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 295.0, "Customer_Behaviour[City]_stringindexer_transform": 257.0, "Customer_Behaviour[Country]_stringindexer_transform": 81.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.0, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Daily Internet Usage]": 212.0, "Customer_Behaviour[Ad Topic Line]": "Multi-layered 4thgeneration knowledge user", "Customer_Behaviour[City]": "Port Cassie", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1452780009000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 30227.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 250.0, "Customer_Behaviour[City]_stringindexer_transform": 359.0, "Customer_Behaviour[Country]_stringindexer_transform": 12.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 38.0, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Daily Internet Usage]": 162.0, "Customer_Behaviour[Ad Topic Line]": "Intuitive exuding service-desk", "Customer_Behaviour[City]": "Millerchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1457678950000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 27508.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 480.0, "Customer_Behaviour[City]_stringindexer_transform": 475.0, "Customer_Behaviour[Country]_stringindexer_transform": 11.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.0, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Daily Internet Usage]": 119.0, "Customer_Behaviour[Ad Topic Line]": "Centralized 24/7 installation", "Customer_Behaviour[City]": "West Christopher", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Italy", "Customer_Behaviour[Timestamp]": 1461582114000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 54286.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 391.0, "Customer_Behaviour[City]_stringindexer_transform": 368.0, "Customer_Behaviour[Country]_stringindexer_transform": 131.0, "Customer_Behaviour[Timestamp]_dayofmonth": 25, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.0, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Daily Internet Usage]": 119.0, "Customer_Behaviour[Ad Topic Line]": "Team-oriented encompassing portal", "Customer_Behaviour[City]": "Amandahaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkey", "Customer_Behaviour[Timestamp]": 1455435418000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 62722.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 446.0, "Customer_Behaviour[City]_stringindexer_transform": 58.0, "Customer_Behaviour[Country]_stringindexer_transform": 74.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 150.0, "Customer_Behaviour[Ad Topic Line]": "Cross-group regional website", "Customer_Behaviour[City]": "Garciaside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Israel", "Customer_Behaviour[Timestamp]": 1455709320000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 75254.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 221.0, "Customer_Behaviour[City]_stringindexer_transform": 201.0, "Customer_Behaviour[Country]_stringindexer_transform": 58.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 44.0, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Daily Internet Usage]": 129.0, "Customer_Behaviour[Ad Topic Line]": "Organized global model", "Customer_Behaviour[City]": "Port Sarahshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Svalbard & Jan Mayen Islands", "Customer_Behaviour[Timestamp]": 1460247227000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 52336.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 230.0, "Customer_Behaviour[City]_stringindexer_transform": 467.0, "Customer_Behaviour[Country]_stringindexer_transform": 63.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 156.0, "Customer_Behaviour[Ad Topic Line]": "Phased transitional instruction set", "Customer_Behaviour[City]": "Brendachester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iran", "Customer_Behaviour[Timestamp]": 1464302987000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 24852.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 361.0, "Customer_Behaviour[City]_stringindexer_transform": 416.0, "Customer_Behaviour[Country]_stringindexer_transform": 25.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 141.0, "Customer_Behaviour[Ad Topic Line]": "Streamlined cohesive conglomeration", "Customer_Behaviour[City]": "Robertfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Christmas Island", "Customer_Behaviour[Timestamp]": 1464915323000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 66281.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 201.0, "Customer_Behaviour[City]_stringindexer_transform": 1.0, "Customer_Behaviour[Country]_stringindexer_transform": 49.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 105.0, "Customer_Behaviour[Ad Topic Line]": "Synchronized user-facing core", "Customer_Behaviour[City]": "Jensenborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Rwanda", "Customer_Behaviour[Timestamp]": 1452212247000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 51317.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 433.0, "Customer_Behaviour[City]_stringindexer_transform": 97.0, "Customer_Behaviour[Country]_stringindexer_transform": 21.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.0, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Daily Internet Usage]": 200.0, "Customer_Behaviour[Ad Topic Line]": "Organized client-driven alliance", "Customer_Behaviour[City]": "Bradleyburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turks and Caicos Islands", "Customer_Behaviour[Timestamp]": 1465164694000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 51510.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 439.0, "Customer_Behaviour[City]_stringindexer_transform": 233.0, "Customer_Behaviour[Country]_stringindexer_transform": 26.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 131.0, "Customer_Behaviour[Ad Topic Line]": "Synergized multimedia emulation", "Customer_Behaviour[City]": "North Regina", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Norfolk Island", "Customer_Behaviour[Timestamp]": 1461355822000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 32536.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 61.0, "Customer_Behaviour[City]_stringindexer_transform": 211.0, "Customer_Behaviour[Country]_stringindexer_transform": 44.0, "Customer_Behaviour[Timestamp]_dayofmonth": 22, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 139.0, "Customer_Behaviour[Ad Topic Line]": "Customer-focused optimizing moderator", "Customer_Behaviour[City]": "Davidmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bouvet Island (Bouvetoya)", "Customer_Behaviour[Timestamp]": 1454317255000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 60248.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 130.0, "Customer_Behaviour[City]_stringindexer_transform": 155.0, "Customer_Behaviour[Country]_stringindexer_transform": 40.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 111.0, "Customer_Behaviour[Ad Topic Line]": "Customizable executive software", "Customer_Behaviour[City]": "Lake Conniefurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ukraine", "Customer_Behaviour[Timestamp]": 1455746129000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 55605.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 398.0, "Customer_Behaviour[City]_stringindexer_transform": 145.0, "Customer_Behaviour[Country]_stringindexer_transform": 27.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 115.0, "Customer_Behaviour[Ad Topic Line]": "Down-sized uniform info-mediaries", "Customer_Behaviour[City]": "Lake Christopherfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Montserrat", "Customer_Behaviour[Timestamp]": 1452016612000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 61652.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 174.0, "Customer_Behaviour[City]_stringindexer_transform": 482.0, "Customer_Behaviour[Country]_stringindexer_transform": 155.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.0, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Daily Internet Usage]": 138.0, "Customer_Behaviour[Ad Topic Line]": "Streamlined next generation implementation", "Customer_Behaviour[City]": "East Tylershire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Timor-Leste", "Customer_Behaviour[Timestamp]": 1461051268000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 30726.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 442.0, "Customer_Behaviour[City]_stringindexer_transform": 380.0, "Customer_Behaviour[Country]_stringindexer_transform": 154.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 105.0, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered scalable groupware", "Customer_Behaviour[City]": "Lake Dustin", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1465745144000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 47861.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 242.0, "Customer_Behaviour[City]_stringindexer_transform": 494.0, "Customer_Behaviour[Country]_stringindexer_transform": 6.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 109.0, "Customer_Behaviour[Ad Topic Line]": "Phased dynamic customer loyalty", "Customer_Behaviour[City]": "New Tina", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1457997191000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 42696.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 122.0, "Customer_Behaviour[City]_stringindexer_transform": 202.0, "Customer_Behaviour[Country]_stringindexer_transform": 1.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Daily Internet Usage]": 138.0, "Customer_Behaviour[Ad Topic Line]": "Down-sized modular intranet", "Customer_Behaviour[City]": "Christopherport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jersey", "Customer_Behaviour[Timestamp]": 1463140270000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 71392.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 73.0, "Customer_Behaviour[City]_stringindexer_transform": 396.0, "Customer_Behaviour[Country]_stringindexer_transform": 20.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.0, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Daily Internet Usage]": 149.0, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive content-based focus group", "Customer_Behaviour[City]": "Port Sarahhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1456001225000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 59550.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 289.0, "Customer_Behaviour[City]_stringindexer_transform": 10.0, "Customer_Behaviour[Country]_stringindexer_transform": 6.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 156.0, "Customer_Behaviour[Ad Topic Line]": "Function-based optimizing protocol", "Customer_Behaviour[City]": "Williamsborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lithuania", "Customer_Behaviour[Timestamp]": 1452293230000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 64927.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 216.0, "Customer_Behaviour[City]_stringindexer_transform": 127.0, "Customer_Behaviour[Country]_stringindexer_transform": 60.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.0, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Daily Internet Usage]": 158.0, "Customer_Behaviour[Ad Topic Line]": "Up-sized secondary software", "Customer_Behaviour[City]": "North Michael", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Egypt", "Customer_Behaviour[Timestamp]": 1459154786000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 51868.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 21.0, "Customer_Behaviour[City]_stringindexer_transform": 84.0, "Customer_Behaviour[Country]_stringindexer_transform": 51.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.0, "Customer_Behaviour[Age]": 53, "Customer_Behaviour[Daily Internet Usage]": 169.0, "Customer_Behaviour[Ad Topic Line]": "Persevering reciprocal firmware", "Customer_Behaviour[City]": "Hernandezville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Western Sahara", "Customer_Behaviour[Timestamp]": 1467537750000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 31947.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 363.0, "Customer_Behaviour[City]_stringindexer_transform": 334.0, "Customer_Behaviour[Country]_stringindexer_transform": 36.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.0, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Daily Internet Usage]": 150.0, "Customer_Behaviour[Ad Topic Line]": "De-engineered mobile infrastructure", "Customer_Behaviour[City]": "Erinton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Christmas Island", "Customer_Behaviour[Timestamp]": 1461822625000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 66541.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 81.0, "Customer_Behaviour[City]_stringindexer_transform": 428.0, "Customer_Behaviour[Country]_stringindexer_transform": 49.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 135.0, "Customer_Behaviour[Ad Topic Line]": "Customer-focused upward-trending contingency", "Customer_Behaviour[City]": "Hughesport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guinea", "Customer_Behaviour[Timestamp]": 1459660231000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 33258.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 308.0, "Customer_Behaviour[City]_stringindexer_transform": 350.0, "Customer_Behaviour[Country]_stringindexer_transform": 79.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 60, "Customer_Behaviour[Daily Internet Usage]": 176.0, "Customer_Behaviour[Ad Topic Line]": "User-friendly upward-trending intranet", "Customer_Behaviour[City]": "New Lucasburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Madagascar", "Customer_Behaviour[Timestamp]": 1452987471000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 60333.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 233.0, "Customer_Behaviour[City]_stringindexer_transform": 165.0, "Customer_Behaviour[Country]_stringindexer_transform": 42.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.0, "Customer_Behaviour[Age]": 55, "Customer_Behaviour[Daily Internet Usage]": 162.0, "Customer_Behaviour[Ad Topic Line]": "Focused intangible moderator", "Customer_Behaviour[City]": "Port Christopherborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Arab Emirates", "Customer_Behaviour[Timestamp]": 1468426344000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 66815.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 489.0, "Customer_Behaviour[City]_stringindexer_transform": 386.0, "Customer_Behaviour[Country]_stringindexer_transform": 75.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Daily Internet Usage]": 207.0, "Customer_Behaviour[Ad Topic Line]": "Customer-focused transitional strategy", "Customer_Behaviour[City]": "Millerside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Somalia", "Customer_Behaviour[Timestamp]": 1468383053000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 29727.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 390.0, "Customer_Behaviour[City]_stringindexer_transform": 346.0, "Customer_Behaviour[Country]_stringindexer_transform": 86.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 152.0, "Customer_Behaviour[Ad Topic Line]": "Advanced web-enabled standardization", "Customer_Behaviour[City]": "Lake Jessica", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bhutan", "Customer_Behaviour[Timestamp]": 1465669932000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 49269.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 493.0, "Customer_Behaviour[City]_stringindexer_transform": 322.0, "Customer_Behaviour[Country]_stringindexer_transform": 160.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 37.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 225.0, "Customer_Behaviour[Ad Topic Line]": "Polarized dynamic throughput", "Customer_Behaviour[City]": "South Daniel", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Uzbekistan", "Customer_Behaviour[Timestamp]": 1456516103000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 35466.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 36.0, "Customer_Behaviour[City]_stringindexer_transform": 411.0, "Customer_Behaviour[Country]_stringindexer_transform": 162.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.0, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Daily Internet Usage]": 127.0, "Customer_Behaviour[Ad Topic Line]": "Devolved zero administration intranet", "Customer_Behaviour[City]": "Suzannetown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1466514921000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 68787.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 111.0, "Customer_Behaviour[City]_stringindexer_transform": 164.0, "Customer_Behaviour[Country]_stringindexer_transform": 10.0, "Customer_Behaviour[Timestamp]_dayofmonth": 21, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Daily Internet Usage]": 127.0, "Customer_Behaviour[Ad Topic Line]": "Cross-platform regional task-force", "Customer_Behaviour[City]": "Brianfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1460994873000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 56366.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 331.0, "Customer_Behaviour[City]_stringindexer_transform": 170.0, "Customer_Behaviour[Country]_stringindexer_transform": 16.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.0, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Daily Internet Usage]": 175.0, "Customer_Behaviour[Ad Topic Line]": "Down-sized well-modulated archive", "Customer_Behaviour[City]": "East Michelleberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lithuania", "Customer_Behaviour[Timestamp]": 1462352424000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 21644.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 186.0, "Customer_Behaviour[City]_stringindexer_transform": 264.0, "Customer_Behaviour[Country]_stringindexer_transform": 60.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 132.0, "Customer_Behaviour[Ad Topic Line]": "Realigned zero tolerance emulation", "Customer_Behaviour[City]": "Port Eric", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Martin", "Customer_Behaviour[Timestamp]": 1465843800000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 53817.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 155.0, "Customer_Behaviour[City]_stringindexer_transform": 403.0, "Customer_Behaviour[Country]_stringindexer_transform": 146.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 176.0, "Customer_Behaviour[Ad Topic Line]": "Versatile transitional monitoring", "Customer_Behaviour[City]": "Timothyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cuba", "Customer_Behaviour[Timestamp]": 1451836900000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 76368.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 269.0, "Customer_Behaviour[City]_stringindexer_transform": 56.0, "Customer_Behaviour[Country]_stringindexer_transform": 126.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.0, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Daily Internet Usage]": 127.0, "Customer_Behaviour[Ad Topic Line]": "User-centric intangible task-force", "Customer_Behaviour[City]": "Guzmanland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belize", "Customer_Behaviour[Timestamp]": 1452593249000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 50335.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 96.0, "Customer_Behaviour[City]_stringindexer_transform": 152.0, "Customer_Behaviour[Country]_stringindexer_transform": 29.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 38.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 140.0, "Customer_Behaviour[Ad Topic Line]": "Multi-layered user-facing paradigm", "Customer_Behaviour[City]": "East John", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Antarctica (the territory South of 60 deg S)", "Customer_Behaviour[Timestamp]": 1463119768000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 41229.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 265.0, "Customer_Behaviour[City]_stringindexer_transform": 461.0, "Customer_Behaviour[Country]_stringindexer_transform": 182.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.0, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Daily Internet Usage]": 152.0, "Customer_Behaviour[Ad Topic Line]": "Enterprise-wide client-driven contingency", "Customer_Behaviour[City]": "Heatherberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Dominica", "Customer_Behaviour[Timestamp]": 1467168209000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 71718.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 198.0, "Customer_Behaviour[City]_stringindexer_transform": 187.0, "Customer_Behaviour[Country]_stringindexer_transform": 89.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.0, "Customer_Behaviour[Age]": 57, "Customer_Behaviour[Daily Internet Usage]": 150.0, "Customer_Behaviour[Ad Topic Line]": "Diverse modular interface", "Customer_Behaviour[City]": "South George", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1460317681000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 61770.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 469.0, "Customer_Behaviour[City]_stringindexer_transform": 74.0, "Customer_Behaviour[Country]_stringindexer_transform": 10.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 44.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 127.0, "Customer_Behaviour[Ad Topic Line]": "Up-sized incremental encryption", "Customer_Behaviour[City]": "Codyburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belize", "Customer_Behaviour[Timestamp]": 1455432703000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 55787.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 314.0, "Customer_Behaviour[City]_stringindexer_transform": 377.0, "Customer_Behaviour[Country]_stringindexer_transform": 29.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 159.0, "Customer_Behaviour[Ad Topic Line]": "Managed grid-enabled standardization", "Customer_Behaviour[City]": "Ramirezside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liechtenstein", "Customer_Behaviour[Timestamp]": 1462762738000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 73234.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 397.0, "Customer_Behaviour[City]_stringindexer_transform": 354.0, "Customer_Behaviour[Country]_stringindexer_transform": 43.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.0, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Daily Internet Usage]": 140.0, "Customer_Behaviour[Ad Topic Line]": "Universal 24/7 implementation", "Customer_Behaviour[City]": "East Rachelview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Equatorial Guinea", "Customer_Behaviour[Timestamp]": 1454039659000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 50960.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 296.0, "Customer_Behaviour[City]_stringindexer_transform": 376.0, "Customer_Behaviour[Country]_stringindexer_transform": 179.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 34.0, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Daily Internet Usage]": 194.0, "Customer_Behaviour[Ad Topic Line]": "Customer-focused multi-tasking Internet solution", "Customer_Behaviour[City]": "Curtisport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mongolia", "Customer_Behaviour[Timestamp]": 1468498030000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 48246.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 440.0, "Customer_Behaviour[City]_stringindexer_transform": 363.0, "Customer_Behaviour[Country]_stringindexer_transform": 110.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 55, "Customer_Behaviour[Daily Internet Usage]": 143.0, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented contextually-based extranet", "Customer_Behaviour[City]": "Frankbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Svalbard & Jan Mayen Islands", "Customer_Behaviour[Timestamp]": 1452467670000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 28271.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 340.0, "Customer_Behaviour[City]_stringindexer_transform": 449.0, "Customer_Behaviour[Country]_stringindexer_transform": 63.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.0, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Daily Internet Usage]": 137.0, "Customer_Behaviour[Ad Topic Line]": "Centralized tertiary pricing structure", "Customer_Behaviour[City]": "East Eric", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guinea", "Customer_Behaviour[Timestamp]": 1466644963000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 70053.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 100.0, "Customer_Behaviour[City]_stringindexer_transform": 407.0, "Customer_Behaviour[Country]_stringindexer_transform": 79.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.0, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Daily Internet Usage]": 105.0, "Customer_Behaviour[Ad Topic Line]": "Synergized context-sensitive database", "Customer_Behaviour[City]": "Jacobstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kuwait", "Customer_Behaviour[Timestamp]": 1456685564000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 42995.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 168.0, "Customer_Behaviour[City]_stringindexer_transform": 447.0, "Customer_Behaviour[Country]_stringindexer_transform": 173.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 145.0, "Customer_Behaviour[Ad Topic Line]": "Profit-focused dedicated utilization", "Customer_Behaviour[City]": "East Stephen", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Vietnam", "Customer_Behaviour[Timestamp]": 1451791335000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 31343.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 228.0, "Customer_Behaviour[City]_stringindexer_transform": 424.0, "Customer_Behaviour[Country]_stringindexer_transform": 68.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 168.0, "Customer_Behaviour[Ad Topic Line]": "Stand-alone tangible moderator", "Customer_Behaviour[City]": "Turnerchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guatemala", "Customer_Behaviour[Timestamp]": 1451944118000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 40763.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 101.0, "Customer_Behaviour[City]_stringindexer_transform": 444.0, "Customer_Behaviour[Country]_stringindexer_transform": 106.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.0, "Customer_Behaviour[Age]": 60, "Customer_Behaviour[Daily Internet Usage]": 157.0, "Customer_Behaviour[Ad Topic Line]": "Polarized tangible collaboration", "Customer_Behaviour[City]": "Youngfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1464096638000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 36752.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 25.0, "Customer_Behaviour[City]_stringindexer_transform": 462.0, "Customer_Behaviour[Country]_stringindexer_transform": 9.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.0, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Daily Internet Usage]": 136.0, "Customer_Behaviour[Ad Topic Line]": "Virtual scalable secured line", "Customer_Behaviour[City]": "Port Melissaberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Singapore", "Customer_Behaviour[Timestamp]": 1454576017000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 43444.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 373.0, "Customer_Behaviour[City]_stringindexer_transform": 369.0, "Customer_Behaviour[Country]_stringindexer_transform": 37.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 153.0, "Customer_Behaviour[Ad Topic Line]": "Synchronized leadingedge help-desk", "Customer_Behaviour[City]": "Aliciatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Canada", "Customer_Behaviour[Timestamp]": 1456040568000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 39840.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 46.0, "Customer_Behaviour[City]_stringindexer_transform": 14.0, "Customer_Behaviour[Country]_stringindexer_transform": 54.0, "Customer_Behaviour[Timestamp]_dayofmonth": 21, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 145.0, "Customer_Behaviour[Ad Topic Line]": "Total 5thgeneration standardization", "Customer_Behaviour[City]": "Josephstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1466961386000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 32593.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 277.0, "Customer_Behaviour[City]_stringindexer_transform": 483.0, "Customer_Behaviour[Country]_stringindexer_transform": 2.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 123.0, "Customer_Behaviour[Ad Topic Line]": "Sharable grid-enabled matrix", "Customer_Behaviour[City]": "West Ericfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1451799273000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 41629.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 344.0, "Customer_Behaviour[City]_stringindexer_transform": 15.0, "Customer_Behaviour[Country]_stringindexer_transform": 15.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 106.0, "Customer_Behaviour[Ad Topic Line]": "Balanced asynchronous hierarchy", "Customer_Behaviour[City]": "New Brendafurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kenya", "Customer_Behaviour[Timestamp]": 1457460043000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 43313.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 118.0, "Customer_Behaviour[City]_stringindexer_transform": 9.0, "Customer_Behaviour[Country]_stringindexer_transform": 62.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.0, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Daily Internet Usage]": 116.0, "Customer_Behaviour[Ad Topic Line]": "Face-to-face even-keeled website", "Customer_Behaviour[City]": "Kentmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1463465660000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 51633.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 162.0, "Customer_Behaviour[City]_stringindexer_transform": 7.0, "Customer_Behaviour[Country]_stringindexer_transform": 12.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 120.0, "Customer_Behaviour[Ad Topic Line]": "User-friendly client-server instruction set", "Customer_Behaviour[City]": "North Russellborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1455158402000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 37345.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 455.0, "Customer_Behaviour[City]_stringindexer_transform": 374.0, "Customer_Behaviour[Country]_stringindexer_transform": 10.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.0, "Customer_Behaviour[Age]": 58, "Customer_Behaviour[Daily Internet Usage]": 140.0, "Customer_Behaviour[Ad Topic Line]": "Assimilated fault-tolerant hub", "Customer_Behaviour[City]": "Penatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1466042484000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 39132.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 217.0, "Customer_Behaviour[City]_stringindexer_transform": 270.0, "Customer_Behaviour[Country]_stringindexer_transform": 1.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 163.0, "Customer_Behaviour[Ad Topic Line]": "Compatible systemic function", "Customer_Behaviour[City]": "Hartmanchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cyprus", "Customer_Behaviour[Timestamp]": 1454473274000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 68519.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 123.0, "Customer_Behaviour[City]_stringindexer_transform": 20.0, "Customer_Behaviour[Country]_stringindexer_transform": 39.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Daily Internet Usage]": 151.0, "Customer_Behaviour[Ad Topic Line]": "Front-line tangible alliance", "Customer_Behaviour[City]": "Hansenmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1466478881000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 34127.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 87.0, "Customer_Behaviour[City]_stringindexer_transform": 293.0, "Customer_Behaviour[Country]_stringindexer_transform": 5.0, "Customer_Behaviour[Timestamp]_dayofmonth": 21, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 53.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 111.0, "Customer_Behaviour[Ad Topic Line]": "Self-enabling optimal initiative", "Customer_Behaviour[City]": "West Jessicahaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mauritania", "Customer_Behaviour[Timestamp]": 1462568851000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 44893.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 329.0, "Customer_Behaviour[City]_stringindexer_transform": 188.0, "Customer_Behaviour[Country]_stringindexer_transform": 198.0, "Customer_Behaviour[Timestamp]_dayofmonth": 6, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 34.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 200.0, "Customer_Behaviour[Ad Topic Line]": "Configurable logistical Graphical User Interface", "Customer_Behaviour[City]": "Davilachester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Czech Republic", "Customer_Behaviour[Timestamp]": 1465753963000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 59621.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 465.0, "Customer_Behaviour[City]_stringindexer_transform": 394.0, "Customer_Behaviour[Country]_stringindexer_transform": 118.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 170.0, "Customer_Behaviour[Ad Topic Line]": "Virtual bandwidth-monitored initiative", "Customer_Behaviour[City]": "North Ricardotown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Chile", "Customer_Behaviour[Timestamp]": 1452497782000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 20856.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 389.0, "Customer_Behaviour[City]_stringindexer_transform": 73.0, "Customer_Behaviour[Country]_stringindexer_transform": 138.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.0, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Daily Internet Usage]": 136.0, "Customer_Behaviour[Ad Topic Line]": "Cloned object-oriented benchmark", "Customer_Behaviour[City]": "Millerbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkmenistan", "Customer_Behaviour[Timestamp]": 1458810772000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 68737.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 291.0, "Customer_Behaviour[City]_stringindexer_transform": 248.0, "Customer_Behaviour[Country]_stringindexer_transform": 76.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 154.0, "Customer_Behaviour[Ad Topic Line]": "Fundamental fault-tolerant neural-net", "Customer_Behaviour[City]": "Garciaview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Latvia", "Customer_Behaviour[Timestamp]": 1455435024000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 76893.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 129.0, "Customer_Behaviour[City]_stringindexer_transform": 45.0, "Customer_Behaviour[Country]_stringindexer_transform": 184.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 133.0, "Customer_Behaviour[Ad Topic Line]": "Compatible intangible customer loyalty", "Customer_Behaviour[City]": "Williamstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkey", "Customer_Behaviour[Timestamp]": 1455132051000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 53441.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 349.0, "Customer_Behaviour[City]_stringindexer_transform": 289.0, "Customer_Behaviour[Country]_stringindexer_transform": 74.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 119.0, "Customer_Behaviour[Ad Topic Line]": "Distributed 3rdgeneration definition", "Customer_Behaviour[City]": "West Connor", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kazakhstan", "Customer_Behaviour[Timestamp]": 1461422078000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 41356.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 341.0, "Customer_Behaviour[City]_stringindexer_transform": 117.0, "Customer_Behaviour[Country]_stringindexer_transform": 127.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 34.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 154.0, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive cohesive budgetary management", "Customer_Behaviour[City]": "West Justin", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bahrain", "Customer_Behaviour[Timestamp]": 1466272592000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 49942.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 178.0, "Customer_Behaviour[City]_stringindexer_transform": 119.0, "Customer_Behaviour[Country]_stringindexer_transform": 181.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 143.0, "Customer_Behaviour[Ad Topic Line]": "Diverse executive groupware", "Customer_Behaviour[City]": "West Tinashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Pierre and Miquelon", "Customer_Behaviour[Timestamp]": 1468915158000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 74445.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 243.0, "Customer_Behaviour[City]_stringindexer_transform": 110.0, "Customer_Behaviour[Country]_stringindexer_transform": 23.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 239.0, "Customer_Behaviour[Ad Topic Line]": "Synergized cohesive array", "Customer_Behaviour[City]": "Jamesfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1466941938000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 49309.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 395.0, "Customer_Behaviour[City]_stringindexer_transform": 150.0, "Customer_Behaviour[Country]_stringindexer_transform": 1.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 123.0, "Customer_Behaviour[Ad Topic Line]": "Universal even-keeled analyzer", "Customer_Behaviour[City]": "Harveyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turks and Caicos Islands", "Customer_Behaviour[Timestamp]": 1462320093000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 58348.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 301.0, "Customer_Behaviour[City]_stringindexer_transform": 484.0, "Customer_Behaviour[Country]_stringindexer_transform": 26.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 128.0, "Customer_Behaviour[Ad Topic Line]": "Monitored real-time superstructure", "Customer_Behaviour[City]": "North Kevinside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1464038078000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 62060.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 385.0, "Customer_Behaviour[City]_stringindexer_transform": 182.0, "Customer_Behaviour[Country]_stringindexer_transform": 10.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Daily Internet Usage]": 150.0, "Customer_Behaviour[Ad Topic Line]": "Automated static concept", "Customer_Behaviour[City]": "Christinetown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1469285243000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 24030.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 375.0, "Customer_Behaviour[City]_stringindexer_transform": 365.0, "Customer_Behaviour[Country]_stringindexer_transform": 0.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.0, "Customer_Behaviour[Age]": 56, "Customer_Behaviour[Daily Internet Usage]": 168.0, "Customer_Behaviour[Ad Topic Line]": "Profit-focused attitude-oriented task-force", "Customer_Behaviour[City]": "Petersonfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tajikistan", "Customer_Behaviour[Timestamp]": 1455117797000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 43450.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 476.0, "Customer_Behaviour[City]_stringindexer_transform": 214.0, "Customer_Behaviour[Country]_stringindexer_transform": 194.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.0, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Daily Internet Usage]": 161.0, "Customer_Behaviour[Ad Topic Line]": "Cross-platform multimedia algorithm", "Customer_Behaviour[City]": "New Lindaberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liechtenstein", "Customer_Behaviour[Timestamp]": 1461505335000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 25408.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 244.0, "Customer_Behaviour[City]_stringindexer_transform": 142.0, "Customer_Behaviour[Country]_stringindexer_transform": 43.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.0, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Daily Internet Usage]": 123.0, "Customer_Behaviour[Ad Topic Line]": "Progressive non-volatile neural-net", "Customer_Behaviour[City]": "Port Crystal", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "France", "Customer_Behaviour[Timestamp]": 1452315202000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 62784.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 286.0, "Customer_Behaviour[City]_stringindexer_transform": 309.0, "Customer_Behaviour[Country]_stringindexer_transform": 38.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 121.0, "Customer_Behaviour[Ad Topic Line]": "Programmable uniform productivity", "Customer_Behaviour[City]": "South Jasminebury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Albania", "Customer_Behaviour[Timestamp]": 1466270606000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 42042.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 318.0, "Customer_Behaviour[City]_stringindexer_transform": 228.0, "Customer_Behaviour[Country]_stringindexer_transform": 30.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 109.0, "Customer_Behaviour[Ad Topic Line]": "De-engineered fault-tolerant database", "Customer_Behaviour[City]": "Charlottefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1467207305000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 54875.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 236.0, "Customer_Behaviour[City]_stringindexer_transform": 131.0, "Customer_Behaviour[Country]_stringindexer_transform": 14.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.0, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Daily Internet Usage]": 125.0, "Customer_Behaviour[Ad Topic Line]": "Configurable bottom-line application", "Customer_Behaviour[City]": "West Lindseybury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Thailand", "Customer_Behaviour[Timestamp]": 1460526172000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 50199.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 252.0, "Customer_Behaviour[City]_stringindexer_transform": 193.0, "Customer_Behaviour[Country]_stringindexer_transform": 93.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 136.0, "Customer_Behaviour[Ad Topic Line]": "Proactive next generation knowledge user", "Customer_Behaviour[City]": "Lake David", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1456478328000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 56694.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 270.0, "Customer_Behaviour[City]_stringindexer_transform": 489.0, "Customer_Behaviour[Country]_stringindexer_transform": 2.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 156.0, "Customer_Behaviour[Ad Topic Line]": "Devolved responsive structure", "Customer_Behaviour[City]": "Tinaton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Honduras", "Customer_Behaviour[Timestamp]": 1468841611000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 27086.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 247.0, "Customer_Behaviour[City]_stringindexer_transform": 206.0, "Customer_Behaviour[Country]_stringindexer_transform": 134.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.0, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Daily Internet Usage]": 144.0, "Customer_Behaviour[Ad Topic Line]": "De-engineered solution-oriented open architecture", "Customer_Behaviour[City]": "Alexanderfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Guiana", "Customer_Behaviour[Timestamp]": 1451952173000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 32847.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 98.0, "Customer_Behaviour[City]_stringindexer_transform": 67.0, "Customer_Behaviour[Country]_stringindexer_transform": 114.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.0, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Daily Internet Usage]": 148.0, "Customer_Behaviour[Ad Topic Line]": "Customizable modular Internet solution", "Customer_Behaviour[City]": "West Pamela", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Northern Mariana Islands", "Customer_Behaviour[Timestamp]": 1463274186000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 32006.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 153.0, "Customer_Behaviour[City]_stringindexer_transform": 460.0, "Customer_Behaviour[Country]_stringindexer_transform": 165.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 133.0, "Customer_Behaviour[Ad Topic Line]": "Stand-alone encompassing throughput", "Customer_Behaviour[City]": "West Amanda", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lebanon", "Customer_Behaviour[Timestamp]": 1462440516000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 48913.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 467.0, "Customer_Behaviour[City]_stringindexer_transform": 190.0, "Customer_Behaviour[Country]_stringindexer_transform": 87.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 127.0, "Customer_Behaviour[Ad Topic Line]": "Re-engineered real-time success", "Customer_Behaviour[City]": "Garciamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tonga", "Customer_Behaviour[Timestamp]": 1467745185000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 46339.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 491.0, "Customer_Behaviour[City]_stringindexer_transform": 134.0, "Customer_Behaviour[Country]_stringindexer_transform": 73.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.0, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Daily Internet Usage]": 141.0, "Customer_Behaviour[Ad Topic Line]": "Digitized contextually-based product", "Customer_Behaviour[City]": "South Kyle", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Southern Territories", "Customer_Behaviour[Timestamp]": 1462446569000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 66348.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 66.0, "Customer_Behaviour[City]_stringindexer_transform": 138.0, "Customer_Behaviour[Country]_stringindexer_transform": 144.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.0, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Daily Internet Usage]": 167.0, "Customer_Behaviour[Ad Topic Line]": "Organic interactive support", "Customer_Behaviour[City]": "Combsstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Serbia", "Customer_Behaviour[Timestamp]": 1458919059000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 66873.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 323.0, "Customer_Behaviour[City]_stringindexer_transform": 379.0, "Customer_Behaviour[Country]_stringindexer_transform": 109.0, "Customer_Behaviour[Timestamp]_dayofmonth": 25, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 171.0, "Customer_Behaviour[Ad Topic Line]": "Function-based stable alliance", "Customer_Behaviour[City]": "Lake Allenville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "New Caledonia", "Customer_Behaviour[Timestamp]": 1453561333000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 72270.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 303.0, "Customer_Behaviour[City]_stringindexer_transform": 236.0, "Customer_Behaviour[Country]_stringindexer_transform": 183.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 52.0, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Daily Internet Usage]": 176.0, "Customer_Behaviour[Ad Topic Line]": "Enterprise-wide foreground emulation", "Customer_Behaviour[City]": "Port Juan", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Seychelles", "Customer_Behaviour[Timestamp]": 1454358635000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 73863.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 180.0, "Customer_Behaviour[City]_stringindexer_transform": 0.0, "Customer_Behaviour[Country]_stringindexer_transform": 57.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.0, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Daily Internet Usage]": 152.0, "Customer_Behaviour[Ad Topic Line]": "Customer-focused incremental system engine", "Customer_Behaviour[City]": "Michellefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mayotte", "Customer_Behaviour[Timestamp]": 1453570746000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 62378.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 321.0, "Customer_Behaviour[City]_stringindexer_transform": 324.0, "Customer_Behaviour[Country]_stringindexer_transform": 22.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 33.0, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Daily Internet Usage]": 165.0, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented optimizing middleware", "Customer_Behaviour[City]": "Jessicahaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cambodia", "Customer_Behaviour[Timestamp]": 1462830878000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 42191.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 402.0, "Customer_Behaviour[City]_stringindexer_transform": 135.0, "Customer_Behaviour[Country]_stringindexer_transform": 98.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.0, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Daily Internet Usage]": 161.0, "Customer_Behaviour[Ad Topic Line]": "Extended interactive model", "Customer_Behaviour[City]": "Roberttown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Pierre and Miquelon", "Customer_Behaviour[Timestamp]": 1465826391000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 23975.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 237.0, "Customer_Behaviour[City]_stringindexer_transform": 262.0, "Customer_Behaviour[Country]_stringindexer_transform": 23.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.0, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Daily Internet Usage]": 169.0, "Customer_Behaviour[Ad Topic Line]": "Upgradable even-keeled challenge", "Customer_Behaviour[City]": "New Amanda", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1455866970000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 41851.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 157.0, "Customer_Behaviour[City]_stringindexer_transform": 122.0, "Customer_Behaviour[Country]_stringindexer_transform": 8.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.0, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Daily Internet Usage]": 110.0, "Customer_Behaviour[Ad Topic Line]": "Horizontal national architecture", "Customer_Behaviour[City]": "North April", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "France", "Customer_Behaviour[Timestamp]": 1461112913000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 47160.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 115.0, "Customer_Behaviour[City]_stringindexer_transform": 120.0, "Customer_Behaviour[Country]_stringindexer_transform": 38.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.0, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Daily Internet Usage]": 105.0, "Customer_Behaviour[Ad Topic Line]": "Adaptive contextually-based methodology", "Customer_Behaviour[City]": "Port Paultown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Austria", "Customer_Behaviour[Timestamp]": 1460469668000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 44174.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 284.0, "Customer_Behaviour[City]_stringindexer_transform": 390.0, "Customer_Behaviour[Country]_stringindexer_transform": 123.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 135.0, "Customer_Behaviour[Ad Topic Line]": "Configurable dynamic adapter", "Customer_Behaviour[City]": "East Vincentstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Zambia", "Customer_Behaviour[Timestamp]": 1458041148000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 67050.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 256.0, "Customer_Behaviour[City]_stringindexer_transform": 144.0, "Customer_Behaviour[Country]_stringindexer_transform": 186.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 36.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 195.0, "Customer_Behaviour[Ad Topic Line]": "Self-enabling incremental collaboration", "Customer_Behaviour[City]": "New Rebecca", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Anguilla", "Customer_Behaviour[Timestamp]": 1453981840000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 29398.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 292.0, "Customer_Behaviour[City]_stringindexer_transform": 174.0, "Customer_Behaviour[Country]_stringindexer_transform": 168.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 219.0, "Customer_Behaviour[Ad Topic Line]": "Secured scalable Graphical User Interface", "Customer_Behaviour[City]": "Port Brookeland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Martinique", "Customer_Behaviour[Timestamp]": 1467820599000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 60953.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 496.0, "Customer_Behaviour[City]_stringindexer_transform": 207.0, "Customer_Behaviour[Country]_stringindexer_transform": 156.0, "Customer_Behaviour[Timestamp]_dayofmonth": 6, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 36.0, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Daily Internet Usage]": 168.0, "Customer_Behaviour[Ad Topic Line]": "Reverse-engineered well-modulated capability", "Customer_Behaviour[City]": "East Yvonnechester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Eritrea", "Customer_Behaviour[Timestamp]": 1460940573000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 57983.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 280.0, "Customer_Behaviour[City]_stringindexer_transform": 177.0, "Customer_Behaviour[Country]_stringindexer_transform": 45.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.0, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Daily Internet Usage]": 115.0, "Customer_Behaviour[Ad Topic Line]": "Integrated coherent pricing structure", "Customer_Behaviour[City]": "Burgessside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mexico", "Customer_Behaviour[Timestamp]": 1468718036000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 52736.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 376.0, "Customer_Behaviour[City]_stringindexer_transform": 42.0, "Customer_Behaviour[Country]_stringindexer_transform": 24.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.0, "Customer_Behaviour[Age]": 19, "Customer_Behaviour[Daily Internet Usage]": 184.0, "Customer_Behaviour[Ad Topic Line]": "Upgradable directional system engine", "Customer_Behaviour[City]": "Port Kathleenfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Nauru", "Customer_Behaviour[Timestamp]": 1465482246000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 53309.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 430.0, "Customer_Behaviour[City]_stringindexer_transform": 311.0, "Customer_Behaviour[Country]_stringindexer_transform": 142.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.0, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Daily Internet Usage]": 126.0, "Customer_Behaviour[Ad Topic Line]": "Public-key non-volatile implementation", "Customer_Behaviour[City]": "Charlenetown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Barthelemy", "Customer_Behaviour[Timestamp]": 1464661038000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 43698.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 459.0, "Customer_Behaviour[City]_stringindexer_transform": 130.0, "Customer_Behaviour[Country]_stringindexer_transform": 111.0, "Customer_Behaviour[Timestamp]_dayofmonth": 31, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 37.0, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Daily Internet Usage]": 167.0, "Customer_Behaviour[Ad Topic Line]": "Horizontal high-level concept", "Customer_Behaviour[City]": "South Johnnymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Antigua and Barbuda", "Customer_Behaviour[Timestamp]": 1460259016000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 31281.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 185.0, "Customer_Behaviour[City]_stringindexer_transform": 100.0, "Customer_Behaviour[Country]_stringindexer_transform": 50.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.0, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Daily Internet Usage]": 111.0, "Customer_Behaviour[Ad Topic Line]": "Reduced multimedia project", "Customer_Behaviour[City]": "Hannaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1455002485000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 45800.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 251.0, "Customer_Behaviour[City]_stringindexer_transform": 471.0, "Customer_Behaviour[Country]_stringindexer_transform": 5.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.0, "Customer_Behaviour[Age]": 59, "Customer_Behaviour[Daily Internet Usage]": 158.0, "Customer_Behaviour[Ad Topic Line]": "Object-based modular functionalities", "Customer_Behaviour[City]": "East Anthony", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1466183476000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 42362.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 386.0, "Customer_Behaviour[City]_stringindexer_transform": 328.0, "Customer_Behaviour[Country]_stringindexer_transform": 0.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.0, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Daily Internet Usage]": 113.0, "Customer_Behaviour[Ad Topic Line]": "Organic asynchronous hierarchy", "Customer_Behaviour[City]": "Rogerburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1453965029000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 45400.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 309.0, "Customer_Behaviour[City]_stringindexer_transform": 70.0, "Customer_Behaviour[Country]_stringindexer_transform": 5.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.0, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Daily Internet Usage]": 144.0, "Customer_Behaviour[Ad Topic Line]": "Proactive client-server productivity", "Customer_Behaviour[City]": "Andersonchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cote d'Ivoire", "Customer_Behaviour[Timestamp]": 1460155705000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 60812.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 282.0, "Customer_Behaviour[City]_stringindexer_transform": 417.0, "Customer_Behaviour[Country]_stringindexer_transform": 55.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Daily Internet Usage]": 123.0, "Customer_Behaviour[Ad Topic Line]": "Balanced value-added database", "Customer_Behaviour[City]": "Meyersstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1466157526000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 26023.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 432.0, "Customer_Behaviour[City]_stringindexer_transform": 129.0, "Customer_Behaviour[Country]_stringindexer_transform": 9.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 125.0, "Customer_Behaviour[Ad Topic Line]": "Seamless composite budgetary management", "Customer_Behaviour[City]": "Michelleside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kenya", "Customer_Behaviour[Timestamp]": 1461618939000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 62318.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 131.0, "Customer_Behaviour[City]_stringindexer_transform": 24.0, "Customer_Behaviour[Country]_stringindexer_transform": 62.0, "Customer_Behaviour[Timestamp]_dayofmonth": 25, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 153.0, "Customer_Behaviour[Ad Topic Line]": "Face-to-face reciprocal methodology", "Customer_Behaviour[City]": "Port Brian", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Zimbabwe", "Customer_Behaviour[Timestamp]": 1462783495000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 28019.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 427.0, "Customer_Behaviour[City]_stringindexer_transform": 234.0, "Customer_Behaviour[Country]_stringindexer_transform": 71.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 136.0, "Customer_Behaviour[Ad Topic Line]": "Upgradable even-keeled hardware", "Customer_Behaviour[City]": "Kristintown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Madagascar", "Customer_Behaviour[Timestamp]": 1456790166000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 19991.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 10.0, "Customer_Behaviour[City]_stringindexer_transform": 143.0, "Customer_Behaviour[Country]_stringindexer_transform": 42.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 219.0, "Customer_Behaviour[Ad Topic Line]": "Versatile responsive knowledge user", "Customer_Behaviour[City]": "Davisfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Kitts and Nevis", "Customer_Behaviour[Timestamp]": 1459664242000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 66929.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 452.0, "Customer_Behaviour[City]_stringindexer_transform": 292.0, "Customer_Behaviour[Country]_stringindexer_transform": 196.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.0, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Daily Internet Usage]": 148.0, "Customer_Behaviour[Ad Topic Line]": "Proactive radical support", "Customer_Behaviour[City]": "Alvaradoport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bangladesh", "Customer_Behaviour[Timestamp]": 1460929151000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 31215.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 263.0, "Customer_Behaviour[City]_stringindexer_transform": 107.0, "Customer_Behaviour[Country]_stringindexer_transform": 149.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 142.0, "Customer_Behaviour[Ad Topic Line]": "Versatile content-based protocol", "Customer_Behaviour[City]": "Monicaview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bangladesh", "Customer_Behaviour[Timestamp]": 1468081413000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 34191.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 487.0, "Customer_Behaviour[City]_stringindexer_transform": 265.0, "Customer_Behaviour[Country]_stringindexer_transform": 149.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.0, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Daily Internet Usage]": 258.0, "Customer_Behaviour[Ad Topic Line]": "Seamless cohesive conglomeration", "Customer_Behaviour[City]": "Katieport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Faroe Islands", "Customer_Behaviour[Timestamp]": 1467118262000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 51067.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 139.0, "Customer_Behaviour[City]_stringindexer_transform": 230.0, "Customer_Behaviour[Country]_stringindexer_transform": 174.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 152.0, "Customer_Behaviour[Ad Topic Line]": "De-engineered actuating hierarchy", "Customer_Behaviour[City]": "East Brittanyville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1466267578000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 46693.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 484.0, "Customer_Behaviour[City]_stringindexer_transform": 204.0, "Customer_Behaviour[Country]_stringindexer_transform": 8.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 180.0, "Customer_Behaviour[Ad Topic Line]": "Balanced motivating help-desk", "Customer_Behaviour[City]": "West Travismouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Heard Island and McDonald Islands", "Customer_Behaviour[Timestamp]": 1464439117000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 19345.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 119.0, "Customer_Behaviour[City]_stringindexer_transform": 459.0, "Customer_Behaviour[Country]_stringindexer_transform": 185.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 108.0, "Customer_Behaviour[Ad Topic Line]": "Sharable optimal capacity", "Customer_Behaviour[City]": "Brownton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bahamas", "Customer_Behaviour[Timestamp]": 1468710534000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 37713.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 311.0, "Customer_Behaviour[City]_stringindexer_transform": 296.0, "Customer_Behaviour[Country]_stringindexer_transform": 78.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.0, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Daily Internet Usage]": 120.0, "Customer_Behaviour[Ad Topic Line]": "Advanced systemic productivity", "Customer_Behaviour[City]": "Keithtown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Netherlands Antilles", "Customer_Behaviour[Timestamp]": 1455752820000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 57846.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 359.0, "Customer_Behaviour[City]_stringindexer_transform": 118.0, "Customer_Behaviour[Country]_stringindexer_transform": 85.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 129.0, "Customer_Behaviour[Ad Topic Line]": "User-friendly bandwidth-monitored attitude", "Customer_Behaviour[City]": "South Jade", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tuvalu", "Customer_Behaviour[Timestamp]": 1467191071000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 28387.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 151.0, "Customer_Behaviour[City]_stringindexer_transform": 244.0, "Customer_Behaviour[Country]_stringindexer_transform": 195.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 123.0, "Customer_Behaviour[Ad Topic Line]": "Networked even-keeled workforce", "Customer_Behaviour[City]": "Williamsport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1462789308000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 56759.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 409.0, "Customer_Behaviour[City]_stringindexer_transform": 76.0, "Customer_Behaviour[Country]_stringindexer_transform": 14.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Daily Internet Usage]": 255.0, "Customer_Behaviour[Ad Topic Line]": "Cross-group value-added success", "Customer_Behaviour[City]": "Port Katelynview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Congo", "Customer_Behaviour[Timestamp]": 1459795019000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 28028.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 48.0, "Customer_Behaviour[City]_stringindexer_transform": 383.0, "Customer_Behaviour[Country]_stringindexer_transform": 122.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.0, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Daily Internet Usage]": 139.0, "Customer_Behaviour[Ad Topic Line]": "Upgradable asymmetric emulation", "Customer_Behaviour[City]": "Lake Jesus", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Dominican Republic", "Customer_Behaviour[Timestamp]": 1455965571000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 72684.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 328.0, "Customer_Behaviour[City]_stringindexer_transform": 313.0, "Customer_Behaviour[Country]_stringindexer_transform": 145.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.0, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Daily Internet Usage]": 147.0, "Customer_Behaviour[Ad Topic Line]": "Universal transitional Graphical User Interface", "Customer_Behaviour[City]": "Andrewborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Serbia", "Customer_Behaviour[Timestamp]": 1464638879000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 65499.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 93.0, "Customer_Behaviour[City]_stringindexer_transform": 495.0, "Customer_Behaviour[Country]_stringindexer_transform": 109.0, "Customer_Behaviour[Timestamp]_dayofmonth": 30, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 171.0, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered 3rdgeneration migration", "Customer_Behaviour[City]": "New Keithburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Trinidad and Tobago", "Customer_Behaviour[Timestamp]": 1457573779000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 41232.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 365.0, "Customer_Behaviour[City]_stringindexer_transform": 400.0, "Customer_Behaviour[Country]_stringindexer_transform": 161.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.0, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Daily Internet Usage]": 119.0, "Customer_Behaviour[Ad Topic Line]": "Team-oriented dynamic forecast", "Customer_Behaviour[City]": "Kevinberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1457648932000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 51869.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 255.0, "Customer_Behaviour[City]_stringindexer_transform": 191.0, "Customer_Behaviour[Country]_stringindexer_transform": 0.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 160.0, "Customer_Behaviour[Ad Topic Line]": "Customer-focused zero-defect process improvement", "Customer_Behaviour[City]": "Lovemouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Egypt", "Customer_Behaviour[Timestamp]": 1454685997000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 59144.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 110.0, "Customer_Behaviour[City]_stringindexer_transform": 37.0, "Customer_Behaviour[Country]_stringindexer_transform": 51.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.0, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Daily Internet Usage]": 145.0, "Customer_Behaviour[Ad Topic Line]": "Focused systemic benchmark", "Customer_Behaviour[City]": "Taylorhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1464730906000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 33951.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 322.0, "Customer_Behaviour[City]_stringindexer_transform": 401.0, "Customer_Behaviour[Country]_stringindexer_transform": 15.0, "Customer_Behaviour[Timestamp]_dayofmonth": 31, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 127.0, "Customer_Behaviour[Ad Topic Line]": "Organized 24/7 middleware", "Customer_Behaviour[City]": "Butlerfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United States of America", "Customer_Behaviour[Timestamp]": 1465637872000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 48347.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 417.0, "Customer_Behaviour[City]_stringindexer_transform": 268.0, "Customer_Behaviour[Country]_stringindexer_transform": 152.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 177.0, "Customer_Behaviour[Ad Topic Line]": "Phased full-range hardware", "Customer_Behaviour[City]": "Masseyshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ecuador", "Customer_Behaviour[Timestamp]": 1462045324000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 49282.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 159.0, "Customer_Behaviour[City]_stringindexer_transform": 392.0, "Customer_Behaviour[Country]_stringindexer_transform": 34.0, "Customer_Behaviour[Timestamp]_dayofmonth": 30, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 159.0, "Customer_Behaviour[Ad Topic Line]": "Polarized analyzing intranet", "Customer_Behaviour[City]": "Port Blake", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Spain", "Customer_Behaviour[Timestamp]": 1468805797000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 25603.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 23.0, "Customer_Behaviour[City]_stringindexer_transform": 314.0, "Customer_Behaviour[Country]_stringindexer_transform": 166.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.0, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Daily Internet Usage]": 121.0, "Customer_Behaviour[Ad Topic Line]": "Digitized disintermediate ability", "Customer_Behaviour[City]": "Brandymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Indonesia", "Customer_Behaviour[Timestamp]": 1458628898000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 28265.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 431.0, "Customer_Behaviour[City]_stringindexer_transform": 98.0, "Customer_Behaviour[Country]_stringindexer_transform": 139.0, "Customer_Behaviour[Timestamp]_dayofmonth": 22, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 167.0, "Customer_Behaviour[Ad Topic Line]": "Public-key real-time definition", "Customer_Behaviour[City]": "Port Jessica", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1467105546000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 70592.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 7.0, "Customer_Behaviour[City]_stringindexer_transform": 196.0, "Customer_Behaviour[Country]_stringindexer_transform": 1.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 141.0, "Customer_Behaviour[Ad Topic Line]": "Reverse-engineered 24hour hardware", "Customer_Behaviour[City]": "Yuton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Eritrea", "Customer_Behaviour[Timestamp]": 1467245973000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 29359.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 77.0, "Customer_Behaviour[City]_stringindexer_transform": 197.0, "Customer_Behaviour[Country]_stringindexer_transform": 45.0, "Customer_Behaviour[Timestamp]_dayofmonth": 30, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 119.0, "Customer_Behaviour[Ad Topic Line]": "Distributed maximized ability", "Customer_Behaviour[City]": "Welchshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belgium", "Customer_Behaviour[Timestamp]": 1459683516000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 51315.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 154.0, "Customer_Behaviour[City]_stringindexer_transform": 480.0, "Customer_Behaviour[Country]_stringindexer_transform": 47.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.0, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Daily Internet Usage]": 159.0, "Customer_Behaviour[Ad Topic Line]": "Fully-configurable holistic throughput", "Customer_Behaviour[City]": "Timothyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "American Samoa", "Customer_Behaviour[Timestamp]": 1460126144000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 43974.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 377.0, "Customer_Behaviour[City]_stringindexer_transform": 44.0, "Customer_Behaviour[Country]_stringindexer_transform": 28.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 117.0, "Customer_Behaviour[Ad Topic Line]": "Progressive uniform budgetary management", "Customer_Behaviour[City]": "Lake Stephenborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Thailand", "Customer_Behaviour[Timestamp]": 1458932555000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 33987.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 137.0, "Customer_Behaviour[City]_stringindexer_transform": 30.0, "Customer_Behaviour[Country]_stringindexer_transform": 93.0, "Customer_Behaviour[Timestamp]_dayofmonth": 25, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 124.0, "Customer_Behaviour[Ad Topic Line]": "Synergistic stable infrastructure", "Customer_Behaviour[City]": "Silvaton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greece", "Customer_Behaviour[Timestamp]": 1463088726000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 28210.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 90.0, "Customer_Behaviour[City]_stringindexer_transform": 319.0, "Customer_Behaviour[Country]_stringindexer_transform": 19.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 120.0, "Customer_Behaviour[Ad Topic Line]": "Expanded zero administration attitude", "Customer_Behaviour[City]": "Florestown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guernsey", "Customer_Behaviour[Timestamp]": 1462889551000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 49158.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 369.0, "Customer_Behaviour[City]_stringindexer_transform": 496.0, "Customer_Behaviour[Country]_stringindexer_transform": 121.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.0, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Daily Internet Usage]": 126.0, "Customer_Behaviour[Ad Topic Line]": "Innovative regional structure", "Customer_Behaviour[City]": "Jensenton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1464327327000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 42898.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 257.0, "Customer_Behaviour[City]_stringindexer_transform": 301.0, "Customer_Behaviour[Country]_stringindexer_transform": 7.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 132.0, "Customer_Behaviour[Ad Topic Line]": "Universal asymmetric workforce", "Customer_Behaviour[City]": "Rivasland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Macao", "Customer_Behaviour[Timestamp]": 1465766513000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 70232.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 271.0, "Customer_Behaviour[City]_stringindexer_transform": 277.0, "Customer_Behaviour[Country]_stringindexer_transform": 64.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.0, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Daily Internet Usage]": 124.0, "Customer_Behaviour[Ad Topic Line]": "Business-focused client-driven forecast", "Customer_Behaviour[City]": "Helenborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1452175131000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 63102.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 254.0, "Customer_Behaviour[City]_stringindexer_transform": 241.0, "Customer_Behaviour[Country]_stringindexer_transform": 1.0, "Customer_Behaviour[Timestamp]_dayofmonth": 7, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 105.0, "Customer_Behaviour[Ad Topic Line]": "Open-source global strategy", "Customer_Behaviour[City]": "Pattymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Djibouti", "Customer_Behaviour[Timestamp]": 1454864795000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 47575.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 18.0, "Customer_Behaviour[City]_stringindexer_transform": 436.0, "Customer_Behaviour[Country]_stringindexer_transform": 116.0, "Customer_Behaviour[Timestamp]_dayofmonth": 7, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Daily Internet Usage]": 113.0, "Customer_Behaviour[Ad Topic Line]": "Stand-alone motivating moratorium", "Customer_Behaviour[City]": "South Alexisborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cote d'Ivoire", "Customer_Behaviour[Timestamp]": 1455521261000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 39031.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 189.0, "Customer_Behaviour[City]_stringindexer_transform": 371.0, "Customer_Behaviour[Country]_stringindexer_transform": 55.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 121.0, "Customer_Behaviour[Ad Topic Line]": "Profound bottom-line standardization", "Customer_Behaviour[City]": "New Charleschester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Romania", "Customer_Behaviour[Timestamp]": 1458812040000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 61068.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 1.0, "Customer_Behaviour[City]_stringindexer_transform": 213.0, "Customer_Behaviour[Country]_stringindexer_transform": 169.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 58, "Customer_Behaviour[Daily Internet Usage]": 173.0, "Customer_Behaviour[Ad Topic Line]": "Managed client-server access", "Customer_Behaviour[City]": "East Breannafurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cayman Islands", "Customer_Behaviour[Timestamp]": 1459800072000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 49090.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 205.0, "Customer_Behaviour[City]_stringindexer_transform": 415.0, "Customer_Behaviour[Country]_stringindexer_transform": 77.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 166.0, "Customer_Behaviour[Ad Topic Line]": "Horizontal modular success", "Customer_Behaviour[City]": "Estesfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1467998041000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 18819.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 197.0, "Customer_Behaviour[City]_stringindexer_transform": 353.0, "Customer_Behaviour[Country]_stringindexer_transform": 2.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 132.0, "Customer_Behaviour[Ad Topic Line]": "Team-oriented zero-defect initiative", "Customer_Behaviour[City]": "South Aaron", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "American Samoa", "Customer_Behaviour[Timestamp]": 1454287949000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 47997.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 223.0, "Customer_Behaviour[City]_stringindexer_transform": 275.0, "Customer_Behaviour[Country]_stringindexer_transform": 28.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.0, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Daily Internet Usage]": 136.0, "Customer_Behaviour[Ad Topic Line]": "Progressive intermediate throughput", "Customer_Behaviour[City]": "Catherinefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ethiopia", "Customer_Behaviour[Timestamp]": 1451679469000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 65856.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 372.0, "Customer_Behaviour[City]_stringindexer_transform": 332.0, "Customer_Behaviour[Country]_stringindexer_transform": 140.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.0, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Daily Internet Usage]": 128.0, "Customer_Behaviour[Ad Topic Line]": "Assimilated next generation firmware", "Customer_Behaviour[City]": "North Kimberly", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Morocco", "Customer_Behaviour[Timestamp]": 1462062193000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 68447.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 456.0, "Customer_Behaviour[City]_stringindexer_transform": 478.0, "Customer_Behaviour[Country]_stringindexer_transform": 125.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.0, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Daily Internet Usage]": 138.0, "Customer_Behaviour[Ad Topic Line]": "Business-focused background synergy", "Customer_Behaviour[City]": "North Aaronburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Western Sahara", "Customer_Behaviour[Timestamp]": 1462746267000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 63649.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 219.0, "Customer_Behaviour[City]_stringindexer_transform": 290.0, "Customer_Behaviour[Country]_stringindexer_transform": 36.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.0, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Daily Internet Usage]": 156.0, "Customer_Behaviour[Ad Topic Line]": "Ergonomic methodical encoding", "Customer_Behaviour[City]": "Danielview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "New Zealand", "Customer_Behaviour[Timestamp]": 1459835655000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 27241.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 226.0, "Customer_Behaviour[City]_stringindexer_transform": 17.0, "Customer_Behaviour[Country]_stringindexer_transform": 52.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.0, "Customer_Behaviour[Age]": 55, "Customer_Behaviour[Daily Internet Usage]": 168.0, "Customer_Behaviour[Ad Topic Line]": "Switchable analyzing encryption", "Customer_Behaviour[City]": "Lake Ian", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cambodia", "Customer_Behaviour[Timestamp]": 1468260763000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 55121.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 447.0, "Customer_Behaviour[City]_stringindexer_transform": 470.0, "Customer_Behaviour[Country]_stringindexer_transform": 98.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.0, "Customer_Behaviour[Age]": 58, "Customer_Behaviour[Daily Internet Usage]": 154.0, "Customer_Behaviour[Ad Topic Line]": "Programmable uniform website", "Customer_Behaviour[City]": "West Shannon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1455444409000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 32252.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 435.0, "Customer_Behaviour[City]_stringindexer_transform": 16.0, "Customer_Behaviour[Country]_stringindexer_transform": 1.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.0, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Daily Internet Usage]": 109.0, "Customer_Behaviour[Ad Topic Line]": "Fundamental methodical support", "Customer_Behaviour[City]": "South Jackieberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guam", "Customer_Behaviour[Timestamp]": 1459475832000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 37345.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 12.0, "Customer_Behaviour[City]_stringindexer_transform": 25.0, "Customer_Behaviour[Country]_stringindexer_transform": 148.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 64.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 117.0, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered stable leverage", "Customer_Behaviour[City]": "North Sarashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1459905548000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 63001.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 105.0, "Customer_Behaviour[City]_stringindexer_transform": 176.0, "Customer_Behaviour[Country]_stringindexer_transform": 4.0, "Customer_Behaviour[Timestamp]_dayofmonth": 6, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.0, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Daily Internet Usage]": 114.0, "Customer_Behaviour[Ad Topic Line]": "Cross-group human-resource time-frame", "Customer_Behaviour[City]": "East Jessefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Kingdom", "Customer_Behaviour[Timestamp]": 1456340891000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 48467.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 147.0, "Customer_Behaviour[City]_stringindexer_transform": 46.0, "Customer_Behaviour[Country]_stringindexer_transform": 117.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 125.0, "Customer_Behaviour[Ad Topic Line]": "Realigned intangible benchmark", "Customer_Behaviour[City]": "Rochabury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Yemen", "Customer_Behaviour[Timestamp]": 1461781530000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 27964.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 164.0, "Customer_Behaviour[City]_stringindexer_transform": 479.0, "Customer_Behaviour[Country]_stringindexer_transform": 59.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 118.0, "Customer_Behaviour[Ad Topic Line]": "Grass-roots mission-critical emulation", "Customer_Behaviour[City]": "Wrightview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Antigua and Barbuda", "Customer_Behaviour[Timestamp]": 1457489237000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 49101.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 353.0, "Customer_Behaviour[City]_stringindexer_transform": 192.0, "Customer_Behaviour[Country]_stringindexer_transform": 50.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.0, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Daily Internet Usage]": 134.0, "Customer_Behaviour[Ad Topic Line]": "Proactive encompassing paradigm", "Customer_Behaviour[City]": "Perryburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Guiana", "Customer_Behaviour[Timestamp]": 1452360783000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 53188.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 468.0, "Customer_Behaviour[City]_stringindexer_transform": 439.0, "Customer_Behaviour[Country]_stringindexer_transform": 114.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Daily Internet Usage]": 112.0, "Customer_Behaviour[Ad Topic Line]": "Automated multi-state toolset", "Customer_Behaviour[City]": "Richardsonshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cyprus", "Customer_Behaviour[Timestamp]": 1469319736000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 36424.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 14.0, "Customer_Behaviour[City]_stringindexer_transform": 323.0, "Customer_Behaviour[Country]_stringindexer_transform": 39.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 120.0, "Customer_Behaviour[Ad Topic Line]": "Managed didactic flexibility", "Customer_Behaviour[City]": "Kimberlymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Pierre and Miquelon", "Customer_Behaviour[Timestamp]": 1455371873000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 28275.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 383.0, "Customer_Behaviour[City]_stringindexer_transform": 402.0, "Customer_Behaviour[Country]_stringindexer_transform": 23.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 161.0, "Customer_Behaviour[Ad Topic Line]": "Cross-platform neutral system engine", "Customer_Behaviour[City]": "Meghanchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Poland", "Customer_Behaviour[Timestamp]": 1462703108000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 48098.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 366.0, "Customer_Behaviour[City]_stringindexer_transform": 229.0, "Customer_Behaviour[Country]_stringindexer_transform": 41.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 135.0, "Customer_Behaviour[Ad Topic Line]": "Focused high-level frame", "Customer_Behaviour[City]": "Tammyshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1455735057000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 68448.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 378.0, "Customer_Behaviour[City]_stringindexer_transform": 373.0, "Customer_Behaviour[Country]_stringindexer_transform": 8.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 129.0, "Customer_Behaviour[Ad Topic Line]": "Total human-resource flexibility", "Customer_Behaviour[City]": "Greerport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saudi Arabia", "Customer_Behaviour[Timestamp]": 1454045956000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 35684.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 149.0, "Customer_Behaviour[City]_stringindexer_transform": 235.0, "Customer_Behaviour[Country]_stringindexer_transform": 108.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 161.0, "Customer_Behaviour[Ad Topic Line]": "Ergonomic zero tolerance encoding", "Customer_Behaviour[City]": "East Sharon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ghana", "Customer_Behaviour[Timestamp]": 1456235748000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 51171.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 88.0, "Customer_Behaviour[City]_stringindexer_transform": 209.0, "Customer_Behaviour[Country]_stringindexer_transform": 124.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Daily Internet Usage]": 141.0, "Customer_Behaviour[Ad Topic Line]": "Cross-platform zero-defect structure", "Customer_Behaviour[City]": "Johnstonmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iran", "Customer_Behaviour[Timestamp]": 1468063082000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 58847.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 63.0, "Customer_Behaviour[City]_stringindexer_transform": 308.0, "Customer_Behaviour[Country]_stringindexer_transform": 25.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.0, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Daily Internet Usage]": 110.0, "Customer_Behaviour[Ad Topic Line]": "Innovative maximized groupware", "Customer_Behaviour[City]": "East Heatherside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "New Zealand", "Customer_Behaviour[Timestamp]": 1458385776000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 57739.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 441.0, "Customer_Behaviour[City]_stringindexer_transform": 83.0, "Customer_Behaviour[Country]_stringindexer_transform": 52.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 38.0, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Daily Internet Usage]": 222.0, "Customer_Behaviour[Ad Topic Line]": "Cross-platform logistical pricing structure", "Customer_Behaviour[City]": "Chapmanmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1460026265000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 57777.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 113.0, "Customer_Behaviour[City]_stringindexer_transform": 454.0, "Customer_Behaviour[Country]_stringindexer_transform": 14.0, "Customer_Behaviour[Timestamp]_dayofmonth": 7, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 181.0, "Customer_Behaviour[Ad Topic Line]": "Future-proofed fresh-thinking conglomeration", "Customer_Behaviour[City]": "Elizabethstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1468765564000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 51691.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 464.0, "Customer_Behaviour[City]_stringindexer_transform": 133.0, "Customer_Behaviour[Country]_stringindexer_transform": 10.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.0, "Customer_Behaviour[Age]": 53, "Customer_Behaviour[Daily Internet Usage]": 161.0, "Customer_Behaviour[Ad Topic Line]": "Sharable multimedia conglomeration", "Customer_Behaviour[City]": "East Brettton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ecuador", "Customer_Behaviour[Timestamp]": 1456869997000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 51463.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 108.0, "Customer_Behaviour[City]_stringindexer_transform": 278.0, "Customer_Behaviour[Country]_stringindexer_transform": 34.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.0, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Daily Internet Usage]": 151.0, "Customer_Behaviour[Ad Topic Line]": "Robust object-oriented Graphic Interface", "Customer_Behaviour[City]": "Westshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Micronesia", "Customer_Behaviour[Timestamp]": 1452717515000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 51593.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 54.0, "Customer_Behaviour[City]_stringindexer_transform": 389.0, "Customer_Behaviour[Country]_stringindexer_transform": 82.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 53.0, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Daily Internet Usage]": 108.0, "Customer_Behaviour[Ad Topic Line]": "Optimized systemic capability", "Customer_Behaviour[City]": "Julietown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Palau", "Customer_Behaviour[Timestamp]": 1466679901000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 47314.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 258.0, "Customer_Behaviour[City]_stringindexer_transform": 227.0, "Customer_Behaviour[Country]_stringindexer_transform": 128.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 136.0, "Customer_Behaviour[Ad Topic Line]": "Right-sized system-worthy project", "Customer_Behaviour[City]": "Adamsbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "France", "Customer_Behaviour[Timestamp]": 1453085473000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 55358.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 220.0, "Customer_Behaviour[City]_stringindexer_transform": 338.0, "Customer_Behaviour[Country]_stringindexer_transform": 38.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.0, "Customer_Behaviour[Age]": 51, "Customer_Behaviour[Daily Internet Usage]": 195.0, "Customer_Behaviour[Ad Topic Line]": "Versatile optimizing projection", "Customer_Behaviour[City]": "North Angelastad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1468817602000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 45522.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 35.0, "Customer_Behaviour[City]_stringindexer_transform": 399.0, "Customer_Behaviour[Country]_stringindexer_transform": 9.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.0, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Daily Internet Usage]": 110.0, "Customer_Behaviour[Ad Topic Line]": "Universal multi-state system engine", "Customer_Behaviour[City]": "Amandafort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belarus", "Customer_Behaviour[Timestamp]": 1467335524000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 46931.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 103.0, "Customer_Behaviour[City]_stringindexer_transform": 12.0, "Customer_Behaviour[Country]_stringindexer_transform": 105.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 61.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 149.0, "Customer_Behaviour[Ad Topic Line]": "Operative didactic Local Area Network", "Customer_Behaviour[City]": "Ronaldport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Benin", "Customer_Behaviour[Timestamp]": 1462203088000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 75805.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 326.0, "Customer_Behaviour[City]_stringindexer_transform": 231.0, "Customer_Behaviour[Country]_stringindexer_transform": 104.0, "Customer_Behaviour[Timestamp]_dayofmonth": 2, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 44.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 120.0, "Customer_Behaviour[Ad Topic Line]": "Ergonomic empowering frame", "Customer_Behaviour[City]": "Estradashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guyana", "Customer_Behaviour[Timestamp]": 1452763679000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 43386.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 95.0, "Customer_Behaviour[City]_stringindexer_transform": 337.0, "Customer_Behaviour[Country]_stringindexer_transform": 203.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 52.0, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Daily Internet Usage]": 122.0, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered mobile encoding", "Customer_Behaviour[City]": "Hobbsbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1468664044000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 28495.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 262.0, "Customer_Behaviour[City]_stringindexer_transform": 151.0, "Customer_Behaviour[Country]_stringindexer_transform": 12.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.0, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Daily Internet Usage]": 182.0, "Customer_Behaviour[Ad Topic Line]": "Organic logistical adapter", "Customer_Behaviour[City]": "New Christinatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Qatar", "Customer_Behaviour[Timestamp]": 1454518473000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 67323.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 370.0, "Customer_Behaviour[City]_stringindexer_transform": 92.0, "Customer_Behaviour[Country]_stringindexer_transform": 46.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.0, "Customer_Behaviour[Age]": 55, "Customer_Behaviour[Daily Internet Usage]": 150.0, "Customer_Behaviour[Ad Topic Line]": "Programmable didactic capacity", "Customer_Behaviour[City]": "Port Georgebury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1457767116000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 28186.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 227.0, "Customer_Behaviour[City]_stringindexer_transform": 453.0, "Customer_Behaviour[Country]_stringindexer_transform": 7.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 126.0, "Customer_Behaviour[Ad Topic Line]": "Reactive impactful challenge", "Customer_Behaviour[City]": "West Leahton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1463702448000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 65899.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 342.0, "Customer_Behaviour[City]_stringindexer_transform": 347.0, "Customer_Behaviour[Country]_stringindexer_transform": 16.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.0, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Daily Internet Usage]": 130.0, "Customer_Behaviour[Ad Topic Line]": "Implemented asynchronous application", "Customer_Behaviour[City]": "Reginamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belgium", "Customer_Behaviour[Timestamp]": 1460732837000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 23410.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 206.0, "Customer_Behaviour[City]_stringindexer_transform": 167.0, "Customer_Behaviour[Country]_stringindexer_transform": 47.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 131.0, "Customer_Behaviour[Ad Topic Line]": "Multi-layered secondary software", "Customer_Behaviour[City]": "Jamesmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1467168524000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 43241.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 449.0, "Customer_Behaviour[City]_stringindexer_transform": 345.0, "Customer_Behaviour[Country]_stringindexer_transform": 6.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 117.0, "Customer_Behaviour[Ad Topic Line]": "Expanded value-added emulation", "Customer_Behaviour[City]": "Brandonbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hong Kong", "Customer_Behaviour[Timestamp]": 1468536209000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 41335.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 191.0, "Customer_Behaviour[City]_stringindexer_transform": 61.0, "Customer_Behaviour[Country]_stringindexer_transform": 66.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.0, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Daily Internet Usage]": 173.0, "Customer_Behaviour[Ad Topic Line]": "Stand-alone empowering benchmark", "Customer_Behaviour[City]": "Leahside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guatemala", "Customer_Behaviour[Timestamp]": 1453583757000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 52581.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 75.0, "Customer_Behaviour[City]_stringindexer_transform": 66.0, "Customer_Behaviour[Country]_stringindexer_transform": 106.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Daily Internet Usage]": 132.0, "Customer_Behaviour[Ad Topic Line]": "Face-to-face dedicated flexibility", "Customer_Behaviour[City]": "Port Sherrystad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malta", "Customer_Behaviour[Timestamp]": 1464751070000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 57667.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 418.0, "Customer_Behaviour[City]_stringindexer_transform": 294.0, "Customer_Behaviour[Country]_stringindexer_transform": 101.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.0, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Daily Internet Usage]": 169.0, "Customer_Behaviour[Ad Topic Line]": "Optimized attitude-oriented initiative", "Customer_Behaviour[City]": "Josephmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Japan", "Customer_Behaviour[Timestamp]": 1458024861000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 31072.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 330.0, "Customer_Behaviour[City]_stringindexer_transform": 60.0, "Customer_Behaviour[Country]_stringindexer_transform": 163.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 57, "Customer_Behaviour[Daily Internet Usage]": 152.0, "Customer_Behaviour[Ad Topic Line]": "Virtual executive implementation", "Customer_Behaviour[City]": "Destinyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Namibia", "Customer_Behaviour[Timestamp]": 1455460681000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 43708.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 91.0, "Customer_Behaviour[City]_stringindexer_transform": 36.0, "Customer_Behaviour[Country]_stringindexer_transform": 94.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.0, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Daily Internet Usage]": 119.0, "Customer_Behaviour[Ad Topic Line]": "Enhanced intermediate standardization", "Customer_Behaviour[City]": "Mezaton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1462338097000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 48453.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 60.0, "Customer_Behaviour[City]_stringindexer_transform": 287.0, "Customer_Behaviour[Country]_stringindexer_transform": 7.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 123.0, "Customer_Behaviour[Ad Topic Line]": "Versatile solution-oriented secured line", "Customer_Behaviour[City]": "North Mark", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1463055072000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 61004.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 209.0, "Customer_Behaviour[City]_stringindexer_transform": 4.0, "Customer_Behaviour[Country]_stringindexer_transform": 16.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 113.0, "Customer_Behaviour[Ad Topic Line]": "User-centric solution-oriented emulation", "Customer_Behaviour[City]": "Brittanyborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Monaco", "Customer_Behaviour[Timestamp]": 1469251299000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 58677.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 457.0, "Customer_Behaviour[City]_stringindexer_transform": 269.0, "Customer_Behaviour[Country]_stringindexer_transform": 92.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 131.0, "Customer_Behaviour[Ad Topic Line]": "Multi-channeled non-volatile website", "Customer_Behaviour[City]": "West Ericaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1453554858000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 56435.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 172.0, "Customer_Behaviour[City]_stringindexer_transform": 284.0, "Customer_Behaviour[Country]_stringindexer_transform": 12.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.0, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Daily Internet Usage]": 122.0, "Customer_Behaviour[Ad Topic Line]": "Self-enabling zero administration neural-net", "Customer_Behaviour[City]": "Ericksonmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sweden", "Customer_Behaviour[Timestamp]": 1451994797000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 41521.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 278.0, "Customer_Behaviour[City]_stringindexer_transform": 431.0, "Customer_Behaviour[Country]_stringindexer_transform": 61.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 118.0, "Customer_Behaviour[Ad Topic Line]": "Sharable secondary Graphical User Interface", "Customer_Behaviour[City]": "East Heidi", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Zimbabwe", "Customer_Behaviour[Timestamp]": 1461880705000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 47510.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 396.0, "Customer_Behaviour[City]_stringindexer_transform": 242.0, "Customer_Behaviour[Country]_stringindexer_transform": 71.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.0, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Daily Internet Usage]": 124.0, "Customer_Behaviour[Ad Topic Line]": "Innovative homogeneous alliance", "Customer_Behaviour[City]": "New Angelview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Costa Rica", "Customer_Behaviour[Timestamp]": 1455266775000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 62466.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 143.0, "Customer_Behaviour[City]_stringindexer_transform": 125.0, "Customer_Behaviour[Country]_stringindexer_transform": 119.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 248.0, "Customer_Behaviour[Ad Topic Line]": "Diverse leadingedge website", "Customer_Behaviour[City]": "Lake Brandonview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1468243417000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 59683.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 307.0, "Customer_Behaviour[City]_stringindexer_transform": 82.0, "Customer_Behaviour[Country]_stringindexer_transform": 16.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.0, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Daily Internet Usage]": 120.0, "Customer_Behaviour[Ad Topic Line]": "Optimized intermediate help-desk", "Customer_Behaviour[City]": "Morganport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1454028319000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 41097.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 357.0, "Customer_Behaviour[City]_stringindexer_transform": 405.0, "Customer_Behaviour[Country]_stringindexer_transform": 15.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.0, "Customer_Behaviour[Age]": 58, "Customer_Behaviour[Daily Internet Usage]": 195.0, "Customer_Behaviour[Ad Topic Line]": "Sharable reciprocal project", "Customer_Behaviour[City]": "Browntown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Netherlands", "Customer_Behaviour[Timestamp]": 1452011204000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 39799.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 315.0, "Customer_Behaviour[City]_stringindexer_transform": 43.0, "Customer_Behaviour[Country]_stringindexer_transform": 143.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 111.0, "Customer_Behaviour[Ad Topic Line]": "Reactive demand-driven strategy", "Customer_Behaviour[City]": "Bradleyside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sierra Leone", "Customer_Behaviour[Timestamp]": 1465518915000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 57887.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 407.0, "Customer_Behaviour[City]_stringindexer_transform": 457.0, "Customer_Behaviour[Country]_stringindexer_transform": 176.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 36.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 195.0, "Customer_Behaviour[Ad Topic Line]": "Team-oriented bi-directional secured line", "Customer_Behaviour[City]": "West Ryan", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Uganda", "Customer_Behaviour[Timestamp]": 1451661264000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 42838.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 274.0, "Customer_Behaviour[City]_stringindexer_transform": 440.0, "Customer_Behaviour[Country]_stringindexer_transform": 197.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 115.0, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented system-worthy forecast", "Customer_Behaviour[City]": "Johnsontown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brunei Darussalam", "Customer_Behaviour[Timestamp]": 1461505570000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 49822.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 393.0, "Customer_Behaviour[City]_stringindexer_transform": 26.0, "Customer_Behaviour[Country]_stringindexer_transform": 65.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 185.0, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered interactive neural-net", "Customer_Behaviour[City]": "New Henry", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mayotte", "Customer_Behaviour[Timestamp]": 1462214221000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 48206.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 351.0, "Customer_Behaviour[City]_stringindexer_transform": 85.0, "Customer_Behaviour[Country]_stringindexer_transform": 22.0, "Customer_Behaviour[Timestamp]_dayofmonth": 2, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 151.0, "Customer_Behaviour[Ad Topic Line]": "Ameliorated leadingedge help-desk", "Customer_Behaviour[City]": "South Lisa", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Albania", "Customer_Behaviour[Timestamp]": 1460055177000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 66187.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 475.0, "Customer_Behaviour[City]_stringindexer_transform": 358.0, "Customer_Behaviour[Country]_stringindexer_transform": 30.0, "Customer_Behaviour[Timestamp]_dayofmonth": 7, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 52.0, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Daily Internet Usage]": 191.0, "Customer_Behaviour[Ad Topic Line]": "Persevering 5thgeneration knowledge user", "Customer_Behaviour[City]": "New Hollyberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jersey", "Customer_Behaviour[Timestamp]": 1463639858000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 14775.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 16.0, "Customer_Behaviour[City]_stringindexer_transform": 212.0, "Customer_Behaviour[Country]_stringindexer_transform": 20.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 197.0, "Customer_Behaviour[Ad Topic Line]": "Expanded modular application", "Customer_Behaviour[City]": "Staceyfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1452760024000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 77143.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 240.0, "Customer_Behaviour[City]_stringindexer_transform": 312.0, "Customer_Behaviour[Country]_stringindexer_transform": 5.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.0, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Daily Internet Usage]": 170.0, "Customer_Behaviour[Ad Topic Line]": "Front-line actuating functionalities", "Customer_Behaviour[City]": "North Brittanyburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liechtenstein", "Customer_Behaviour[Timestamp]": 1460531256000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 36884.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 3.0, "Customer_Behaviour[City]_stringindexer_transform": 474.0, "Customer_Behaviour[Country]_stringindexer_transform": 43.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.0, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Daily Internet Usage]": 119.0, "Customer_Behaviour[Ad Topic Line]": "Inverse stable synergy", "Customer_Behaviour[City]": "Lake Charlottestad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kenya", "Customer_Behaviour[Timestamp]": 1460061482000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 44304.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 195.0, "Customer_Behaviour[City]_stringindexer_transform": 432.0, "Customer_Behaviour[Country]_stringindexer_transform": 62.0, "Customer_Behaviour[Timestamp]_dayofmonth": 7, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.0, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Daily Internet Usage]": 142.0, "Customer_Behaviour[Ad Topic Line]": "Operative full-range forecast", "Customer_Behaviour[City]": "Tammymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Luxembourg", "Customer_Behaviour[Timestamp]": 1457622464000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 25767.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 202.0, "Customer_Behaviour[City]_stringindexer_transform": 421.0, "Customer_Behaviour[Country]_stringindexer_transform": 18.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.0, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Daily Internet Usage]": 139.0, "Customer_Behaviour[Ad Topic Line]": "Operative secondary functionalities", "Customer_Behaviour[City]": "Lake Vanessa", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cyprus", "Customer_Behaviour[Timestamp]": 1462091232000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 37605.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 374.0, "Customer_Behaviour[City]_stringindexer_transform": 210.0, "Customer_Behaviour[Country]_stringindexer_transform": 39.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.0, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Daily Internet Usage]": 127.0, "Customer_Behaviour[Ad Topic Line]": "Managed 24hour analyzer", "Customer_Behaviour[City]": "Port Douglasborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Netherlands", "Customer_Behaviour[Timestamp]": 1458292119000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 67682.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 443.0, "Customer_Behaviour[City]_stringindexer_transform": 267.0, "Customer_Behaviour[Country]_stringindexer_transform": 143.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 53.0, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Daily Internet Usage]": 108.0, "Customer_Behaviour[Ad Topic Line]": "Horizontal client-server database", "Customer_Behaviour[City]": "Port Aprilville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United States Virgin Islands", "Customer_Behaviour[Timestamp]": 1464242637000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 44307.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 167.0, "Customer_Behaviour[City]_stringindexer_transform": 183.0, "Customer_Behaviour[Country]_stringindexer_transform": 91.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.0, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Daily Internet Usage]": 127.0, "Customer_Behaviour[Ad Topic Line]": "Digitized homogeneous core", "Customer_Behaviour[City]": "Lake Faith", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Western Sahara", "Customer_Behaviour[Timestamp]": 1461939000000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 23942.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 492.0, "Customer_Behaviour[City]_stringindexer_transform": 104.0, "Customer_Behaviour[Country]_stringindexer_transform": 36.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 36.0, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Daily Internet Usage]": 159.0, "Customer_Behaviour[Ad Topic Line]": "Ameliorated coherent open architecture", "Customer_Behaviour[City]": "North Samantha", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Zimbabwe", "Customer_Behaviour[Timestamp]": 1456297980000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 54645.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 358.0, "Customer_Behaviour[City]_stringindexer_transform": 434.0, "Customer_Behaviour[Country]_stringindexer_transform": 71.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.0, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Daily Internet Usage]": 141.0, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented bifurcated contingency", "Customer_Behaviour[City]": "Holderville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Chad", "Customer_Behaviour[Timestamp]": 1459021066000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 46780.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 272.0, "Customer_Behaviour[City]_stringindexer_transform": 21.0, "Customer_Behaviour[Country]_stringindexer_transform": 135.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 105.0, "Customer_Behaviour[Ad Topic Line]": "Re-engineered zero-defect open architecture", "Customer_Behaviour[City]": "Jeffreymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Moldova", "Customer_Behaviour[Timestamp]": 1459414423000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 47682.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 412.0, "Customer_Behaviour[City]_stringindexer_transform": 35.0, "Customer_Behaviour[Country]_stringindexer_transform": 70.0, "Customer_Behaviour[Timestamp]_dayofmonth": 31, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 124.0, "Customer_Behaviour[Ad Topic Line]": "Synchronized full-range portal", "Customer_Behaviour[City]": "Smithside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Vietnam", "Customer_Behaviour[Timestamp]": 1465906090000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 47968.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 225.0, "Customer_Behaviour[City]_stringindexer_transform": 222.0, "Customer_Behaviour[Country]_stringindexer_transform": 68.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 108.0, "Customer_Behaviour[Ad Topic Line]": "Integrated encompassing support", "Customer_Behaviour[City]": "Vanessastad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jersey", "Customer_Behaviour[Timestamp]": 1462994022000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 48758.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 74.0, "Customer_Behaviour[City]_stringindexer_transform": 391.0, "Customer_Behaviour[Country]_stringindexer_transform": 20.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.0, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Daily Internet Usage]": 115.0, "Customer_Behaviour[Ad Topic Line]": "Realigned 24/7 core", "Customer_Behaviour[City]": "Carterland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mexico", "Customer_Behaviour[Timestamp]": 1456630475000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 49206.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 179.0, "Customer_Behaviour[City]_stringindexer_transform": 306.0, "Customer_Behaviour[Country]_stringindexer_transform": 24.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 113.0, "Customer_Behaviour[Ad Topic Line]": "Enhanced tertiary utilization", "Customer_Behaviour[City]": "Cervantesshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malawi", "Customer_Behaviour[Timestamp]": 1462094605000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 56683.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 104.0, "Customer_Behaviour[City]_stringindexer_transform": 300.0, "Customer_Behaviour[Country]_stringindexer_transform": 69.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 61.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 108.0, "Customer_Behaviour[Ad Topic Line]": "Balanced disintermediate conglomeration", "Customer_Behaviour[City]": "North Debrashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1464595347000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 38260.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 478.0, "Customer_Behaviour[City]_stringindexer_transform": 95.0, "Customer_Behaviour[Country]_stringindexer_transform": 0.0, "Customer_Behaviour[Timestamp]_dayofmonth": 30, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 255.0, "Customer_Behaviour[Ad Topic Line]": "Networked local secured line", "Customer_Behaviour[City]": "East Mike", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Uruguay", "Customer_Behaviour[Timestamp]": 1464545520000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 35764.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 283.0, "Customer_Behaviour[City]_stringindexer_transform": 159.0, "Customer_Behaviour[Country]_stringindexer_transform": 129.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.0, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Daily Internet Usage]": 190.0, "Customer_Behaviour[Ad Topic Line]": "Programmable empowering orchestration", "Customer_Behaviour[City]": "North Angelatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1462900427000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 62939.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 334.0, "Customer_Behaviour[City]_stringindexer_transform": 272.0, "Customer_Behaviour[Country]_stringindexer_transform": 11.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 173.0, "Customer_Behaviour[Ad Topic Line]": "Object-based motivating instruction set", "Customer_Behaviour[City]": "Clarkborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tokelau", "Customer_Behaviour[Timestamp]": 1459315778000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 32549.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 248.0, "Customer_Behaviour[City]_stringindexer_transform": 217.0, "Customer_Behaviour[Country]_stringindexer_transform": 113.0, "Customer_Behaviour[Timestamp]_dayofmonth": 30, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.0, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Daily Internet Usage]": 107.0, "Customer_Behaviour[Ad Topic Line]": "Realigned intermediate application", "Customer_Behaviour[City]": "Josephberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Armenia", "Customer_Behaviour[Timestamp]": 1453642898000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 51257.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 346.0, "Customer_Behaviour[City]_stringindexer_transform": 34.0, "Customer_Behaviour[Country]_stringindexer_transform": 205.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.0, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Daily Internet Usage]": 158.0, "Customer_Behaviour[Ad Topic Line]": "Optional tangible productivity", "Customer_Behaviour[City]": "South Jeanneport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mayotte", "Customer_Behaviour[Timestamp]": 1463963574000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 67575.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 109.0, "Customer_Behaviour[City]_stringindexer_transform": 364.0, "Customer_Behaviour[Country]_stringindexer_transform": 22.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 123.0, "Customer_Behaviour[Ad Topic Line]": "Virtual homogeneous budgetary management", "Customer_Behaviour[City]": "Jonesshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Macao", "Customer_Behaviour[Timestamp]": 1463337890000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 34903.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 50.0, "Customer_Behaviour[City]_stringindexer_transform": 139.0, "Customer_Behaviour[Country]_stringindexer_transform": 64.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 37.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 190.0, "Customer_Behaviour[Ad Topic Line]": "Balanced uniform algorithm", "Customer_Behaviour[City]": "Lake James", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Denmark", "Customer_Behaviour[Timestamp]": 1464353137000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 65773.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 80.0, "Customer_Behaviour[City]_stringindexer_transform": 153.0, "Customer_Behaviour[Country]_stringindexer_transform": 99.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 115.0, "Customer_Behaviour[Ad Topic Line]": "Fully-configurable asynchronous firmware", "Customer_Behaviour[City]": "Port Jennifer", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "El Salvador", "Customer_Behaviour[Timestamp]": 1456466416000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 49597.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 259.0, "Customer_Behaviour[City]_stringindexer_transform": 218.0, "Customer_Behaviour[Country]_stringindexer_transform": 170.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 108.0, "Customer_Behaviour[Ad Topic Line]": "Exclusive systematic algorithm", "Customer_Behaviour[City]": "Chrismouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1456096031000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 42078.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 401.0, "Customer_Behaviour[City]_stringindexer_transform": 435.0, "Customer_Behaviour[Country]_stringindexer_transform": 8.0, "Customer_Behaviour[Timestamp]_dayofmonth": 21, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 151.0, "Customer_Behaviour[Ad Topic Line]": "Exclusive cohesive intranet", "Customer_Behaviour[City]": "Port Beth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1461938906000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 46197.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 437.0, "Customer_Behaviour[City]_stringindexer_transform": 412.0, "Customer_Behaviour[Country]_stringindexer_transform": 9.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.0, "Customer_Behaviour[Age]": 51, "Customer_Behaviour[Daily Internet Usage]": 122.0, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented asynchronous Internet solution", "Customer_Behaviour[City]": "West David", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1455210127000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 49957.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 71.0, "Customer_Behaviour[City]_stringindexer_transform": 393.0, "Customer_Behaviour[Country]_stringindexer_transform": 11.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 203.0, "Customer_Behaviour[Ad Topic Line]": "Sharable 5thgeneration access", "Customer_Behaviour[City]": "Fraziershire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1469173483000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 24078.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 337.0, "Customer_Behaviour[City]_stringindexer_transform": 89.0, "Customer_Behaviour[Country]_stringindexer_transform": 13.0, "Customer_Behaviour[Timestamp]_dayofmonth": 22, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.0, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Daily Internet Usage]": 121.0, "Customer_Behaviour[Ad Topic Line]": "Monitored homogeneous artificial intelligence", "Customer_Behaviour[City]": "Robertfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Macao", "Customer_Behaviour[Timestamp]": 1466908455000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 53647.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 166.0, "Customer_Behaviour[City]_stringindexer_transform": 1.0, "Customer_Behaviour[Country]_stringindexer_transform": 64.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 37.0, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Daily Internet Usage]": 216.0, "Customer_Behaviour[Ad Topic Line]": "Secured encompassing Graphical User Interface", "Customer_Behaviour[City]": "Port Derekberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "San Marino", "Customer_Behaviour[Timestamp]": 1458441853000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 48826.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 410.0, "Customer_Behaviour[City]_stringindexer_transform": 492.0, "Customer_Behaviour[Country]_stringindexer_transform": 120.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.0, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Daily Internet Usage]": 146.0, "Customer_Behaviour[Ad Topic Line]": "Team-oriented executive core", "Customer_Behaviour[City]": "West Randy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Norfolk Island", "Customer_Behaviour[Timestamp]": 1459487848000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 21773.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 42.0, "Customer_Behaviour[City]_stringindexer_transform": 429.0, "Customer_Behaviour[Country]_stringindexer_transform": 44.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.0, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Daily Internet Usage]": 109.0, "Customer_Behaviour[Ad Topic Line]": "Reduced background data-warehouse", "Customer_Behaviour[City]": "Zacharyton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Paraguay", "Customer_Behaviour[Timestamp]": 1455254419000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 50628.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 458.0, "Customer_Behaviour[City]_stringindexer_transform": 126.0, "Customer_Behaviour[Country]_stringindexer_transform": 177.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.0, "Customer_Behaviour[Age]": 56, "Customer_Behaviour[Daily Internet Usage]": 149.0, "Customer_Behaviour[Ad Topic Line]": "Public-key bi-directional Graphical User Interface", "Customer_Behaviour[City]": "New Marcusbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bahamas", "Customer_Behaviour[Timestamp]": 1461962421000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 50491.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 451.0, "Customer_Behaviour[City]_stringindexer_transform": 361.0, "Customer_Behaviour[Country]_stringindexer_transform": 78.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 150.0, "Customer_Behaviour[Ad Topic Line]": "Front-line fresh-thinking installation", "Customer_Behaviour[City]": "Huffmanchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ethiopia", "Customer_Behaviour[Timestamp]": 1467064307000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 43241.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 128.0, "Customer_Behaviour[City]_stringindexer_transform": 184.0, "Customer_Behaviour[Country]_stringindexer_transform": 140.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 130.0, "Customer_Behaviour[Ad Topic Line]": "Assimilated multi-state paradigm", "Customer_Behaviour[City]": "Williamsfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Dominican Republic", "Customer_Behaviour[Timestamp]": 1464656317000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 38645.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 392.0, "Customer_Behaviour[City]_stringindexer_transform": 124.0, "Customer_Behaviour[Country]_stringindexer_transform": 145.0, "Customer_Behaviour[Timestamp]_dayofmonth": 31, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 61.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 114.0, "Customer_Behaviour[Ad Topic Line]": "Open-source local approach", "Customer_Behaviour[City]": "Edwardsport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jamaica", "Customer_Behaviour[Timestamp]": 1464339231000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 33553.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 399.0, "Customer_Behaviour[City]_stringindexer_transform": 326.0, "Customer_Behaviour[Country]_stringindexer_transform": 53.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 116.0, "Customer_Behaviour[Ad Topic Line]": "Polarized intangible encoding", "Customer_Behaviour[City]": "Lake Evantown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Barthelemy", "Customer_Behaviour[Timestamp]": 1462778007000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 63071.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 152.0, "Customer_Behaviour[City]_stringindexer_transform": 19.0, "Customer_Behaviour[Country]_stringindexer_transform": 111.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 107.0, "Customer_Behaviour[Ad Topic Line]": "Reactive upward-trending migration", "Customer_Behaviour[City]": "Hansenland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Georgia", "Customer_Behaviour[Timestamp]": 1457179421000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 39211.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 97.0, "Customer_Behaviour[City]_stringindexer_transform": 274.0, "Customer_Behaviour[Country]_stringindexer_transform": 100.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.0, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Daily Internet Usage]": 135.0, "Customer_Behaviour[Ad Topic Line]": "Customer-focused fault-tolerant implementation", "Customer_Behaviour[City]": "Port Michaelmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brazil", "Customer_Behaviour[Timestamp]": 1452898185000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 65956.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 444.0, "Customer_Behaviour[City]_stringindexer_transform": 80.0, "Customer_Behaviour[Country]_stringindexer_transform": 32.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 190.0, "Customer_Behaviour[Ad Topic Line]": "Customizable homogeneous contingency", "Customer_Behaviour[City]": "Tylerport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Syrian Arab Republic", "Customer_Behaviour[Timestamp]": 1455248349000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 40159.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 320.0, "Customer_Behaviour[City]_stringindexer_transform": 395.0, "Customer_Behaviour[Country]_stringindexer_transform": 56.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 51, "Customer_Behaviour[Daily Internet Usage]": 162.0, "Customer_Behaviour[Ad Topic Line]": "Face-to-face modular budgetary management", "Customer_Behaviour[City]": "South Davidhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ghana", "Customer_Behaviour[Timestamp]": 1469246682000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 66980.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 381.0, "Customer_Behaviour[City]_stringindexer_transform": 491.0, "Customer_Behaviour[Country]_stringindexer_transform": 124.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.0, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Daily Internet Usage]": 145.0, "Customer_Behaviour[Ad Topic Line]": "Decentralized bottom-line help-desk", "Customer_Behaviour[City]": "Jonathanland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lithuania", "Customer_Behaviour[Timestamp]": 1456287097000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 48335.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 218.0, "Customer_Behaviour[City]_stringindexer_transform": 349.0, "Customer_Behaviour[Country]_stringindexer_transform": 60.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 64.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 116.0, "Customer_Behaviour[Ad Topic Line]": "Visionary mission-critical application", "Customer_Behaviour[City]": "North Virginia", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Maldives", "Customer_Behaviour[Timestamp]": 1455740569000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 42251.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 400.0, "Customer_Behaviour[City]_stringindexer_transform": 238.0, "Customer_Behaviour[Country]_stringindexer_transform": 102.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Daily Internet Usage]": 193.0, "Customer_Behaviour[Ad Topic Line]": "Stand-alone well-modulated product", "Customer_Behaviour[City]": "East Jason", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cayman Islands", "Customer_Behaviour[Timestamp]": 1455242138000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 69868.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 19.0, "Customer_Behaviour[City]_stringindexer_transform": 103.0, "Customer_Behaviour[Country]_stringindexer_transform": 77.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.0, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Daily Internet Usage]": 138.0, "Customer_Behaviour[Ad Topic Line]": "Ameliorated bandwidth-monitored contingency", "Customer_Behaviour[City]": "North Cassie", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Haiti", "Customer_Behaviour[Timestamp]": 1452500292000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 72802.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 297.0, "Customer_Behaviour[City]_stringindexer_transform": 99.0, "Customer_Behaviour[Country]_stringindexer_transform": 151.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 141.0, "Customer_Behaviour[Ad Topic Line]": "Front-line neutral alliance", "Customer_Behaviour[City]": "North Destiny", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Arab Emirates", "Customer_Behaviour[Timestamp]": 1461362481000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 56129.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 84.0, "Customer_Behaviour[City]_stringindexer_transform": 250.0, "Customer_Behaviour[Country]_stringindexer_transform": 75.0, "Customer_Behaviour[Timestamp]_dayofmonth": 22, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.0, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Daily Internet Usage]": 109.0, "Customer_Behaviour[Ad Topic Line]": "Re-engineered optimal policy", "Customer_Behaviour[City]": "West Gabriellamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Canada", "Customer_Behaviour[Timestamp]": 1454555417000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 41547.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 364.0, "Customer_Behaviour[City]_stringindexer_transform": 388.0, "Customer_Behaviour[Country]_stringindexer_transform": 54.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 172.0, "Customer_Behaviour[Ad Topic Line]": "Implemented uniform synergy", "Customer_Behaviour[City]": "Alvarezland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Svalbard & Jan Mayen Islands", "Customer_Behaviour[Timestamp]": 1456085352000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 59240.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 142.0, "Customer_Behaviour[City]_stringindexer_transform": 33.0, "Customer_Behaviour[Country]_stringindexer_transform": 63.0, "Customer_Behaviour[Timestamp]_dayofmonth": 21, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 124.0, "Customer_Behaviour[Ad Topic Line]": "Mandatory empowering focus group", "Customer_Behaviour[City]": "Melanieton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1466377485000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 39939.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 438.0, "Customer_Behaviour[City]_stringindexer_transform": 81.0, "Customer_Behaviour[Country]_stringindexer_transform": 12.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.0, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Daily Internet Usage]": 194.0, "Customer_Behaviour[Ad Topic Line]": "Intuitive global website", "Customer_Behaviour[City]": "Waltertown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iran", "Customer_Behaviour[Timestamp]": 1451795987000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 47051.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 41.0, "Customer_Behaviour[City]_stringindexer_transform": 39.0, "Customer_Behaviour[Country]_stringindexer_transform": 25.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 125.0, "Customer_Behaviour[Ad Topic Line]": "Synergized clear-thinking protocol", "Customer_Behaviour[City]": "Fosterside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1459067557000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 35349.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 368.0, "Customer_Behaviour[City]_stringindexer_transform": 441.0, "Customer_Behaviour[Country]_stringindexer_transform": 11.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 159.0, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered multi-state complexity", "Customer_Behaviour[City]": "Davidstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Netherlands Antilles", "Customer_Behaviour[Timestamp]": 1468167956000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 69784.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 99.0, "Customer_Behaviour[City]_stringindexer_transform": 469.0, "Customer_Behaviour[Country]_stringindexer_transform": 85.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 151.0, "Customer_Behaviour[Ad Topic Line]": "Enhanced intangible portal", "Customer_Behaviour[City]": "Lake Tracy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hong Kong", "Customer_Behaviour[Timestamp]": 1466828493000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 50760.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 5.0, "Customer_Behaviour[City]_stringindexer_transform": 398.0, "Customer_Behaviour[Country]_stringindexer_transform": 66.0, "Customer_Behaviour[Timestamp]_dayofmonth": 25, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.0, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Daily Internet Usage]": 162.0, "Customer_Behaviour[Ad Topic Line]": "Switchable real-time product", "Customer_Behaviour[City]": "Dianaville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malawi", "Customer_Behaviour[Timestamp]": 1463424719000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 20592.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 146.0, "Customer_Behaviour[City]_stringindexer_transform": 341.0, "Customer_Behaviour[Country]_stringindexer_transform": 69.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 140.0, "Customer_Behaviour[Ad Topic Line]": "Up-sized asymmetric firmware", "Customer_Behaviour[City]": "Lake Matthew", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mexico", "Customer_Behaviour[Timestamp]": 1466878673000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 72196.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 188.0, "Customer_Behaviour[City]_stringindexer_transform": 325.0, "Customer_Behaviour[Country]_stringindexer_transform": 24.0, "Customer_Behaviour[Timestamp]_dayofmonth": 25, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.0, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Daily Internet Usage]": 125.0, "Customer_Behaviour[Ad Topic Line]": "Customer-focused explicit challenge", "Customer_Behaviour[City]": "Sarahland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Yemen", "Customer_Behaviour[Timestamp]": 1461268584000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 64011.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 422.0, "Customer_Behaviour[City]_stringindexer_transform": 137.0, "Customer_Behaviour[Country]_stringindexer_transform": 59.0, "Customer_Behaviour[Timestamp]_dayofmonth": 21, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 123.0, "Customer_Behaviour[Ad Topic Line]": "Extended leadingedge solution", "Customer_Behaviour[City]": "New Patrick", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Montenegro", "Customer_Behaviour[Timestamp]": 1457264166000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 66193.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 268.0, "Customer_Behaviour[City]_stringindexer_transform": 114.0, "Customer_Behaviour[Country]_stringindexer_transform": 192.0, "Customer_Behaviour[Timestamp]_dayofmonth": 6, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 173.0, "Customer_Behaviour[Ad Topic Line]": "Front-line bifurcated ability", "Customer_Behaviour[City]": "Nicholasland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mayotte", "Customer_Behaviour[Timestamp]": 1459742268000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 63126.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 235.0, "Customer_Behaviour[City]_stringindexer_transform": 352.0, "Customer_Behaviour[Country]_stringindexer_transform": 22.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 178.0, "Customer_Behaviour[Ad Topic Line]": "Virtual 5thgeneration emulation", "Customer_Behaviour[City]": "Ronniemouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brazil", "Customer_Behaviour[Timestamp]": 1464990201000, "Customer_Behaviour[Clicked on Ad]": 1, "Customer_Behaviour[Area Income]": 29875.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 405.0, "Customer_Behaviour[City]_stringindexer_transform": 331.0, "Customer_Behaviour[Country]_stringindexer_transform": 32.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 256.0, "Customer_Behaviour[Ad Topic Line]": "Cloned 5thgeneration orchestration", "Customer_Behaviour[City]": "Wrightburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tunisia", "Customer_Behaviour[Timestamp]": 1459039991000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 61833.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 448.0, "Customer_Behaviour[City]_stringindexer_transform": 94.0, "Customer_Behaviour[Country]_stringindexer_transform": 115.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 236.0, "Customer_Behaviour[Ad Topic Line]": "Organic bottom-line service-desk", "Customer_Behaviour[City]": "Davidton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "San Marino", "Customer_Behaviour[Timestamp]": 1457901342000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 59785.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 461.0, "Customer_Behaviour[City]_stringindexer_transform": 335.0, "Customer_Behaviour[Country]_stringindexer_transform": 120.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 225.0, "Customer_Behaviour[Ad Topic Line]": "Robust logistical utilization", "Customer_Behaviour[City]": "South Manuel", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iceland", "Customer_Behaviour[Timestamp]": 1464924978000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 73889.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 302.0, "Customer_Behaviour[City]_stringindexer_transform": 105.0, "Customer_Behaviour[Country]_stringindexer_transform": 172.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 208.0, "Customer_Behaviour[Ad Topic Line]": "Enhanced dedicated support", "Customer_Behaviour[City]": "Brandonstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Myanmar", "Customer_Behaviour[Timestamp]": 1454014772000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 53852.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 31.0, "Customer_Behaviour[City]_stringindexer_transform": 410.0, "Customer_Behaviour[Country]_stringindexer_transform": 48.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.0, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Daily Internet Usage]": 214.0, "Customer_Behaviour[Ad Topic Line]": "Synergistic fresh-thinking array", "Customer_Behaviour[City]": "North Tara", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bosnia and Herzegovina", "Customer_Behaviour[Timestamp]": 1461188962000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 51739.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 208.0, "Customer_Behaviour[City]_stringindexer_transform": 437.0, "Customer_Behaviour[Country]_stringindexer_transform": 90.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 187.0, "Customer_Behaviour[Ad Topic Line]": "Intuitive dynamic attitude", "Customer_Behaviour[City]": "Pruittmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1462172458000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 71511.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 490.0, "Customer_Behaviour[City]_stringindexer_transform": 430.0, "Customer_Behaviour[Country]_stringindexer_transform": 0.0, "Customer_Behaviour[Timestamp]_dayofmonth": 2, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Daily Internet Usage]": 209.0, "Customer_Behaviour[Ad Topic Line]": "Business-focused value-added definition", "Customer_Behaviour[City]": "West Guybury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bouvet Island (Bouvetoya)", "Customer_Behaviour[Timestamp]": 1453898296000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 46179.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 343.0, "Customer_Behaviour[City]_stringindexer_transform": 55.0, "Customer_Behaviour[Country]_stringindexer_transform": 40.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 201.0, "Customer_Behaviour[Ad Topic Line]": "Synchronized systemic hierarchy", "Customer_Behaviour[City]": "Johnstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Luxembourg", "Customer_Behaviour[Timestamp]": 1460431599000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 61389.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 37.0, "Customer_Behaviour[City]_stringindexer_transform": 2.0, "Customer_Behaviour[Country]_stringindexer_transform": 18.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.0, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Daily Internet Usage]": 221.0, "Customer_Behaviour[Ad Topic Line]": "Reactive demand-driven capacity", "Customer_Behaviour[City]": "Kellytown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ukraine", "Customer_Behaviour[Timestamp]": 1454995698000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 76435.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 56.0, "Customer_Behaviour[City]_stringindexer_transform": 111.0, "Customer_Behaviour[Country]_stringindexer_transform": 27.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 202.0, "Customer_Behaviour[Ad Topic Line]": "Innovative user-facing extranet", "Customer_Behaviour[City]": "Mackenziemouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Russian Federation", "Customer_Behaviour[Timestamp]": 1461749278000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 57691.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 17.0, "Customer_Behaviour[City]_stringindexer_transform": 32.0, "Customer_Behaviour[Country]_stringindexer_transform": 112.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 64.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 252.0, "Customer_Behaviour[Ad Topic Line]": "Front-line intermediate database", "Customer_Behaviour[City]": "Zacharystad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tunisia", "Customer_Behaviour[Timestamp]": 1460807623000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 59784.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 304.0, "Customer_Behaviour[City]_stringindexer_transform": 208.0, "Customer_Behaviour[Country]_stringindexer_transform": 115.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 212.0, "Customer_Behaviour[Ad Topic Line]": "Balanced dynamic application", "Customer_Behaviour[City]": "Bowenview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Helena", "Customer_Behaviour[Timestamp]": 1454891018000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 64929.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 238.0, "Customer_Behaviour[City]_stringindexer_transform": 146.0, "Customer_Behaviour[Country]_stringindexer_transform": 84.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Daily Internet Usage]": 204.0, "Customer_Behaviour[Ad Topic Line]": "Reduced global support", "Customer_Behaviour[City]": "Jamesberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Niger", "Customer_Behaviour[Timestamp]": 1455197182000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 57519.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 132.0, "Customer_Behaviour[City]_stringindexer_transform": 158.0, "Customer_Behaviour[Country]_stringindexer_transform": 164.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.0, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Daily Internet Usage]": 198.0, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered demand-driven alliance", "Customer_Behaviour[City]": "Johnport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sri Lanka", "Customer_Behaviour[Timestamp]": 1465412041000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67058.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 245.0, "Customer_Behaviour[City]_stringindexer_transform": 468.0, "Customer_Behaviour[Country]_stringindexer_transform": 103.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 225.0, "Customer_Behaviour[Ad Topic Line]": "Visionary reciprocal circuit", "Customer_Behaviour[City]": "Odomville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Kingdom", "Customer_Behaviour[Timestamp]": 1462310398000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 58526.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 486.0, "Customer_Behaviour[City]_stringindexer_transform": 266.0, "Customer_Behaviour[Country]_stringindexer_transform": 117.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 177.0, "Customer_Behaviour[Ad Topic Line]": "Sharable bottom-line solution", "Customer_Behaviour[City]": "Thomasview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1460001376000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67479.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 273.0, "Customer_Behaviour[City]_stringindexer_transform": 108.0, "Customer_Behaviour[Country]_stringindexer_transform": 3.0, "Customer_Behaviour[Timestamp]_dayofmonth": 7, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 239.0, "Customer_Behaviour[Ad Topic Line]": "Upgradable asynchronous circuit", "Customer_Behaviour[City]": "Port Gregory", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Azerbaijan", "Customer_Behaviour[Timestamp]": 1455469515000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 56113.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 145.0, "Customer_Behaviour[City]_stringindexer_transform": 473.0, "Customer_Behaviour[Country]_stringindexer_transform": 96.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 183.0, "Customer_Behaviour[Ad Topic Line]": "Customer-focused empowering ability", "Customer_Behaviour[City]": "Lake Amy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1462003633000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 47708.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 239.0, "Customer_Behaviour[City]_stringindexer_transform": 318.0, "Customer_Behaviour[Country]_stringindexer_transform": 13.0, "Customer_Behaviour[Timestamp]_dayofmonth": 30, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 169.0, "Customer_Behaviour[Ad Topic Line]": "Stand-alone national attitude", "Customer_Behaviour[City]": "Smithburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1457534733000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 71228.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 426.0, "Customer_Behaviour[City]_stringindexer_transform": 65.0, "Customer_Behaviour[Country]_stringindexer_transform": 13.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Daily Internet Usage]": 222.0, "Customer_Behaviour[Ad Topic Line]": "Advanced full-range migration", "Customer_Behaviour[City]": "New Michaeltown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turks and Caicos Islands", "Customer_Behaviour[Timestamp]": 1467898654000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 74543.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 354.0, "Customer_Behaviour[City]_stringindexer_transform": 40.0, "Customer_Behaviour[Country]_stringindexer_transform": 26.0, "Customer_Behaviour[Timestamp]_dayofmonth": 7, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 64.0, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Daily Internet Usage]": 215.0, "Customer_Behaviour[Ad Topic Line]": "Seamless object-oriented structure", "Customer_Behaviour[City]": "East Tiffanyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cote d'Ivoire", "Customer_Behaviour[Timestamp]": 1459527665000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 60465.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 79.0, "Customer_Behaviour[City]_stringindexer_transform": 406.0, "Customer_Behaviour[Country]_stringindexer_transform": 55.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 184.0, "Customer_Behaviour[Ad Topic Line]": "Distributed tertiary system engine", "Customer_Behaviour[City]": "Sharpberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bouvet Island (Bouvetoya)", "Customer_Behaviour[Timestamp]": 1458056954000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 74535.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 347.0, "Customer_Behaviour[City]_stringindexer_transform": 205.0, "Customer_Behaviour[Country]_stringindexer_transform": 40.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 200.0, "Customer_Behaviour[Ad Topic Line]": "Total 5thgeneration encoding", "Customer_Behaviour[City]": "North Kristine", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Central African Republic", "Customer_Behaviour[Timestamp]": 1467348117000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 73600.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 332.0, "Customer_Behaviour[City]_stringindexer_transform": 116.0, "Customer_Behaviour[Country]_stringindexer_transform": 202.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 238.0, "Customer_Behaviour[Ad Topic Line]": "Progressive empowering alliance", "Customer_Behaviour[City]": "Wongland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Albania", "Customer_Behaviour[Timestamp]": 1468012712000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 52968.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 298.0, "Customer_Behaviour[City]_stringindexer_transform": 101.0, "Customer_Behaviour[Country]_stringindexer_transform": 30.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 89.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 194.0, "Customer_Behaviour[Ad Topic Line]": "Innovative background conglomeration", "Customer_Behaviour[City]": "Wallacechester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Maldives", "Customer_Behaviour[Timestamp]": 1468076136000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 59593.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 325.0, "Customer_Behaviour[City]_stringindexer_transform": 141.0, "Customer_Behaviour[Country]_stringindexer_transform": 102.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 20, "Customer_Behaviour[Daily Internet Usage]": 202.0, "Customer_Behaviour[Ad Topic Line]": "Polarized 6thgeneration info-mediaries", "Customer_Behaviour[City]": "Bradshawborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guernsey", "Customer_Behaviour[Timestamp]": 1465558293000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 56884.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 65.0, "Customer_Behaviour[City]_stringindexer_transform": 113.0, "Customer_Behaviour[Country]_stringindexer_transform": 121.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.0, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Daily Internet Usage]": 210.0, "Customer_Behaviour[Ad Topic Line]": "Operative system-worthy protocol", "Customer_Behaviour[City]": "Johnstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Micronesia", "Customer_Behaviour[Timestamp]": 1457535431000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 72272.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 466.0, "Customer_Behaviour[City]_stringindexer_transform": 2.0, "Customer_Behaviour[Country]_stringindexer_transform": 82.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.0, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Daily Internet Usage]": 211.0, "Customer_Behaviour[Ad Topic Line]": "Extended systemic policy", "Customer_Behaviour[City]": "Andersonton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Eritrea", "Customer_Behaviour[Timestamp]": 1457937974000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 56067.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 429.0, "Customer_Behaviour[City]_stringindexer_transform": 404.0, "Customer_Behaviour[Country]_stringindexer_transform": 45.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 231.0, "Customer_Behaviour[Ad Topic Line]": "Self-enabling holistic process improvement", "Customer_Behaviour[City]": "Johnsport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Benin", "Customer_Behaviour[Timestamp]": 1460044922000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 56791.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 411.0, "Customer_Behaviour[City]_stringindexer_transform": 286.0, "Customer_Behaviour[Country]_stringindexer_transform": 104.0, "Customer_Behaviour[Timestamp]_dayofmonth": 7, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 212.0, "Customer_Behaviour[Ad Topic Line]": "Horizontal client-driven hierarchy", "Customer_Behaviour[City]": "South Ronald", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1454592632000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 63274.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 327.0, "Customer_Behaviour[City]_stringindexer_transform": 54.0, "Customer_Behaviour[Country]_stringindexer_transform": 14.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 230.0, "Customer_Behaviour[Ad Topic Line]": "User-friendly asymmetric info-mediaries", "Customer_Behaviour[City]": "Lisaberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Egypt", "Customer_Behaviour[Timestamp]": 1463459251000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 61227.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 423.0, "Customer_Behaviour[City]_stringindexer_transform": 465.0, "Customer_Behaviour[Country]_stringindexer_transform": 51.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 89.0, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Daily Internet Usage]": 206.0, "Customer_Behaviour[Ad Topic Line]": "Polarized bandwidth-monitored moratorium", "Customer_Behaviour[City]": "Stewartbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Falkland Islands (Malvinas)", "Customer_Behaviour[Timestamp]": 1459678076000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 57868.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 241.0, "Customer_Behaviour[City]_stringindexer_transform": 304.0, "Customer_Behaviour[Country]_stringindexer_transform": 175.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 223.0, "Customer_Behaviour[Ad Topic Line]": "Centralized systematic knowledgebase", "Customer_Behaviour[City]": "Benjaminchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Dominica", "Customer_Behaviour[Timestamp]": 1459805446000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 66618.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 62.0, "Customer_Behaviour[City]_stringindexer_transform": 239.0, "Customer_Behaviour[Country]_stringindexer_transform": 89.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 233.0, "Customer_Behaviour[Ad Topic Line]": "Future-proofed grid-enabled implementation", "Customer_Behaviour[City]": "North Wesleychester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jersey", "Customer_Behaviour[Timestamp]": 1467820833000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 73104.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 499.0, "Customer_Behaviour[City]_stringindexer_transform": 246.0, "Customer_Behaviour[Country]_stringindexer_transform": 20.0, "Customer_Behaviour[Timestamp]_dayofmonth": 6, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 215.0, "Customer_Behaviour[Ad Topic Line]": "Profound zero administration instruction set", "Customer_Behaviour[City]": "Port Jeffrey", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United States Minor Outlying Islands", "Customer_Behaviour[Timestamp]": 1452730990000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67633.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 176.0, "Customer_Behaviour[City]_stringindexer_transform": 161.0, "Customer_Behaviour[Country]_stringindexer_transform": 157.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 190.0, "Customer_Behaviour[Ad Topic Line]": "Up-sized executive moderator", "Customer_Behaviour[City]": "Lake Josetown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gibraltar", "Customer_Behaviour[Timestamp]": 1454699161000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 64122.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 474.0, "Customer_Behaviour[City]_stringindexer_transform": 62.0, "Customer_Behaviour[Country]_stringindexer_transform": 80.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 210.0, "Customer_Behaviour[Ad Topic Line]": "Ergonomic client-driven application", "Customer_Behaviour[City]": "Kimberlyhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turks and Caicos Islands", "Customer_Behaviour[Timestamp]": 1457746759000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 77460.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 70.0, "Customer_Behaviour[City]_stringindexer_transform": 86.0, "Customer_Behaviour[Country]_stringindexer_transform": 26.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 172.0, "Customer_Behaviour[Ad Topic Line]": "Multi-channeled asynchronous open system", "Customer_Behaviour[City]": "Port Jodi", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Togo", "Customer_Behaviour[Timestamp]": 1464468110000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 72524.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 15.0, "Customer_Behaviour[City]_stringindexer_transform": 458.0, "Customer_Behaviour[Country]_stringindexer_transform": 95.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 247.0, "Customer_Behaviour[Ad Topic Line]": "Adaptive 24hour Graphic Interface", "Customer_Behaviour[City]": "Sylviaview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Palau", "Customer_Behaviour[Timestamp]": 1455317468000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 66699.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 495.0, "Customer_Behaviour[City]_stringindexer_transform": 132.0, "Customer_Behaviour[Country]_stringindexer_transform": 128.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 251.0, "Customer_Behaviour[Ad Topic Line]": "Horizontal multi-state interface", "Customer_Behaviour[City]": "West Michaelhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Angola", "Customer_Behaviour[Timestamp]": 1456749117000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 57756.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 408.0, "Customer_Behaviour[City]_stringindexer_transform": 148.0, "Customer_Behaviour[Country]_stringindexer_transform": 159.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.0, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Daily Internet Usage]": 162.0, "Customer_Behaviour[Ad Topic Line]": "Diverse stable circuit", "Customer_Behaviour[City]": "Walshhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Nauru", "Customer_Behaviour[Timestamp]": 1453043431000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 58019.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 171.0, "Customer_Behaviour[City]_stringindexer_transform": 443.0, "Customer_Behaviour[Country]_stringindexer_transform": 142.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 86.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 198.0, "Customer_Behaviour[Ad Topic Line]": "Customer-focused attitude-oriented instruction set", "Customer_Behaviour[City]": "South Jennifer", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Chad", "Customer_Behaviour[Timestamp]": 1464329967000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 62238.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 181.0, "Customer_Behaviour[City]_stringindexer_transform": 169.0, "Customer_Behaviour[Country]_stringindexer_transform": 135.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 196.0, "Customer_Behaviour[Ad Topic Line]": "Secured clear-thinking middleware", "Customer_Behaviour[City]": "South Daniellefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Qatar", "Customer_Behaviour[Timestamp]": 1458397425000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 68094.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 294.0, "Customer_Behaviour[City]_stringindexer_transform": 11.0, "Customer_Behaviour[Country]_stringindexer_transform": 46.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 163.0, "Customer_Behaviour[Ad Topic Line]": "Right-sized value-added initiative", "Customer_Behaviour[City]": "Dianashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Singapore", "Customer_Behaviour[Timestamp]": 1469248625000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 64395.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 78.0, "Customer_Behaviour[City]_stringindexer_transform": 329.0, "Customer_Behaviour[Country]_stringindexer_transform": 37.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 227.0, "Customer_Behaviour[Ad Topic Line]": "Multi-channeled reciprocal artificial intelligence", "Customer_Behaviour[City]": "Hammondport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kazakhstan", "Customer_Behaviour[Timestamp]": 1468951582000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 72423.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 494.0, "Customer_Behaviour[City]_stringindexer_transform": 3.0, "Customer_Behaviour[Country]_stringindexer_transform": 127.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.0, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Daily Internet Usage]": 199.0, "Customer_Behaviour[Ad Topic Line]": "Realigned systematic function", "Customer_Behaviour[City]": "Hernandezfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Rwanda", "Customer_Behaviour[Timestamp]": 1455087127000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 60309.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 148.0, "Customer_Behaviour[City]_stringindexer_transform": 297.0, "Customer_Behaviour[Country]_stringindexer_transform": 21.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 208.0, "Customer_Behaviour[Ad Topic Line]": "Networked high-level structure", "Customer_Behaviour[City]": "New Jeffreychester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bouvet Island (Bouvetoya)", "Customer_Behaviour[Timestamp]": 1463969704000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 63115.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 124.0, "Customer_Behaviour[City]_stringindexer_transform": 200.0, "Customer_Behaviour[Country]_stringindexer_transform": 40.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 210.0, "Customer_Behaviour[Ad Topic Line]": "Advanced modular Local Area Network", "Customer_Behaviour[City]": "South Denisefurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1465132584000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 53673.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 485.0, "Customer_Behaviour[City]_stringindexer_transform": 77.0, "Customer_Behaviour[Country]_stringindexer_transform": 5.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 191.0, "Customer_Behaviour[Ad Topic Line]": "Reduced bi-directional strategy", "Customer_Behaviour[City]": "North Anna", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Arab Emirates", "Customer_Behaviour[Timestamp]": 1453420109000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 66624.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 285.0, "Customer_Behaviour[City]_stringindexer_transform": 456.0, "Customer_Behaviour[Country]_stringindexer_transform": 75.0, "Customer_Behaviour[Timestamp]_dayofmonth": 21, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 214.0, "Customer_Behaviour[Ad Topic Line]": "Digitized heuristic solution", "Customer_Behaviour[City]": "Port Destiny", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Antigua and Barbuda", "Customer_Behaviour[Timestamp]": 1465086553000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 77567.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 316.0, "Customer_Behaviour[City]_stringindexer_transform": 385.0, "Customer_Behaviour[Country]_stringindexer_transform": 50.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 218.0, "Customer_Behaviour[Ad Topic Line]": "Multi-layered non-volatile Graphical User Interface", "Customer_Behaviour[City]": "Wilsonburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saudi Arabia", "Customer_Behaviour[Timestamp]": 1464114958000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 70410.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 214.0, "Customer_Behaviour[City]_stringindexer_transform": 477.0, "Customer_Behaviour[Country]_stringindexer_transform": 108.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 212.0, "Customer_Behaviour[Ad Topic Line]": "Synchronized multimedia model", "Customer_Behaviour[City]": "Murphymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1461313884000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 66107.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 428.0, "Customer_Behaviour[City]_stringindexer_transform": 5.0, "Customer_Behaviour[Country]_stringindexer_transform": 3.0, "Customer_Behaviour[Timestamp]_dayofmonth": 22, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 229.0, "Customer_Behaviour[Ad Topic Line]": "Ameliorated upward-trending definition", "Customer_Behaviour[City]": "Taylorberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Seychelles", "Customer_Behaviour[Timestamp]": 1460721074000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 65461.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 127.0, "Customer_Behaviour[City]_stringindexer_transform": 252.0, "Customer_Behaviour[Country]_stringindexer_transform": 57.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 254.0, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered human-resource structure", "Customer_Behaviour[City]": "Melissafurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Poland", "Customer_Behaviour[Timestamp]": 1467419062000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 55353.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 26.0, "Customer_Behaviour[City]_stringindexer_transform": 253.0, "Customer_Behaviour[Country]_stringindexer_transform": 41.0, "Customer_Behaviour[Timestamp]_dayofmonth": 2, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 200.0, "Customer_Behaviour[Ad Topic Line]": "Managed upward-trending instruction set", "Customer_Behaviour[City]": "East Brianberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Estonia", "Customer_Behaviour[Timestamp]": 1457086428000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67516.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 57.0, "Customer_Behaviour[City]_stringindexer_transform": 433.0, "Customer_Behaviour[Country]_stringindexer_transform": 97.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 89.0, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Daily Internet Usage]": 171.0, "Customer_Behaviour[Ad Topic Line]": "Phased zero administration success", "Customer_Behaviour[City]": "Townsendfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1461569421000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 59886.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 275.0, "Customer_Behaviour[City]_stringindexer_transform": 362.0, "Customer_Behaviour[Country]_stringindexer_transform": 15.0, "Customer_Behaviour[Timestamp]_dayofmonth": 25, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 199.0, "Customer_Behaviour[Ad Topic Line]": "Configurable multi-state utilization", "Customer_Behaviour[City]": "Robertbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Colombia", "Customer_Behaviour[Timestamp]": 1468720733000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 74430.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 158.0, "Customer_Behaviour[City]_stringindexer_transform": 283.0, "Customer_Behaviour[Country]_stringindexer_transform": 206.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Daily Internet Usage]": 201.0, "Customer_Behaviour[Ad Topic Line]": "Diverse multi-tasking parallelism", "Customer_Behaviour[City]": "New Tinamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brunei Darussalam", "Customer_Behaviour[Timestamp]": 1461731297000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 58633.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 192.0, "Customer_Behaviour[City]_stringindexer_transform": 171.0, "Customer_Behaviour[Country]_stringindexer_transform": 65.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 158.0, "Customer_Behaviour[Ad Topic Line]": "Up-sized tertiary contingency", "Customer_Behaviour[City]": "Ramosstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Finland", "Customer_Behaviour[Timestamp]": 1467494543000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 72209.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 51.0, "Customer_Behaviour[City]_stringindexer_transform": 256.0, "Customer_Behaviour[Country]_stringindexer_transform": 31.0, "Customer_Behaviour[Timestamp]_dayofmonth": 2, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 204.0, "Customer_Behaviour[Ad Topic Line]": "Expanded clear-thinking core", "Customer_Behaviour[City]": "North Shannon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Philippines", "Customer_Behaviour[Timestamp]": 1466328275000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 60372.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 213.0, "Customer_Behaviour[City]_stringindexer_transform": 450.0, "Customer_Behaviour[Country]_stringindexer_transform": 158.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 222.0, "Customer_Behaviour[Ad Topic Line]": "Open-source coherent monitoring", "Customer_Behaviour[City]": "West Russell", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ecuador", "Customer_Behaviour[Timestamp]": 1465709479000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 71136.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 190.0, "Customer_Behaviour[City]_stringindexer_transform": 455.0, "Customer_Behaviour[Country]_stringindexer_transform": 34.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 201.0, "Customer_Behaviour[Ad Topic Line]": "Persevering tertiary capability", "Customer_Behaviour[City]": "Masonhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1452086401000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 63727.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 24.0, "Customer_Behaviour[City]_stringindexer_transform": 31.0, "Customer_Behaviour[Country]_stringindexer_transform": 4.0, "Customer_Behaviour[Timestamp]_dayofmonth": 6, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Daily Internet Usage]": 231.0, "Customer_Behaviour[Ad Topic Line]": "Enterprise-wide bi-directional secured line", "Customer_Behaviour[City]": "Derrickhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cuba", "Customer_Behaviour[Timestamp]": 1454213420000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 61608.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 382.0, "Customer_Behaviour[City]_stringindexer_transform": 481.0, "Customer_Behaviour[Country]_stringindexer_transform": 126.0, "Customer_Behaviour[Timestamp]_dayofmonth": 31, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.0, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Daily Internet Usage]": 226.0, "Customer_Behaviour[Ad Topic Line]": "Total directional approach", "Customer_Behaviour[City]": "New Brandy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkey", "Customer_Behaviour[Timestamp]": 1463345320000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 64447.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 200.0, "Customer_Behaviour[City]_stringindexer_transform": 115.0, "Customer_Behaviour[Country]_stringindexer_transform": 74.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 212.0, "Customer_Behaviour[Ad Topic Line]": "Robust transitional ability", "Customer_Behaviour[City]": "East Timothy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Southern Territories", "Customer_Behaviour[Timestamp]": 1458190812000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67669.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 102.0, "Customer_Behaviour[City]_stringindexer_transform": 215.0, "Customer_Behaviour[Country]_stringindexer_transform": 144.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 244.0, "Customer_Behaviour[Ad Topic Line]": "Self-enabling didactic pricing structure", "Customer_Behaviour[City]": "West Alyssa", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malaysia", "Customer_Behaviour[Timestamp]": 1469006844000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 50723.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 114.0, "Customer_Behaviour[City]_stringindexer_transform": 59.0, "Customer_Behaviour[Country]_stringindexer_transform": 147.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 230.0, "Customer_Behaviour[Ad Topic Line]": "Customizable tangible hierarchy", "Customer_Behaviour[City]": "Bruceburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Christmas Island", "Customer_Behaviour[Timestamp]": 1460731548000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 70547.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 267.0, "Customer_Behaviour[City]_stringindexer_transform": 438.0, "Customer_Behaviour[Country]_stringindexer_transform": 49.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 203.0, "Customer_Behaviour[Ad Topic Line]": "Intuitive explicit conglomeration", "Customer_Behaviour[City]": "Port Robin", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greenland", "Customer_Behaviour[Timestamp]": 1453316977000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 62312.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 317.0, "Customer_Behaviour[City]_stringindexer_transform": 418.0, "Customer_Behaviour[Country]_stringindexer_transform": 35.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 254.0, "Customer_Behaviour[Ad Topic Line]": "Right-sized asynchronous website", "Customer_Behaviour[City]": "Port Aliciabury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guadeloupe", "Customer_Behaviour[Timestamp]": 1455522910000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 52686.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 160.0, "Customer_Behaviour[City]_stringindexer_transform": 156.0, "Customer_Behaviour[Country]_stringindexer_transform": 180.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 179.0, "Customer_Behaviour[Ad Topic Line]": "Advanced 5thgeneration capability", "Customer_Behaviour[City]": "Port Whitneyhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belgium", "Customer_Behaviour[Timestamp]": 1455046672000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 78119.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 43.0, "Customer_Behaviour[City]_stringindexer_transform": 96.0, "Customer_Behaviour[Country]_stringindexer_transform": 47.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 242.0, "Customer_Behaviour[Ad Topic Line]": "Universal asymmetric archive", "Customer_Behaviour[City]": "Jeffreyshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Israel", "Customer_Behaviour[Timestamp]": 1453708373000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 57014.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 293.0, "Customer_Behaviour[City]_stringindexer_transform": 273.0, "Customer_Behaviour[Country]_stringindexer_transform": 58.0, "Customer_Behaviour[Timestamp]_dayofmonth": 25, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 216.0, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered regional toolset", "Customer_Behaviour[City]": "North Loriburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Estonia", "Customer_Behaviour[Timestamp]": 1452324496000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 58337.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 120.0, "Customer_Behaviour[City]_stringindexer_transform": 291.0, "Customer_Behaviour[Country]_stringindexer_transform": 97.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 237.0, "Customer_Behaviour[Ad Topic Line]": "Customizable zero-defect matrix", "Customer_Behaviour[City]": "South Tomside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Pierre and Miquelon", "Customer_Behaviour[Timestamp]": 1464268710000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 69285.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 222.0, "Customer_Behaviour[City]_stringindexer_transform": 186.0, "Customer_Behaviour[Country]_stringindexer_transform": 23.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 213.0, "Customer_Behaviour[Ad Topic Line]": "Front-line fresh-thinking open system", "Customer_Behaviour[City]": "West Brenda", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tonga", "Customer_Behaviour[Timestamp]": 1467144821000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67938.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 211.0, "Customer_Behaviour[City]_stringindexer_transform": 27.0, "Customer_Behaviour[Country]_stringindexer_transform": 73.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Daily Internet Usage]": 210.0, "Customer_Behaviour[Ad Topic Line]": "Reactive responsive emulation", "Customer_Behaviour[City]": "Greenechester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1464506967000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 61610.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 224.0, "Customer_Behaviour[City]_stringindexer_transform": 194.0, "Customer_Behaviour[Country]_stringindexer_transform": 8.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 228.0, "Customer_Behaviour[Ad Topic Line]": "Enterprise-wide local matrices", "Customer_Behaviour[City]": "Gravesport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Morocco", "Customer_Behaviour[Timestamp]": 1460907963000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 62667.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 279.0, "Customer_Behaviour[City]_stringindexer_transform": 488.0, "Customer_Behaviour[Country]_stringindexer_transform": 125.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 238.0, "Customer_Behaviour[Ad Topic Line]": "Persevering even-keeled help-desk", "Customer_Behaviour[City]": "Millerland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Wallis and Futuna", "Customer_Behaviour[Timestamp]": 1460299715000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67714.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 29.0, "Customer_Behaviour[City]_stringindexer_transform": 448.0, "Customer_Behaviour[Country]_stringindexer_transform": 141.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 226.0, "Customer_Behaviour[Ad Topic Line]": "Grass-roots eco-centric instruction set", "Customer_Behaviour[City]": "Port Jessicamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Chile", "Customer_Behaviour[Timestamp]": 1460824715000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 69710.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 355.0, "Customer_Behaviour[City]_stringindexer_transform": 464.0, "Customer_Behaviour[Country]_stringindexer_transform": 138.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 214.0, "Customer_Behaviour[Ad Topic Line]": "Fully-configurable incremental Graphical User Interface", "Customer_Behaviour[City]": "Paulport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gabon", "Customer_Behaviour[Timestamp]": 1462263683000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 66269.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 121.0, "Customer_Behaviour[City]_stringindexer_transform": 63.0, "Customer_Behaviour[Country]_stringindexer_transform": 17.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 250.0, "Customer_Behaviour[Ad Topic Line]": "Mandatory 3rdgeneration moderator", "Customer_Behaviour[City]": "Cynthiaside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Holy See (Vatican City State)", "Customer_Behaviour[Timestamp]": 1463875318000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 55041.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 276.0, "Customer_Behaviour[City]_stringindexer_transform": 18.0, "Customer_Behaviour[Country]_stringindexer_transform": 132.0, "Customer_Behaviour[Timestamp]_dayofmonth": 22, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 214.0, "Customer_Behaviour[Ad Topic Line]": "Managed eco-centric encoding", "Customer_Behaviour[City]": "New Juan", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cameroon", "Customer_Behaviour[Timestamp]": 1459364990000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 61771.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 184.0, "Customer_Behaviour[City]_stringindexer_transform": 285.0, "Customer_Behaviour[Country]_stringindexer_transform": 67.0, "Customer_Behaviour[Timestamp]_dayofmonth": 30, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 231.0, "Customer_Behaviour[Ad Topic Line]": "Visionary multi-tasking alliance", "Customer_Behaviour[City]": "Amyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Somalia", "Customer_Behaviour[Timestamp]": 1452354568000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 61383.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 288.0, "Customer_Behaviour[City]_stringindexer_transform": 336.0, "Customer_Behaviour[Country]_stringindexer_transform": 86.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Daily Internet Usage]": 186.0, "Customer_Behaviour[Ad Topic Line]": "Ameliorated tangible hierarchy", "Customer_Behaviour[City]": "Harrishaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lebanon", "Customer_Behaviour[Timestamp]": 1460950916000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 63924.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 163.0, "Customer_Behaviour[City]_stringindexer_transform": 303.0, "Customer_Behaviour[Country]_stringindexer_transform": 87.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Daily Internet Usage]": 243.0, "Customer_Behaviour[Ad Topic Line]": "Enhanced maximized access", "Customer_Behaviour[City]": "Birdshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1459096889000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 66524.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 306.0, "Customer_Behaviour[City]_stringindexer_transform": 343.0, "Customer_Behaviour[Country]_stringindexer_transform": 16.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 232.0, "Customer_Behaviour[Ad Topic Line]": "Re-contextualized systemic time-frame", "Customer_Behaviour[City]": "Jacksonmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Niue", "Customer_Behaviour[Timestamp]": 1453927677000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 60638.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 260.0, "Customer_Behaviour[City]_stringindexer_transform": 179.0, "Customer_Behaviour[Country]_stringindexer_transform": 130.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.0, "Customer_Behaviour[Age]": 21, "Customer_Behaviour[Daily Internet Usage]": 186.0, "Customer_Behaviour[Ad Topic Line]": "Reactive bi-directional workforce", "Customer_Behaviour[City]": "Hayesmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cyprus", "Customer_Behaviour[Timestamp]": 1454830866000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 48537.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 133.0, "Customer_Behaviour[City]_stringindexer_transform": 23.0, "Customer_Behaviour[Country]_stringindexer_transform": 39.0, "Customer_Behaviour[Timestamp]_dayofmonth": 7, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 186.0, "Customer_Behaviour[Ad Topic Line]": "Re-engineered neutral success", "Customer_Behaviour[City]": "Juliaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Costa Rica", "Customer_Behaviour[Timestamp]": 1461042928000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 68614.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 477.0, "Customer_Behaviour[City]_stringindexer_transform": 463.0, "Customer_Behaviour[Country]_stringindexer_transform": 119.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 90.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 180.0, "Customer_Behaviour[Ad Topic Line]": "Multi-lateral empowering throughput", "Customer_Behaviour[City]": "Kimberlytown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Congo", "Customer_Behaviour[Timestamp]": 1455646896000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 54520.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 22.0, "Customer_Behaviour[City]_stringindexer_transform": 128.0, "Customer_Behaviour[Country]_stringindexer_transform": 122.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 243.0, "Customer_Behaviour[Ad Topic Line]": "Proactive asymmetric definition", "Customer_Behaviour[City]": "New Johnberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Pitcairn Islands", "Customer_Behaviour[Timestamp]": 1458895215000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 69476.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 419.0, "Customer_Behaviour[City]_stringindexer_transform": 189.0, "Customer_Behaviour[Country]_stringindexer_transform": 167.0, "Customer_Behaviour[Timestamp]_dayofmonth": 25, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 240.0, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive zero tolerance Local Area Network", "Customer_Behaviour[City]": "Shawstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belize", "Customer_Behaviour[Timestamp]": 1458088090000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 54989.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 183.0, "Customer_Behaviour[City]_stringindexer_transform": 226.0, "Customer_Behaviour[Country]_stringindexer_transform": 29.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Daily Internet Usage]": 231.0, "Customer_Behaviour[Ad Topic Line]": "Reduced incremental productivity", "Customer_Behaviour[City]": "Faithview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Singapore", "Customer_Behaviour[Timestamp]": 1457044276000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 65883.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 9.0, "Customer_Behaviour[City]_stringindexer_transform": 372.0, "Customer_Behaviour[Country]_stringindexer_transform": 37.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.0, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Daily Internet Usage]": 220.0, "Customer_Behaviour[Ad Topic Line]": "Realigned scalable standardization", "Customer_Behaviour[City]": "Richardsontown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Finland", "Customer_Behaviour[Timestamp]": 1456480473000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 65421.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 333.0, "Customer_Behaviour[City]_stringindexer_transform": 6.0, "Customer_Behaviour[Country]_stringindexer_transform": 31.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 200.0, "Customer_Behaviour[Ad Topic Line]": "Team-oriented context-sensitive installation", "Customer_Behaviour[City]": "East Christopherbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cameroon", "Customer_Behaviour[Timestamp]": 1466747422000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 58476.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 204.0, "Customer_Behaviour[City]_stringindexer_transform": 261.0, "Customer_Behaviour[Country]_stringindexer_transform": 67.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 214.0, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive systematic budgetary management", "Customer_Behaviour[City]": "Port Christinemouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sweden", "Customer_Behaviour[Timestamp]": 1464037245000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 66636.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 169.0, "Customer_Behaviour[City]_stringindexer_transform": 52.0, "Customer_Behaviour[Country]_stringindexer_transform": 61.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 184.0, "Customer_Behaviour[Ad Topic Line]": "Multi-layered tangible portal", "Customer_Behaviour[City]": "New Paul", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bosnia and Herzegovina", "Customer_Behaviour[Timestamp]": 1463027759000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 63060.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 404.0, "Customer_Behaviour[City]_stringindexer_transform": 445.0, "Customer_Behaviour[Country]_stringindexer_transform": 90.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.0, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Daily Internet Usage]": 211.0, "Customer_Behaviour[Ad Topic Line]": "De-engineered tertiary secured line", "Customer_Behaviour[City]": "Hartport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Czech Republic", "Customer_Behaviour[Timestamp]": 1468678434000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 60550.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 76.0, "Customer_Behaviour[City]_stringindexer_transform": 408.0, "Customer_Behaviour[Country]_stringindexer_transform": 118.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 230.0, "Customer_Behaviour[Ad Topic Line]": "Realigned next generation projection", "Customer_Behaviour[City]": "Hurleyborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gibraltar", "Customer_Behaviour[Timestamp]": 1455692757000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 46653.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 434.0, "Customer_Behaviour[City]_stringindexer_transform": 224.0, "Customer_Behaviour[Country]_stringindexer_transform": 80.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Daily Internet Usage]": 199.0, "Customer_Behaviour[Ad Topic Line]": "Decentralized needs-based analyzer", "Customer_Behaviour[City]": "Erikville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hong Kong", "Customer_Behaviour[Timestamp]": 1463004137000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 39699.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 38.0, "Customer_Behaviour[City]_stringindexer_transform": 493.0, "Customer_Behaviour[Country]_stringindexer_transform": 66.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 178.0, "Customer_Behaviour[Ad Topic Line]": "Multi-layered fresh-thinking process improvement", "Customer_Behaviour[City]": "Karenton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Barbados", "Customer_Behaviour[Timestamp]": 1456773995000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 75044.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 360.0, "Customer_Behaviour[City]_stringindexer_transform": 163.0, "Customer_Behaviour[Country]_stringindexer_transform": 33.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 237.0, "Customer_Behaviour[Ad Topic Line]": "Persevering eco-centric flexibility", "Customer_Behaviour[City]": "Lake Adrian", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1454170529000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 58996.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 187.0, "Customer_Behaviour[City]_stringindexer_transform": 425.0, "Customer_Behaviour[Country]_stringindexer_transform": 9.0, "Customer_Behaviour[Timestamp]_dayofmonth": 30, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 228.0, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered needs-based Local Area Network", "Customer_Behaviour[City]": "Mollyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Libyan Arab Jamahiriya", "Customer_Behaviour[Timestamp]": 1454220850000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 62475.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 481.0, "Customer_Behaviour[City]_stringindexer_transform": 154.0, "Customer_Behaviour[Country]_stringindexer_transform": 200.0, "Customer_Behaviour[Timestamp]_dayofmonth": 31, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 207.0, "Customer_Behaviour[Ad Topic Line]": "Polarized multimedia system engine", "Customer_Behaviour[City]": "West Daleborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Azerbaijan", "Customer_Behaviour[Timestamp]": 1463954063000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 66691.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 53.0, "Customer_Behaviour[City]_stringindexer_transform": 451.0, "Customer_Behaviour[Country]_stringindexer_transform": 96.0, "Customer_Behaviour[Timestamp]_dayofmonth": 22, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 261.0, "Customer_Behaviour[Ad Topic Line]": "Face-to-face analyzing encryption", "Customer_Behaviour[City]": "Stephenborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1456826495000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 44559.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 482.0, "Customer_Behaviour[City]_stringindexer_transform": 198.0, "Customer_Behaviour[Country]_stringindexer_transform": 0.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 217.0, "Customer_Behaviour[Ad Topic Line]": "Self-enabling even-keeled methodology", "Customer_Behaviour[City]": "Lake Kurtmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Rwanda", "Customer_Behaviour[Timestamp]": 1459757994000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 73207.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 161.0, "Customer_Behaviour[City]_stringindexer_transform": 490.0, "Customer_Behaviour[Country]_stringindexer_transform": 21.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 206.0, "Customer_Behaviour[Ad Topic Line]": "Public-key zero-defect analyzer", "Customer_Behaviour[City]": "West Thomas", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greece", "Customer_Behaviour[Timestamp]": 1463318314000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 60845.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 83.0, "Customer_Behaviour[City]_stringindexer_transform": 195.0, "Customer_Behaviour[Country]_stringindexer_transform": 19.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 224.0, "Customer_Behaviour[Ad Topic Line]": "Integrated motivating neural-net", "Customer_Behaviour[City]": "New Tyler", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kyrgyz Republic", "Customer_Behaviour[Timestamp]": 1467731650000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 61806.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 264.0, "Customer_Behaviour[City]_stringindexer_transform": 351.0, "Customer_Behaviour[Country]_stringindexer_transform": 83.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 168.0, "Customer_Behaviour[Ad Topic Line]": "Operative scalable emulation", "Customer_Behaviour[City]": "Reyesland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gabon", "Customer_Behaviour[Timestamp]": 1466374095000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67080.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 212.0, "Customer_Behaviour[City]_stringindexer_transform": 413.0, "Customer_Behaviour[Country]_stringindexer_transform": 17.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 224.0, "Customer_Behaviour[Ad Topic Line]": "Robust responsive collaboration", "Customer_Behaviour[City]": "Lake Courtney", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1469142875000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67744.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 313.0, "Customer_Behaviour[City]_stringindexer_transform": 342.0, "Customer_Behaviour[Country]_stringindexer_transform": 3.0, "Customer_Behaviour[Timestamp]_dayofmonth": 21, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.0, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Daily Internet Usage]": 216.0, "Customer_Behaviour[Ad Topic Line]": "Programmable empowering middleware", "Customer_Behaviour[City]": "Mariebury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1468374526000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 70449.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 199.0, "Customer_Behaviour[City]_stringindexer_transform": 136.0, "Customer_Behaviour[Country]_stringindexer_transform": 7.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 202.0, "Customer_Behaviour[Ad Topic Line]": "Public-key mission-critical core", "Customer_Behaviour[City]": "New Jasmine", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Swaziland", "Customer_Behaviour[Timestamp]": 1465388749000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 70203.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 324.0, "Customer_Behaviour[City]_stringindexer_transform": 102.0, "Customer_Behaviour[Country]_stringindexer_transform": 137.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 230.0, "Customer_Behaviour[Ad Topic Line]": "Mandatory dedicated data-warehouse", "Customer_Behaviour[City]": "Lake Brian", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Madagascar", "Customer_Behaviour[Timestamp]": 1456506061000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 56379.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 173.0, "Customer_Behaviour[City]_stringindexer_transform": 271.0, "Customer_Behaviour[Country]_stringindexer_transform": 42.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 202.0, "Customer_Behaviour[Ad Topic Line]": "Re-engineered responsive definition", "Customer_Behaviour[City]": "Lake Kevin", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "American Samoa", "Customer_Behaviour[Timestamp]": 1459022056000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 51015.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 300.0, "Customer_Behaviour[City]_stringindexer_transform": 162.0, "Customer_Behaviour[Country]_stringindexer_transform": 28.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 248.0, "Customer_Behaviour[Ad Topic Line]": "Cloned explicit middleware", "Customer_Behaviour[City]": "East Sheriville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Moldova", "Customer_Behaviour[Timestamp]": 1453917344000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 55479.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 165.0, "Customer_Behaviour[City]_stringindexer_transform": 307.0, "Customer_Behaviour[Country]_stringindexer_transform": 70.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 208.0, "Customer_Behaviour[Ad Topic Line]": "Inverse high-level capability", "Customer_Behaviour[City]": "Leonchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Israel", "Customer_Behaviour[Timestamp]": 1452962430000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 66225.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 352.0, "Customer_Behaviour[City]_stringindexer_transform": 409.0, "Customer_Behaviour[Country]_stringindexer_transform": 58.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 230.0, "Customer_Behaviour[Ad Topic Line]": "Inverse bi-directional knowledge user", "Customer_Behaviour[City]": "Taylorport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Polynesia", "Customer_Behaviour[Timestamp]": 1455545627000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 61270.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 497.0, "Customer_Behaviour[City]_stringindexer_transform": 249.0, "Customer_Behaviour[Country]_stringindexer_transform": 207.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 214.0, "Customer_Behaviour[Ad Topic Line]": "Monitored dynamic instruction set", "Customer_Behaviour[City]": "Munozberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1465262946000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 63976.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 384.0, "Customer_Behaviour[City]_stringindexer_transform": 51.0, "Customer_Behaviour[Country]_stringindexer_transform": 6.0, "Customer_Behaviour[Timestamp]_dayofmonth": 7, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Daily Internet Usage]": 167.0, "Customer_Behaviour[Ad Topic Line]": "Customer-focused full-range neural-net", "Customer_Behaviour[City]": "West Barbara", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bolivia", "Customer_Behaviour[Timestamp]": 1465500747000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 52691.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 40.0, "Customer_Behaviour[City]_stringindexer_transform": 47.0, "Customer_Behaviour[Country]_stringindexer_transform": 133.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 236.0, "Customer_Behaviour[Ad Topic Line]": "User-centric intangible contingency", "Customer_Behaviour[City]": "New Gabriel", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malaysia", "Customer_Behaviour[Timestamp]": 1459502474000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 63966.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 92.0, "Customer_Behaviour[City]_stringindexer_transform": 245.0, "Customer_Behaviour[Country]_stringindexer_transform": 147.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.0, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Daily Internet Usage]": 218.0, "Customer_Behaviour[Ad Topic Line]": "Quality-focused scalable utilization", "Customer_Behaviour[City]": "Lake Matthewland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Niue", "Customer_Behaviour[Timestamp]": 1455926780000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 74180.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 471.0, "Customer_Behaviour[City]_stringindexer_transform": 282.0, "Customer_Behaviour[Country]_stringindexer_transform": 130.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 239.0, "Customer_Behaviour[Ad Topic Line]": "Seamless impactful info-mediaries", "Customer_Behaviour[City]": "Jamesville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Portugal", "Customer_Behaviour[Timestamp]": 1451616730000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 58909.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 345.0, "Customer_Behaviour[City]_stringindexer_transform": 315.0, "Customer_Behaviour[Country]_stringindexer_transform": 150.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 238.0, "Customer_Behaviour[Ad Topic Line]": "Cross-group neutral synergy", "Customer_Behaviour[City]": "West Lucas", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Panama", "Customer_Behaviour[Timestamp]": 1453249575000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 69869.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 135.0, "Customer_Behaviour[City]_stringindexer_transform": 423.0, "Customer_Behaviour[Country]_stringindexer_transform": 188.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 216.0, "Customer_Behaviour[Ad Topic Line]": "Monitored content-based implementation", "Customer_Behaviour[City]": "Lake Jasonchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Finland", "Customer_Behaviour[Timestamp]": 1468866785000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 76408.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 266.0, "Customer_Behaviour[City]_stringindexer_transform": 232.0, "Customer_Behaviour[Country]_stringindexer_transform": 31.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Daily Internet Usage]": 207.0, "Customer_Behaviour[Ad Topic Line]": "Quality-focused zero-defect budgetary management", "Customer_Behaviour[City]": "Pearsonfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Pakistan", "Customer_Behaviour[Timestamp]": 1453524457000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 55015.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 116.0, "Customer_Behaviour[City]_stringindexer_transform": 157.0, "Customer_Behaviour[Country]_stringindexer_transform": 72.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 231.0, "Customer_Behaviour[Ad Topic Line]": "Intuitive fresh-thinking moderator", "Customer_Behaviour[City]": "Sellerstown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ireland", "Customer_Behaviour[Timestamp]": 1456743606000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 51636.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 72.0, "Customer_Behaviour[City]_stringindexer_transform": 426.0, "Customer_Behaviour[Country]_stringindexer_transform": 189.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Daily Internet Usage]": 213.0, "Customer_Behaviour[Ad Topic Line]": "Quality-focused hybrid frame", "Customer_Behaviour[City]": "Carterport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lao People's Democratic Republic", "Customer_Behaviour[Timestamp]": 1455336968000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 65791.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 49.0, "Customer_Behaviour[City]_stringindexer_transform": 87.0, "Customer_Behaviour[Country]_stringindexer_transform": 136.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 213.0, "Customer_Behaviour[Ad Topic Line]": "Business-focused high-level hardware", "Customer_Behaviour[City]": "Greentown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brunei Darussalam", "Customer_Behaviour[Timestamp]": 1457433556000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 68030.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 33.0, "Customer_Behaviour[City]_stringindexer_transform": 316.0, "Customer_Behaviour[Country]_stringindexer_transform": 65.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 223.0, "Customer_Behaviour[Ad Topic Line]": "Managed disintermediate capability", "Customer_Behaviour[City]": "North Lisachester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Holy See (Vatican City State)", "Customer_Behaviour[Timestamp]": 1467630229000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 65826.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 249.0, "Customer_Behaviour[City]_stringindexer_transform": 53.0, "Customer_Behaviour[Country]_stringindexer_transform": 132.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 173.0, "Customer_Behaviour[Ad Topic Line]": "Function-based incremental standardization", "Customer_Behaviour[City]": "North Alexandra", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Myanmar", "Customer_Behaviour[Timestamp]": 1455111995000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 68333.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 126.0, "Customer_Behaviour[City]_stringindexer_transform": 91.0, "Customer_Behaviour[Country]_stringindexer_transform": 48.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 253.0, "Customer_Behaviour[Ad Topic Line]": "Realigned global initiative", "Customer_Behaviour[City]": "Garnerberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United States Virgin Islands", "Customer_Behaviour[Timestamp]": 1463148759000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 51847.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 339.0, "Customer_Behaviour[City]_stringindexer_transform": 348.0, "Customer_Behaviour[Country]_stringindexer_transform": 91.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 228.0, "Customer_Behaviour[Ad Topic Line]": "Business-focused maximized complexity", "Customer_Behaviour[City]": "North Anaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mexico", "Customer_Behaviour[Timestamp]": 1462147316000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 63580.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 420.0, "Customer_Behaviour[City]_stringindexer_transform": 255.0, "Customer_Behaviour[Country]_stringindexer_transform": 24.0, "Customer_Behaviour[Timestamp]_dayofmonth": 2, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 236.0, "Customer_Behaviour[Ad Topic Line]": "Upgradable local migration", "Customer_Behaviour[City]": "Hallfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jamaica", "Customer_Behaviour[Timestamp]": 1458512845000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 62161.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 68.0, "Customer_Behaviour[City]_stringindexer_transform": 420.0, "Customer_Behaviour[Country]_stringindexer_transform": 53.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 250.0, "Customer_Behaviour[Ad Topic Line]": "Future-proofed modular utilization", "Customer_Behaviour[City]": "Kingshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guinea", "Customer_Behaviour[Timestamp]": 1463650212000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 53412.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 348.0, "Customer_Behaviour[City]_stringindexer_transform": 64.0, "Customer_Behaviour[Country]_stringindexer_transform": 79.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 165.0, "Customer_Behaviour[Ad Topic Line]": "Re-engineered impactful software", "Customer_Behaviour[City]": "North Isabellaville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Western Sahara", "Customer_Behaviour[Timestamp]": 1458723151000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 78092.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 425.0, "Customer_Behaviour[City]_stringindexer_transform": 356.0, "Customer_Behaviour[Country]_stringindexer_transform": 36.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.0, "Customer_Behaviour[Age]": 51, "Customer_Behaviour[Daily Internet Usage]": 244.0, "Customer_Behaviour[Ad Topic Line]": "Managed 6thgeneration hierarchy", "Customer_Behaviour[City]": "Reyesfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Barbados", "Customer_Behaviour[Timestamp]": 1466914946000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 46132.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 210.0, "Customer_Behaviour[City]_stringindexer_transform": 8.0, "Customer_Behaviour[Country]_stringindexer_transform": 33.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 212.0, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive transitional protocol", "Customer_Behaviour[City]": "North Stephanieberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Uruguay", "Customer_Behaviour[Timestamp]": 1458462170000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 70377.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 67.0, "Customer_Behaviour[City]_stringindexer_transform": 281.0, "Customer_Behaviour[Country]_stringindexer_transform": 129.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Daily Internet Usage]": 181.0, "Customer_Behaviour[Ad Topic Line]": "Public-key asynchronous matrix", "Customer_Behaviour[City]": "Sherrishire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brazil", "Customer_Behaviour[Timestamp]": 1458882327000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 56457.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 483.0, "Customer_Behaviour[City]_stringindexer_transform": 367.0, "Customer_Behaviour[Country]_stringindexer_transform": 32.0, "Customer_Behaviour[Timestamp]_dayofmonth": 25, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 61.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 218.0, "Customer_Behaviour[Ad Topic Line]": "Grass-roots systematic hardware", "Customer_Behaviour[City]": "Port Daniel", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1455434137000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67279.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 8.0, "Customer_Behaviour[City]_stringindexer_transform": 140.0, "Customer_Behaviour[Country]_stringindexer_transform": 4.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 236.0, "Customer_Behaviour[Ad Topic Line]": "User-centric composite contingency", "Customer_Behaviour[City]": "Brownview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Myanmar", "Customer_Behaviour[Timestamp]": 1458952322000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 54773.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 287.0, "Customer_Behaviour[City]_stringindexer_transform": 263.0, "Customer_Behaviour[Country]_stringindexer_transform": 48.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 194.0, "Customer_Behaviour[Ad Topic Line]": "Ergonomic neutral portal", "Customer_Behaviour[City]": "New Maria", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1457389935000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 72042.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 229.0, "Customer_Behaviour[City]_stringindexer_transform": 180.0, "Customer_Behaviour[Country]_stringindexer_transform": 2.0, "Customer_Behaviour[Timestamp]_dayofmonth": 7, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 211.0, "Customer_Behaviour[Ad Topic Line]": "Reverse-engineered maximized focus group", "Customer_Behaviour[City]": "Calebberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Georgia", "Customer_Behaviour[Timestamp]": 1466227053000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67526.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 371.0, "Customer_Behaviour[City]_stringindexer_transform": 466.0, "Customer_Behaviour[Country]_stringindexer_transform": 100.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 211.0, "Customer_Behaviour[Ad Topic Line]": "Public-key intangible Graphical User Interface", "Customer_Behaviour[City]": "Gomezport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guam", "Customer_Behaviour[Timestamp]": 1451636826000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 63497.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 32.0, "Customer_Behaviour[City]_stringindexer_transform": 93.0, "Customer_Behaviour[Country]_stringindexer_transform": 148.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.0, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Daily Internet Usage]": 235.0, "Customer_Behaviour[Ad Topic Line]": "Advanced local task-force", "Customer_Behaviour[City]": "Shaneland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tanzania", "Customer_Behaviour[Timestamp]": 1459994258000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 60879.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 305.0, "Customer_Behaviour[City]_stringindexer_transform": 305.0, "Customer_Behaviour[Country]_stringindexer_transform": 199.0, "Customer_Behaviour[Timestamp]_dayofmonth": 7, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 236.0, "Customer_Behaviour[Ad Topic Line]": "Profound well-modulated array", "Customer_Behaviour[City]": "East Aaron", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Indonesia", "Customer_Behaviour[Timestamp]": 1456696934000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 61467.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 394.0, "Customer_Behaviour[City]_stringindexer_transform": 397.0, "Customer_Behaviour[Country]_stringindexer_transform": 139.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 224.0, "Customer_Behaviour[Ad Topic Line]": "Multi-layered fresh-thinking neural-net", "Customer_Behaviour[City]": "East Michaelland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belize", "Customer_Behaviour[Timestamp]": 1453350643000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 71222.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 416.0, "Customer_Behaviour[City]_stringindexer_transform": 112.0, "Customer_Behaviour[Country]_stringindexer_transform": 29.0, "Customer_Behaviour[Timestamp]_dayofmonth": 21, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 223.0, "Customer_Behaviour[Ad Topic Line]": "Synchronized grid-enabled moratorium", "Customer_Behaviour[City]": "South Patrickfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1469095310000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 73474.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 13.0, "Customer_Behaviour[City]_stringindexer_transform": 185.0, "Customer_Behaviour[Country]_stringindexer_transform": 14.0, "Customer_Behaviour[Timestamp]_dayofmonth": 21, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 226.0, "Customer_Behaviour[Ad Topic Line]": "Total grid-enabled application", "Customer_Behaviour[City]": "Charlesbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Comoros", "Customer_Behaviour[Timestamp]": 1468979793000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 58576.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 59.0, "Customer_Behaviour[City]_stringindexer_transform": 41.0, "Customer_Behaviour[Country]_stringindexer_transform": 201.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.0, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Daily Internet Usage]": 166.0, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented uniform knowledgebase", "Customer_Behaviour[City]": "West Robertside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malawi", "Customer_Behaviour[Timestamp]": 1464277212000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 77988.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 336.0, "Customer_Behaviour[City]_stringindexer_transform": 333.0, "Customer_Behaviour[Country]_stringindexer_transform": 69.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 238.0, "Customer_Behaviour[Ad Topic Line]": "Business-focused holistic benchmark", "Customer_Behaviour[City]": "Port Anthony", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Albania", "Customer_Behaviour[Timestamp]": 1457593651000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 55130.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 150.0, "Customer_Behaviour[City]_stringindexer_transform": 321.0, "Customer_Behaviour[Country]_stringindexer_transform": 30.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 249.0, "Customer_Behaviour[Ad Topic Line]": "Public-key solution-oriented focus group", "Customer_Behaviour[City]": "Austinland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1451863286000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 63551.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 380.0, "Customer_Behaviour[City]_stringindexer_transform": 219.0, "Customer_Behaviour[Country]_stringindexer_transform": 6.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 233.0, "Customer_Behaviour[Ad Topic Line]": "User-friendly content-based customer loyalty", "Customer_Behaviour[City]": "South Jaimeview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkmenistan", "Customer_Behaviour[Timestamp]": 1451727011000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 63394.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 2.0, "Customer_Behaviour[City]_stringindexer_transform": 243.0, "Customer_Behaviour[Country]_stringindexer_transform": 76.0, "Customer_Behaviour[Timestamp]_dayofmonth": 2, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 231.0, "Customer_Behaviour[Ad Topic Line]": "Reactive national success", "Customer_Behaviour[City]": "South Meredithmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Seychelles", "Customer_Behaviour[Timestamp]": 1452201710000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 73884.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 4.0, "Customer_Behaviour[City]_stringindexer_transform": 452.0, "Customer_Behaviour[Country]_stringindexer_transform": 57.0, "Customer_Behaviour[Timestamp]_dayofmonth": 7, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 252.0, "Customer_Behaviour[Ad Topic Line]": "Networked regional Local Area Network", "Customer_Behaviour[City]": "Villanuevaton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1452027522000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 57844.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 299.0, "Customer_Behaviour[City]_stringindexer_transform": 419.0, "Customer_Behaviour[Country]_stringindexer_transform": 11.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Daily Internet Usage]": 238.0, "Customer_Behaviour[Ad Topic Line]": "Assimilated homogeneous service-desk", "Customer_Behaviour[City]": "North Garyhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Nepal", "Customer_Behaviour[Timestamp]": 1466194707000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 62792.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 261.0, "Customer_Behaviour[City]_stringindexer_transform": 310.0, "Customer_Behaviour[Country]_stringindexer_transform": 204.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.0, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Daily Internet Usage]": 193.0, "Customer_Behaviour[Ad Topic Line]": "Monitored local Internet solution", "Customer_Behaviour[City]": "Richardsonmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sri Lanka", "Customer_Behaviour[Timestamp]": 1465887729000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 50337.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 473.0, "Customer_Behaviour[City]_stringindexer_transform": 298.0, "Customer_Behaviour[Country]_stringindexer_transform": 103.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 204.0, "Customer_Behaviour[Ad Topic Line]": "Customizable methodical Graphical User Interface", "Customer_Behaviour[City]": "New Dawnland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Honduras", "Customer_Behaviour[Timestamp]": 1467783292000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67686.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 445.0, "Customer_Behaviour[City]_stringindexer_transform": 121.0, "Customer_Behaviour[Country]_stringindexer_transform": 134.0, "Customer_Behaviour[Timestamp]_dayofmonth": 6, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 203.0, "Customer_Behaviour[Ad Topic Line]": "Front-line systemic capability", "Customer_Behaviour[City]": "Tranland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Pakistan", "Customer_Behaviour[Timestamp]": 1456581104000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 68348.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 463.0, "Customer_Behaviour[City]_stringindexer_transform": 254.0, "Customer_Behaviour[Country]_stringindexer_transform": 72.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 242.0, "Customer_Behaviour[Ad Topic Line]": "Programmable high-level benchmark", "Customer_Behaviour[City]": "Anthonyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cameroon", "Customer_Behaviour[Timestamp]": 1464111778000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 66176.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 193.0, "Customer_Behaviour[City]_stringindexer_transform": 240.0, "Customer_Behaviour[Country]_stringindexer_transform": 67.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 259.0, "Customer_Behaviour[Ad Topic Line]": "Grass-roots empowering paradigm", "Customer_Behaviour[City]": "Christopherchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guinea-Bissau", "Customer_Behaviour[Timestamp]": 1462030042000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 61428.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 203.0, "Customer_Behaviour[City]_stringindexer_transform": 295.0, "Customer_Behaviour[Country]_stringindexer_transform": 187.0, "Customer_Behaviour[Timestamp]_dayofmonth": 30, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.0, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Daily Internet Usage]": 219.0, "Customer_Behaviour[Ad Topic Line]": "Switchable secondary ability", "Customer_Behaviour[City]": "Alexisland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bahamas", "Customer_Behaviour[Timestamp]": 1459354559000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 57518.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 89.0, "Customer_Behaviour[City]_stringindexer_transform": 360.0, "Customer_Behaviour[Country]_stringindexer_transform": 78.0, "Customer_Behaviour[Timestamp]_dayofmonth": 30, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 224.0, "Customer_Behaviour[Ad Topic Line]": "Profit-focused systemic support", "Customer_Behaviour[City]": "Johnsonfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1463440866000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 70889.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 231.0, "Customer_Behaviour[City]_stringindexer_transform": 302.0, "Customer_Behaviour[Country]_stringindexer_transform": 3.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.0, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Daily Internet Usage]": 225.0, "Customer_Behaviour[Ad Topic Line]": "Phased content-based middleware", "Customer_Behaviour[City]": "Port Davidland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Wallis and Futuna", "Customer_Behaviour[Timestamp]": 1469254731000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 40345.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 52.0, "Customer_Behaviour[City]_stringindexer_transform": 71.0, "Customer_Behaviour[Country]_stringindexer_transform": 141.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 219.0, "Customer_Behaviour[Ad Topic Line]": "Synergized well-modulated Graphical User Interface", "Customer_Behaviour[City]": "Lake Michael", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mongolia", "Customer_Behaviour[Timestamp]": 1455568865000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 33239.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 27.0, "Customer_Behaviour[City]_stringindexer_transform": 106.0, "Customer_Behaviour[Country]_stringindexer_transform": 110.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 235.0, "Customer_Behaviour[Ad Topic Line]": "Implemented bottom-line implementation", "Customer_Behaviour[City]": "West Michaelshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Denmark", "Customer_Behaviour[Timestamp]": 1453513348000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 68033.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 310.0, "Customer_Behaviour[City]_stringindexer_transform": 280.0, "Customer_Behaviour[Country]_stringindexer_transform": 99.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.0, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Daily Internet Usage]": 182.0, "Customer_Behaviour[Ad Topic Line]": "Monitored context-sensitive initiative", "Customer_Behaviour[City]": "Port Calvintown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Russian Federation", "Customer_Behaviour[Timestamp]": 1456449524000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 38427.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 175.0, "Customer_Behaviour[City]_stringindexer_transform": 173.0, "Customer_Behaviour[Country]_stringindexer_transform": 112.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Daily Internet Usage]": 253.0, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive client-server open system", "Customer_Behaviour[City]": "Parkerhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brazil", "Customer_Behaviour[Timestamp]": 1452478034000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 53185.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 28.0, "Customer_Behaviour[City]_stringindexer_transform": 276.0, "Customer_Behaviour[Country]_stringindexer_transform": 32.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 199.0, "Customer_Behaviour[Ad Topic Line]": "Synergistic non-volatile analyzer", "Customer_Behaviour[City]": "Cassandratown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mauritius", "Customer_Behaviour[Timestamp]": 1457218931000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 71881.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 107.0, "Customer_Behaviour[City]_stringindexer_transform": 75.0, "Customer_Behaviour[Country]_stringindexer_transform": 107.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 225.0, "Customer_Behaviour[Ad Topic Line]": "Object-based optimal solution", "Customer_Behaviour[City]": "West Dannyberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Djibouti", "Customer_Behaviour[Timestamp]": 1452116602000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 47139.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 194.0, "Customer_Behaviour[City]_stringindexer_transform": 476.0, "Customer_Behaviour[Country]_stringindexer_transform": 116.0, "Customer_Behaviour[Timestamp]_dayofmonth": 6, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 175.0, "Customer_Behaviour[Ad Topic Line]": "Profound dynamic attitude", "Customer_Behaviour[City]": "East Debraborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Syrian Arab Republic", "Customer_Behaviour[Timestamp]": 1455767916000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 68877.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 460.0, "Customer_Behaviour[City]_stringindexer_transform": 123.0, "Customer_Behaviour[Country]_stringindexer_transform": 56.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 86.0, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Daily Internet Usage]": 233.0, "Customer_Behaviour[Ad Topic Line]": "Networked responsive application", "Customer_Behaviour[City]": "Colemanshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greece", "Customer_Behaviour[Timestamp]": 1467163161000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 46500.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 479.0, "Customer_Behaviour[City]_stringindexer_transform": 251.0, "Customer_Behaviour[Country]_stringindexer_transform": 19.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.0, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Daily Internet Usage]": 201.0, "Customer_Behaviour[Ad Topic Line]": "Customer-focused impactful success", "Customer_Behaviour[City]": "Karenmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lao People's Democratic Republic", "Customer_Behaviour[Timestamp]": 1459844325000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 69805.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 424.0, "Customer_Behaviour[City]_stringindexer_transform": 168.0, "Customer_Behaviour[Country]_stringindexer_transform": 136.0, "Customer_Behaviour[Timestamp]_dayofmonth": 5, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 215.0, "Customer_Behaviour[Ad Topic Line]": "Enhanced regional conglomeration", "Customer_Behaviour[City]": "New Jessicaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Vietnam", "Customer_Behaviour[Timestamp]": 1452820805000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 66412.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 64.0, "Customer_Behaviour[City]_stringindexer_transform": 330.0, "Customer_Behaviour[Country]_stringindexer_transform": 68.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 235.0, "Customer_Behaviour[Ad Topic Line]": "Customizable value-added project", "Customer_Behaviour[City]": "Luisfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Monaco", "Customer_Behaviour[Timestamp]": 1459804993000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 58342.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 140.0, "Customer_Behaviour[City]_stringindexer_transform": 446.0, "Customer_Behaviour[Country]_stringindexer_transform": 92.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 201.0, "Customer_Behaviour[Ad Topic Line]": "Switchable multi-state success", "Customer_Behaviour[City]": "West Sharon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Singapore", "Customer_Behaviour[Timestamp]": 1463281850000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 64188.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 406.0, "Customer_Behaviour[City]_stringindexer_transform": 50.0, "Customer_Behaviour[Country]_stringindexer_transform": 37.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 89.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 210.0, "Customer_Behaviour[Ad Topic Line]": "Fundamental clear-thinking knowledgebase", "Customer_Behaviour[City]": "Lake Cynthia", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Reunion", "Customer_Behaviour[Timestamp]": 1468929958000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 44078.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 379.0, "Customer_Behaviour[City]_stringindexer_transform": 22.0, "Customer_Behaviour[Country]_stringindexer_transform": 193.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 210.0, "Customer_Behaviour[Ad Topic Line]": "Front-line incremental access", "Customer_Behaviour[City]": "Lake Jacob", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gabon", "Customer_Behaviour[Timestamp]": 1465532517000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 65620.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 55.0, "Customer_Behaviour[City]_stringindexer_transform": 327.0, "Customer_Behaviour[Country]_stringindexer_transform": 17.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 153.0, "Customer_Behaviour[Ad Topic Line]": "Digitized interactive initiative", "Customer_Behaviour[City]": "Meyerchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkmenistan", "Customer_Behaviour[Timestamp]": 1458374458000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 51816.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 144.0, "Customer_Behaviour[City]_stringindexer_transform": 160.0, "Customer_Behaviour[Country]_stringindexer_transform": 76.0, "Customer_Behaviour[Timestamp]_dayofmonth": 19, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 192.0, "Customer_Behaviour[Ad Topic Line]": "Quality-focused 5thgeneration orchestration", "Customer_Behaviour[City]": "Wintersfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ecuador", "Customer_Behaviour[Timestamp]": 1457102018000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67990.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 462.0, "Customer_Behaviour[City]_stringindexer_transform": 79.0, "Customer_Behaviour[Country]_stringindexer_transform": 34.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 230.0, "Customer_Behaviour[Ad Topic Line]": "Configurable mission-critical algorithm", "Customer_Behaviour[City]": "East Carlos", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jamaica", "Customer_Behaviour[Timestamp]": 1469185510000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 70701.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 82.0, "Customer_Behaviour[City]_stringindexer_transform": 485.0, "Customer_Behaviour[Country]_stringindexer_transform": 53.0, "Customer_Behaviour[Timestamp]_dayofmonth": 22, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 197.0, "Customer_Behaviour[Ad Topic Line]": "Reduced holistic help-desk", "Customer_Behaviour[City]": "Blairville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1455191426000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 60805.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 44.0, "Customer_Behaviour[City]_stringindexer_transform": 181.0, "Customer_Behaviour[Country]_stringindexer_transform": 7.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.0, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Daily Internet Usage]": 244.0, "Customer_Behaviour[Ad Topic Line]": "Organic 3rdgeneration encryption", "Customer_Behaviour[City]": "Mosleyburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Vanuatu", "Customer_Behaviour[Timestamp]": 1455449768000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67132.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 177.0, "Customer_Behaviour[City]_stringindexer_transform": 339.0, "Customer_Behaviour[Country]_stringindexer_transform": 153.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Daily Internet Usage]": 214.0, "Customer_Behaviour[Ad Topic Line]": "Monitored intermediate circuit", "Customer_Behaviour[City]": "West Wendyland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greenland", "Customer_Behaviour[Timestamp]": 1468810279000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 55195.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 47.0, "Customer_Behaviour[City]_stringindexer_transform": 223.0, "Customer_Behaviour[Country]_stringindexer_transform": 35.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 86.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 189.0, "Customer_Behaviour[Ad Topic Line]": "Object-based leadingedge complexity", "Customer_Behaviour[City]": "Lawrenceborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Syrian Arab Republic", "Customer_Behaviour[Timestamp]": 1455092473000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 48679.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 34.0, "Customer_Behaviour[City]_stringindexer_transform": 355.0, "Customer_Behaviour[Country]_stringindexer_transform": 56.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 233.0, "Customer_Behaviour[Ad Topic Line]": "Digitized zero-defect implementation", "Customer_Behaviour[City]": "Kennethview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Helena", "Customer_Behaviour[Timestamp]": 1451889435000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 63109.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 86.0, "Customer_Behaviour[City]_stringindexer_transform": 68.0, "Customer_Behaviour[Country]_stringindexer_transform": 84.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 208.0, "Customer_Behaviour[Ad Topic Line]": "Configurable impactful capacity", "Customer_Behaviour[City]": "Pamelamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ukraine", "Customer_Behaviour[Timestamp]": 1456515354000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 66198.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 196.0, "Customer_Behaviour[City]_stringindexer_transform": 422.0, "Customer_Behaviour[Country]_stringindexer_transform": 27.0, "Customer_Behaviour[Timestamp]_dayofmonth": 26, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 219.0, "Customer_Behaviour[Ad Topic Line]": "Distributed leadingedge orchestration", "Customer_Behaviour[City]": "Lesliefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malta", "Customer_Behaviour[Timestamp]": 1468420214000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 73174.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 85.0, "Customer_Behaviour[City]_stringindexer_transform": 387.0, "Customer_Behaviour[Country]_stringindexer_transform": 101.0, "Customer_Behaviour[Timestamp]_dayofmonth": 13, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 225.0, "Customer_Behaviour[Ad Topic Line]": "Multi-channeled 3rdgeneration model", "Customer_Behaviour[City]": "Garciatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mauritius", "Customer_Behaviour[Timestamp]": 1465627675000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 66773.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 134.0, "Customer_Behaviour[City]_stringindexer_transform": 48.0, "Customer_Behaviour[Country]_stringindexer_transform": 107.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 192.0, "Customer_Behaviour[Ad Topic Line]": "Devolved exuding Local Area Network", "Customer_Behaviour[City]": "Evansfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Slovakia (Slovak Republic)", "Customer_Behaviour[Timestamp]": 1462291370000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 59797.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 453.0, "Customer_Behaviour[City]_stringindexer_transform": 486.0, "Customer_Behaviour[Country]_stringindexer_transform": 88.0, "Customer_Behaviour[Timestamp]_dayofmonth": 3, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 246.0, "Customer_Behaviour[Ad Topic Line]": "Phased hybrid intranet", "Customer_Behaviour[City]": "Barbershire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Portugal", "Customer_Behaviour[Timestamp]": 1457690483000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 62109.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 6.0, "Customer_Behaviour[City]_stringindexer_transform": 247.0, "Customer_Behaviour[Country]_stringindexer_transform": 150.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 214.0, "Customer_Behaviour[Ad Topic Line]": "Inverse national core", "Customer_Behaviour[City]": "Turnerville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Norfolk Island", "Customer_Behaviour[Timestamp]": 1458674087000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 73882.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 106.0, "Customer_Behaviour[City]_stringindexer_transform": 57.0, "Customer_Behaviour[Country]_stringindexer_transform": 44.0, "Customer_Behaviour[Timestamp]_dayofmonth": 22, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 234.0, "Customer_Behaviour[Ad Topic Line]": "Quality-focused zero tolerance matrices", "Customer_Behaviour[City]": "West Zacharyborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ukraine", "Customer_Behaviour[Timestamp]": 1466277014000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 51409.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 156.0, "Customer_Behaviour[City]_stringindexer_transform": 279.0, "Customer_Behaviour[Country]_stringindexer_transform": 27.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.0, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Daily Internet Usage]": 194.0, "Customer_Behaviour[Ad Topic Line]": "Decentralized 24hour approach", "Customer_Behaviour[City]": "Robinsonland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Finland", "Customer_Behaviour[Timestamp]": 1451880035000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 70185.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 312.0, "Customer_Behaviour[City]_stringindexer_transform": 344.0, "Customer_Behaviour[Country]_stringindexer_transform": 31.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 222.0, "Customer_Behaviour[Ad Topic Line]": "Distributed bifurcated challenge", "Customer_Behaviour[City]": "Haleberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1451946445000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 53223.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 45.0, "Customer_Behaviour[City]_stringindexer_transform": 381.0, "Customer_Behaviour[Country]_stringindexer_transform": 13.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 207.0, "Customer_Behaviour[Ad Topic Line]": "Open-architected system-worthy ability", "Customer_Behaviour[City]": "Estradafurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tonga", "Customer_Behaviour[Timestamp]": 1467174190000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 63664.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 138.0, "Customer_Behaviour[City]_stringindexer_transform": 221.0, "Customer_Behaviour[Country]_stringindexer_transform": 73.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 190.0, "Customer_Behaviour[Ad Topic Line]": "Centralized client-driven workforce", "Customer_Behaviour[City]": "Port Juan", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kyrgyz Republic", "Customer_Behaviour[Timestamp]": 1466205578000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 71727.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 0.0, "Customer_Behaviour[City]_stringindexer_transform": 0.0, "Customer_Behaviour[Country]_stringindexer_transform": 83.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.0, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Daily Internet Usage]": 164.0, "Customer_Behaviour[Ad Topic Line]": "Proactive interactive service-desk", "Customer_Behaviour[City]": "Lake Hailey", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sweden", "Customer_Behaviour[Timestamp]": 1466410929000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 76984.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 472.0, "Customer_Behaviour[City]_stringindexer_transform": 442.0, "Customer_Behaviour[Country]_stringindexer_transform": 61.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 190.0, "Customer_Behaviour[Ad Topic Line]": "Assimilated encompassing portal", "Customer_Behaviour[City]": "Meaganfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Italy", "Customer_Behaviour[Timestamp]": 1460784273000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 72154.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 182.0, "Customer_Behaviour[City]_stringindexer_transform": 384.0, "Customer_Behaviour[Country]_stringindexer_transform": 131.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 179.0, "Customer_Behaviour[Ad Topic Line]": "Cross-group global orchestration", "Customer_Behaviour[City]": "North Monicaville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belarus", "Customer_Behaviour[Timestamp]": 1453007231000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 65704.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 232.0, "Customer_Behaviour[City]_stringindexer_transform": 259.0, "Customer_Behaviour[Country]_stringindexer_transform": 105.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 212.0, "Customer_Behaviour[Ad Topic Line]": "Down-sized bandwidth-monitored core", "Customer_Behaviour[City]": "Mullenside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Georgia and the South Sandwich Islands", "Customer_Behaviour[Timestamp]": 1468017010000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 72948.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 387.0, "Customer_Behaviour[City]_stringindexer_transform": 427.0, "Customer_Behaviour[Country]_stringindexer_transform": 190.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 229.0, "Customer_Behaviour[Ad Topic Line]": "Inverse zero-defect capability", "Customer_Behaviour[City]": "Sanchezland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greenland", "Customer_Behaviour[Timestamp]": 1459108211000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 71157.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 207.0, "Customer_Behaviour[City]_stringindexer_transform": 88.0, "Customer_Behaviour[Country]_stringindexer_transform": 35.0, "Customer_Behaviour[Timestamp]_dayofmonth": 27, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 190.0, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered real-time implementation", "Customer_Behaviour[City]": "Rogerland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1461937099000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 74159.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 141.0, "Customer_Behaviour[City]_stringindexer_transform": 225.0, "Customer_Behaviour[Country]_stringindexer_transform": 4.0, "Customer_Behaviour[Timestamp]_dayofmonth": 29, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 224.0, "Customer_Behaviour[Ad Topic Line]": "Assimilated stable encryption", "Customer_Behaviour[City]": "Newmanberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "France", "Customer_Behaviour[Timestamp]": 1466470367000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 69758.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 335.0, "Customer_Behaviour[City]_stringindexer_transform": 487.0, "Customer_Behaviour[Country]_stringindexer_transform": 38.0, "Customer_Behaviour[Timestamp]_dayofmonth": 21, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 213.0, "Customer_Behaviour[Ad Topic Line]": "Cloned optimal leverage", "Customer_Behaviour[City]": "Cannonbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bulgaria", "Customer_Behaviour[Timestamp]": 1453056355000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 58363.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 436.0, "Customer_Behaviour[City]_stringindexer_transform": 340.0, "Customer_Behaviour[Country]_stringindexer_transform": 191.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 225.0, "Customer_Behaviour[Ad Topic Line]": "De-engineered attitude-oriented projection", "Customer_Behaviour[City]": "Lisamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bolivia", "Customer_Behaviour[Timestamp]": 1465597270000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 69438.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 414.0, "Customer_Behaviour[City]_stringindexer_transform": 166.0, "Customer_Behaviour[Country]_stringindexer_transform": 133.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Daily Internet Usage]": 219.0, "Customer_Behaviour[Ad Topic Line]": "Extended grid-enabled hierarchy", "Customer_Behaviour[City]": "Port Brittanyville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "British Virgin Islands", "Customer_Behaviour[Timestamp]": 1459206084000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 68016.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 281.0, "Customer_Behaviour[City]_stringindexer_transform": 378.0, "Customer_Behaviour[Country]_stringindexer_transform": 81.0, "Customer_Behaviour[Timestamp]_dayofmonth": 28, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 230.0, "Customer_Behaviour[Ad Topic Line]": "Mandatory coherent groupware", "Customer_Behaviour[City]": "Carterton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "India", "Customer_Behaviour[Timestamp]": 1465031609000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 56909.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 117.0, "Customer_Behaviour[City]_stringindexer_transform": 13.0, "Customer_Behaviour[Country]_stringindexer_transform": 178.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 195.0, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered systematic info-mediaries", "Customer_Behaviour[City]": "South Dianeshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iran", "Customer_Behaviour[Timestamp]": 1460669869000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 57032.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 350.0, "Customer_Behaviour[City]_stringindexer_transform": 29.0, "Customer_Behaviour[Country]_stringindexer_transform": 25.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 236.0, "Customer_Behaviour[Ad Topic Line]": "Centralized value-added hierarchy", "Customer_Behaviour[City]": "Villanuevastad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Namibia", "Customer_Behaviour[Timestamp]": 1463508406000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 65756.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 367.0, "Customer_Behaviour[City]_stringindexer_transform": 220.0, "Customer_Behaviour[Country]_stringindexer_transform": 94.0, "Customer_Behaviour[Timestamp]_dayofmonth": 17, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 203.0, "Customer_Behaviour[Ad Topic Line]": "Front-line even-keeled website", "Customer_Behaviour[City]": "Lake Lisa", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cayman Islands", "Customer_Behaviour[Timestamp]": 1453257096000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 69874.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 454.0, "Customer_Behaviour[City]_stringindexer_transform": 370.0, "Customer_Behaviour[Country]_stringindexer_transform": 77.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 232.0, "Customer_Behaviour[Ad Topic Line]": "Persistent fault-tolerant service-desk", "Customer_Behaviour[City]": "Valerieland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Swaziland", "Customer_Behaviour[Timestamp]": 1469051622000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 50038.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 388.0, "Customer_Behaviour[City]_stringindexer_transform": 38.0, "Customer_Behaviour[Country]_stringindexer_transform": 137.0, "Customer_Behaviour[Timestamp]_dayofmonth": 20, "Customer_Behaviour[Timestamp]_month": 7, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 212.0, "Customer_Behaviour[Ad Topic Line]": "Up-sized maximized model", "Customer_Behaviour[City]": "Patrickmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Martin", "Customer_Behaviour[Timestamp]": 1465032327000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67432.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 413.0, "Customer_Behaviour[City]_stringindexer_transform": 147.0, "Customer_Behaviour[Country]_stringindexer_transform": 146.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.0, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Daily Internet Usage]": 194.0, "Customer_Behaviour[Ad Topic Line]": "Organized global flexibility", "Customer_Behaviour[City]": "Lake Deannaborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Rwanda", "Customer_Behaviour[Timestamp]": 1461311313000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 73392.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 488.0, "Customer_Behaviour[City]_stringindexer_transform": 299.0, "Customer_Behaviour[Country]_stringindexer_transform": 21.0, "Customer_Behaviour[Timestamp]_dayofmonth": 22, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 232.0, "Customer_Behaviour[Ad Topic Line]": "Balanced executive definition", "Customer_Behaviour[City]": "Davieshaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gabon", "Customer_Behaviour[Timestamp]": 1460795768000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 56735.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 470.0, "Customer_Behaviour[City]_stringindexer_transform": 320.0, "Customer_Behaviour[Country]_stringindexer_transform": 17.0, "Customer_Behaviour[Timestamp]_dayofmonth": 16, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.0, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Daily Internet Usage]": 226.0, "Customer_Behaviour[Ad Topic Line]": "Focused coherent success", "Customer_Behaviour[City]": "North Kennethside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Poland", "Customer_Behaviour[Timestamp]": 1466814803000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 67033.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 136.0, "Customer_Behaviour[City]_stringindexer_transform": 172.0, "Customer_Behaviour[Country]_stringindexer_transform": 41.0, "Customer_Behaviour[Timestamp]_dayofmonth": 25, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 192.0, "Customer_Behaviour[Ad Topic Line]": "Robust context-sensitive neural-net", "Customer_Behaviour[City]": "Shelbyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1458710855000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 68717.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 338.0, "Customer_Behaviour[City]_stringindexer_transform": 216.0, "Customer_Behaviour[Country]_stringindexer_transform": 15.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 225.0, "Customer_Behaviour[Ad Topic Line]": "Fundamental tangible moratorium", "Customer_Behaviour[City]": "New Taylorburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Austria", "Customer_Behaviour[Timestamp]": 1456249066000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 66861.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 215.0, "Customer_Behaviour[City]_stringindexer_transform": 28.0, "Customer_Behaviour[Country]_stringindexer_transform": 123.0, "Customer_Behaviour[Timestamp]_dayofmonth": 23, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.0, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Daily Internet Usage]": 199.0, "Customer_Behaviour[Ad Topic Line]": "Sharable value-added solution", "Customer_Behaviour[City]": "Deannaville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Luxembourg", "Customer_Behaviour[Timestamp]": 1459769991000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 54106.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 319.0, "Customer_Behaviour[City]_stringindexer_transform": 175.0, "Customer_Behaviour[Country]_stringindexer_transform": 18.0, "Customer_Behaviour[Timestamp]_dayofmonth": 4, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 169.0, "Customer_Behaviour[Ad Topic Line]": "Assimilated discrete strategy", "Customer_Behaviour[City]": "East Johnport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Slovakia (Slovak Republic)", "Customer_Behaviour[Timestamp]": 1454112337000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 58638.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 58.0, "Customer_Behaviour[City]_stringindexer_transform": 178.0, "Customer_Behaviour[Country]_stringindexer_transform": 88.0, "Customer_Behaviour[Timestamp]_dayofmonth": 30, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.0, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Daily Internet Usage]": 220.0, "Customer_Behaviour[Ad Topic Line]": "Phased fault-tolerant definition", "Customer_Behaviour[City]": "Wagnerchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greenland", "Customer_Behaviour[Timestamp]": 1455553129000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 70324.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 290.0, "Customer_Behaviour[City]_stringindexer_transform": 260.0, "Customer_Behaviour[Country]_stringindexer_transform": 35.0, "Customer_Behaviour[Timestamp]_dayofmonth": 15, "Customer_Behaviour[Timestamp]_month": 2, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Daily Internet Usage]": 165.0, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive next generation Internet solution", "Customer_Behaviour[City]": "Daisymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Moldova", "Customer_Behaviour[Timestamp]": 1457413977000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 52416.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 20.0, "Customer_Behaviour[City]_stringindexer_transform": 382.0, "Customer_Behaviour[Country]_stringindexer_transform": 70.0, "Customer_Behaviour[Timestamp]_dayofmonth": 8, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 90.0, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Daily Internet Usage]": 216.0, "Customer_Behaviour[Ad Topic Line]": "Decentralized methodical capability", "Customer_Behaviour[City]": "Lake Joseph", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Togo", "Customer_Behaviour[Timestamp]": 1457690312000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 45945.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 498.0, "Customer_Behaviour[City]_stringindexer_transform": 199.0, "Customer_Behaviour[Country]_stringindexer_transform": 95.0, "Customer_Behaviour[Timestamp]_dayofmonth": 11, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.0, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Daily Internet Usage]": 222.0, "Customer_Behaviour[Ad Topic Line]": "Stand-alone logistical service-desk", "Customer_Behaviour[City]": "North Brandon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Nicaragua", "Customer_Behaviour[Timestamp]": 1460434962000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 65882.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 362.0, "Customer_Behaviour[City]_stringindexer_transform": 49.0, "Customer_Behaviour[Country]_stringindexer_transform": 171.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Daily Internet Usage]": 235.0, "Customer_Behaviour[Ad Topic Line]": "Open-architected intangible strategy", "Customer_Behaviour[City]": "Wademouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Canada", "Customer_Behaviour[Timestamp]": 1462144913000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 55677.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 356.0, "Customer_Behaviour[City]_stringindexer_transform": 109.0, "Customer_Behaviour[Country]_stringindexer_transform": 54.0, "Customer_Behaviour[Timestamp]_dayofmonth": 1, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.0, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Daily Internet Usage]": 203.0, "Customer_Behaviour[Ad Topic Line]": "Diverse directional hardware", "Customer_Behaviour[City]": "North Raymond", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1458841711000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 75560.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 112.0, "Customer_Behaviour[City]_stringindexer_transform": 472.0, "Customer_Behaviour[Country]_stringindexer_transform": 3.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.0, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Daily Internet Usage]": 167.0, "Customer_Behaviour[Ad Topic Line]": "Total bi-directional success", "Customer_Behaviour[City]": "East Troyhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Yemen", "Customer_Behaviour[Timestamp]": 1457525408000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 72330.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 170.0, "Customer_Behaviour[City]_stringindexer_transform": 90.0, "Customer_Behaviour[Country]_stringindexer_transform": 59.0, "Customer_Behaviour[Timestamp]_dayofmonth": 9, "Customer_Behaviour[Timestamp]_month": 3, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.0, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Daily Internet Usage]": 249.0, "Customer_Behaviour[Ad Topic Line]": "Progressive 24/7 definition", "Customer_Behaviour[City]": "Lake Jose", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Barbados", "Customer_Behaviour[Timestamp]": 1465278076000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 52520.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 30.0, "Customer_Behaviour[City]_stringindexer_transform": 366.0, "Customer_Behaviour[Country]_stringindexer_transform": 33.0, "Customer_Behaviour[Timestamp]_dayofmonth": 7, "Customer_Behaviour[Timestamp]_month": 6, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.0, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Daily Internet Usage]": 217.0, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive next generation strategy", "Customer_Behaviour[City]": "Ashleymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "American Samoa", "Customer_Behaviour[Timestamp]": 1464737520000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 59422.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 234.0, "Customer_Behaviour[City]_stringindexer_transform": 78.0, "Customer_Behaviour[Country]_stringindexer_transform": 28.0, "Customer_Behaviour[Timestamp]_dayofmonth": 31, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 236.0, "Customer_Behaviour[Ad Topic Line]": "Open-source holistic productivity", "Customer_Behaviour[City]": "Lake Danielle", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1452457101000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 58443.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 11.0, "Customer_Behaviour[City]_stringindexer_transform": 258.0, "Customer_Behaviour[Country]_stringindexer_transform": 2.0, "Customer_Behaviour[Timestamp]_dayofmonth": 10, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.0, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Daily Internet Usage]": 238.0, "Customer_Behaviour[Ad Topic Line]": "Function-based executive moderator", "Customer_Behaviour[City]": "West Dennis", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Pakistan", "Customer_Behaviour[Timestamp]": 1460962838000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 61117.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 246.0, "Customer_Behaviour[City]_stringindexer_transform": 72.0, "Customer_Behaviour[Country]_stringindexer_transform": 72.0, "Customer_Behaviour[Timestamp]_dayofmonth": 18, "Customer_Behaviour[Timestamp]_month": 4, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.0, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Daily Internet Usage]": 241.0, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered foreground encryption", "Customer_Behaviour[City]": "Austinborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "New Zealand", "Customer_Behaviour[Timestamp]": 1452633435000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 50506.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 253.0, "Customer_Behaviour[City]_stringindexer_transform": 375.0, "Customer_Behaviour[Country]_stringindexer_transform": 52.0, "Customer_Behaviour[Timestamp]_dayofmonth": 12, "Customer_Behaviour[Timestamp]_month": 1, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.0, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Daily Internet Usage]": 178.0, "Customer_Behaviour[Ad Topic Line]": "Monitored 24/7 moratorium", "Customer_Behaviour[City]": "South Pamela", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1463267294000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 61039.0, "Customer_Behaviour[Area Income]_binarizer_transform": 1.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 421.0, "Customer_Behaviour[City]_stringindexer_transform": 69.0, "Customer_Behaviour[Country]_stringindexer_transform": 4.0, "Customer_Behaviour[Timestamp]_dayofmonth": 14, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.0, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Daily Internet Usage]": 221.0, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented real-time framework", "Customer_Behaviour[City]": "North Laurenview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Luxembourg", "Customer_Behaviour[Timestamp]": 1464084279000, "Customer_Behaviour[Clicked on Ad]": 0, "Customer_Behaviour[Area Income]": 46974.0, "Customer_Behaviour[Area Income]_binarizer_transform": 0.0, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": 450.0, "Customer_Behaviour[City]_stringindexer_transform": 149.0, "Customer_Behaviour[Country]_stringindexer_transform": 18.0, "Customer_Behaviour[Timestamp]_dayofmonth": 24, "Customer_Behaviour[Timestamp]_month": 5, "Customer_Behaviour[Timestamp]_year": 2016}], "FE": [{"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Daily Time Spent on Site]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "64.9", "stddev": "15.66", "min": "32.6", "max": "90.97", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Daily ..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Age]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "36.42", "stddev": "8.64", "min": "19", "max": "60", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Age]"}, {"transformationsData": [{"feature_label": "Customer_Behaviour[Area Income]", "threshold": 54913.42, "transformation_label": "Binarizer"}], "feature": "Customer_Behaviour[Area Income]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "54913.92", "stddev": "14040.03", "min": "14775.5", "max": "78119.5", "missing": "0"}, "transformation": [{"transformation": "Binarizer", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Area I..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Daily Internet Usage]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "177.45", "stddev": "43.92", "min": "105.0", "max": "261.02", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Daily ..."}, {"transformationsData": [{"feature_label": "Customer_Behaviour[Ad Topic Line]", "transformation_label": "String Indexer"}], "feature": "Customer_Behaviour[Ad Topic Line]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Adaptive 24hour Graphic Interface", "max": "Visionary reciprocal circuit", "missing": "0", "distinct": "500"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Ad Top..."}, {"transformationsData": [{"feature_label": "Customer_Behaviour[City]", "transformation_label": "String Indexer"}], "feature": "Customer_Behaviour[City]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Adamsbury", "max": "Zacharyton", "missing": "0", "distinct": "497"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[City]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Male]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Male]"}, {"transformationsData": [{"feature_label": "Customer_Behaviour[Country]", "transformation_label": "String Indexer"}], "feature": "Customer_Behaviour[Country]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Afghanistan", "max": "Zimbabwe", "missing": "0", "distinct": "209"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Countr..."}, {"transformationsData": [{"feature_label": "Customer_Behaviour[Timestamp]", "transformation_label": "Extract Date"}], "feature": "Customer_Behaviour[Timestamp]", "type": "date", "selected": true, "replaceby": "random", "stats": {"count": "", "mean": "", "stddev": "", "min": "", "max": "", "missing": "0"}, "transformation": [{"transformation": "Extract Date", "selectedAsDefault": 1}], "generated": false, "updatedLabel": "Customer_Behaviour[Timest..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Clicked on Ad]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.54", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Clicke..."}, {"feature": "Customer_Behaviour[Area Income]_binarizer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.56", "stddev": "0.5", "min": "0.0", "max": "1.0", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Area I..."}, {"feature": "Customer_Behaviour[Ad Topic Line]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "249.5", "stddev": "144.48", "min": "0.0", "max": "499.0", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Ad Top..."}, {"feature": "Customer_Behaviour[City]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "246.52", "stddev": "144.45", "min": "0.0", "max": "496.0", "missing": "0"}, "updatedLabel": "Customer_Behaviour[City]_..."}, {"feature": "Customer_Behaviour[Country]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "74.36", "stddev": "56.35", "min": "0.0", "max": "208.0", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Countr..."}, {"feature": "Customer_Behaviour[Timestamp]_dayofmonth", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "generated": true, "selected": true, "stats": {"count": "500", "mean": "15.48", "stddev": "8.63", "min": "1", "max": "31", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Timest..."}, {"feature": "Customer_Behaviour[Timestamp]_month", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "generated": true, "selected": true, "stats": {"count": "500", "mean": "3.85", "stddev": "1.95", "min": "1", "max": "7", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Timest..."}, {"feature": "Customer_Behaviour[Timestamp]_year", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "generated": true, "selected": true, "stats": {"count": "500", "mean": "2016.0", "stddev": "0.0", "min": "2016", "max": "2016", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Timest..."}], "samplecount": 500, "message": "Successfully executed", "status": 1, "userid": "d2596556-3f80-4d6d-b0c0-61914b958779", "FEGraph": [{"values": {"label": ["32.0 - 37.8", "37.8 - 43.6", "43.6 - 49.4", "49.4 - 55.2", "55.2 - 61.0", "61.0 - 66.8", "66.8 - 72.6", "72.6 - 78.4", "78.4 - 84.2", "84.2 - 90.0"], "data": [28, 46, 42, 37, 35, 48, 70, 81, 86, 27]}, "label": "Customer_Behaviour[Daily Time Spent on Site]", "count": 10, "min": 32.0, "max": 90.0}, {"values": {"label": ["19.0 - 23.1", "23.1 - 27.2", "27.2 - 31.3", "31.3 - 35.4", "35.4 - 39.5", "39.5 - 43.6", "43.6 - 47.7", "47.7 - 51.8", "51.8 - 55.9", "55.9 - 60"], "data": [20, 53, 101, 76, 80, 60, 48, 33, 18, 11]}, "label": "Customer_Behaviour[Age]", "count": 10, "min": 19.0, "max": 60}, {"values": {"label": ["14775.0 - 21109.4", "21109.4 - 27443.8", "27443.8 - 33778.2", "33778.2 - 40112.6", "40112.6 - 46447.0", "46447.0 - 52781.4", "52781.4 - 59115.8", "59115.8 - 65450.2", "65450.2 - 71784.6", "71784.6 - 78119.0"], "data": [6, 15, 34, 26, 45, 75, 73, 80, 101, 45]}, "label": "Customer_Behaviour[Area Income]", "count": 10, "min": 14775.0, "max": 78119.0}, {"values": {"label": ["105.0 - 120.6", "120.6 - 136.2", "136.2 - 151.8", "151.8 - 167.4", "167.4 - 183.0", "183.0 - 198.6", "198.6 - 214.2", "214.2 - 229.8", "229.8 - 245.4", "245.4 - 261.0"], "data": [61, 66, 47, 51, 40, 40, 68, 54, 52, 21]}, "label": "Customer_Behaviour[Daily Internet Usage]", "count": 10, "min": 105.0, "max": 261.0}, {"values": {"label": ["Centralized neutral neural-net", "Grass-roots coherent extranet", "Customizable multi-tasking website", "Mandatory disintermediate utilization", "Exclusive neutral parallelism", "Monitored systematic hierarchy", "Open-architected impactful productivity", "Multi-layered 4thgeneration knowledge user", "Intuitive exuding service-desk", "Centralized 24/7 installation", "Team-oriented encompassing portal", "Cross-group regional website", "Organized global model", "Phased transitional instruction set", "Streamlined cohesive conglomeration", "Synchronized user-facing core", "Organized client-driven alliance", "Synergized multimedia emulation", "Customer-focused optimizing moderator", "Customizable executive software", "Down-sized uniform info-mediaries", "Streamlined next generation implementation", "Triple-buffered scalable groupware", "Phased dynamic customer loyalty", "Down-sized modular intranet", "Pre-emptive content-based focus group", "Function-based optimizing protocol", "Up-sized secondary software", "Persevering reciprocal firmware", "De-engineered mobile infrastructure", "Customer-focused upward-trending contingency", "User-friendly upward-trending intranet", "Focused intangible moderator", "Customer-focused transitional strategy", "Advanced web-enabled standardization", "Polarized dynamic throughput", "Devolved zero administration intranet", "Cross-platform regional task-force", "Down-sized well-modulated archive", "Realigned zero tolerance emulation", "Versatile transitional monitoring", "User-centric intangible task-force", "Multi-layered user-facing paradigm", "Enterprise-wide client-driven contingency", "Diverse modular interface", "Up-sized incremental encryption", "Managed grid-enabled standardization", "Universal 24/7 implementation", "Customer-focused multi-tasking Internet solution", "Vision-oriented contextually-based extranet", "Centralized tertiary pricing structure", "Synergized context-sensitive database", "Profit-focused dedicated utilization", "Stand-alone tangible moderator", "Polarized tangible collaboration", "Virtual scalable secured line", "Synchronized leadingedge help-desk", "Total 5thgeneration standardization", "Sharable grid-enabled matrix", "Balanced asynchronous hierarchy", "Face-to-face even-keeled website", "User-friendly client-server instruction set", "Assimilated fault-tolerant hub", "Compatible systemic function", "Front-line tangible alliance", "Self-enabling optimal initiative", "Configurable logistical Graphical User Interface", "Virtual bandwidth-monitored initiative", "Cloned object-oriented benchmark", "Fundamental fault-tolerant neural-net", "Compatible intangible customer loyalty", "Distributed 3rdgeneration definition", "Pre-emptive cohesive budgetary management", "Diverse executive groupware", "Synergized cohesive array", "Universal even-keeled analyzer", "Monitored real-time superstructure", "Automated static concept", "Profit-focused attitude-oriented task-force", "Cross-platform multimedia algorithm", "Progressive non-volatile neural-net", "Programmable uniform productivity", "De-engineered fault-tolerant database", "Configurable bottom-line application", "Proactive next generation knowledge user", "Devolved responsive structure", "De-engineered solution-oriented open architecture", "Customizable modular Internet solution", "Stand-alone encompassing throughput", "Re-engineered real-time success", "Digitized contextually-based product", "Organic interactive support", "Function-based stable alliance", "Enterprise-wide foreground emulation", "Customer-focused incremental system engine", "Vision-oriented optimizing middleware", "Extended interactive model", "Upgradable even-keeled challenge", "Horizontal national architecture", "Adaptive contextually-based methodology", "Configurable dynamic adapter", "Self-enabling incremental collaboration", "Secured scalable Graphical User Interface", "Reverse-engineered well-modulated capability", "Integrated coherent pricing structure", "Upgradable directional system engine", "Public-key non-volatile implementation", "Horizontal high-level concept", "Reduced multimedia project", "Object-based modular functionalities", "Organic asynchronous hierarchy", "Proactive client-server productivity", "Balanced value-added database", "Seamless composite budgetary management", "Face-to-face reciprocal methodology", "Upgradable even-keeled hardware", "Versatile responsive knowledge user", "Proactive radical support", "Versatile content-based protocol", "Seamless cohesive conglomeration", "De-engineered actuating hierarchy", "Balanced motivating help-desk", "Sharable optimal capacity", "Advanced systemic productivity", "User-friendly bandwidth-monitored attitude", "Networked even-keeled workforce", "Cross-group value-added success", "Upgradable asymmetric emulation", "Universal transitional Graphical User Interface", "Triple-buffered 3rdgeneration migration", "Team-oriented dynamic forecast", "Customer-focused zero-defect process improvement", "Focused systemic benchmark", "Organized 24/7 middleware", "Phased full-range hardware", "Polarized analyzing intranet", "Digitized disintermediate ability", "Public-key real-time definition", "Reverse-engineered 24hour hardware", "Distributed maximized ability", "Fully-configurable holistic throughput", "Progressive uniform budgetary management", "Synergistic stable infrastructure", "Expanded zero administration attitude", "Innovative regional structure", "Universal asymmetric workforce", "Business-focused client-driven forecast", "Open-source global strategy", "Stand-alone motivating moratorium", "Profound bottom-line standardization", "Managed client-server access", "Horizontal modular success", "Team-oriented zero-defect initiative", "Progressive intermediate throughput", "Assimilated next generation firmware", "Business-focused background synergy", "Ergonomic methodical encoding", "Switchable analyzing encryption", "Programmable uniform website", "Fundamental methodical support", "Multi-tiered stable leverage", "Cross-group human-resource time-frame", "Realigned intangible benchmark", "Grass-roots mission-critical emulation", "Proactive encompassing paradigm", "Automated multi-state toolset", "Managed didactic flexibility", "Cross-platform neutral system engine", "Focused high-level frame", "Total human-resource flexibility", "Ergonomic zero tolerance encoding", "Cross-platform zero-defect structure", "Innovative maximized groupware", "Cross-platform logistical pricing structure", "Future-proofed fresh-thinking conglomeration", "Sharable multimedia conglomeration", "Robust object-oriented Graphic Interface", "Optimized systemic capability", "Right-sized system-worthy project", "Versatile optimizing projection", "Universal multi-state system engine", "Operative didactic Local Area Network", "Ergonomic empowering frame", "Multi-tiered mobile encoding", "Organic logistical adapter", "Programmable didactic capacity", "Reactive impactful challenge", "Implemented asynchronous application", "Multi-layered secondary software", "Expanded value-added emulation", "Stand-alone empowering benchmark", "Face-to-face dedicated flexibility", "Optimized attitude-oriented initiative", "Virtual executive implementation", "Enhanced intermediate standardization", "Versatile solution-oriented secured line", "User-centric solution-oriented emulation", "Multi-channeled non-volatile website", "Self-enabling zero administration neural-net", "Sharable secondary Graphical User Interface", "Innovative homogeneous alliance", "Diverse leadingedge website", "Optimized intermediate help-desk", "Sharable reciprocal project", "Reactive demand-driven strategy", "Team-oriented bi-directional secured line", "Vision-oriented system-worthy forecast", "Multi-tiered interactive neural-net", "Ameliorated leadingedge help-desk", "Persevering 5thgeneration knowledge user", "Expanded modular application", "Front-line actuating functionalities", "Inverse stable synergy", "Operative full-range forecast", "Operative secondary functionalities", "Managed 24hour analyzer", "Horizontal client-server database", "Digitized homogeneous core", "Ameliorated coherent open architecture", "Vision-oriented bifurcated contingency", "Re-engineered zero-defect open architecture", "Synchronized full-range portal", "Integrated encompassing support", "Realigned 24/7 core", "Enhanced tertiary utilization", "Balanced disintermediate conglomeration", "Networked local secured line", "Programmable empowering orchestration", "Object-based motivating instruction set", "Realigned intermediate application", "Optional tangible productivity", "Virtual homogeneous budgetary management", "Balanced uniform algorithm", "Fully-configurable asynchronous firmware", "Exclusive systematic algorithm", "Exclusive cohesive intranet", "Vision-oriented asynchronous Internet solution", "Sharable 5thgeneration access", "Monitored homogeneous artificial intelligence", "Secured encompassing Graphical User Interface", "Team-oriented executive core", "Reduced background data-warehouse", "Public-key bi-directional Graphical User Interface", "Front-line fresh-thinking installation", "Assimilated multi-state paradigm", "Open-source local approach", "Polarized intangible encoding", "Reactive upward-trending migration", "Customer-focused fault-tolerant implementation", "Customizable homogeneous contingency", "Face-to-face modular budgetary management", "Decentralized bottom-line help-desk", "Visionary mission-critical application", "Stand-alone well-modulated product", "Ameliorated bandwidth-monitored contingency", "Front-line neutral alliance", "Re-engineered optimal policy", "Implemented uniform synergy", "Mandatory empowering focus group", "Intuitive global website", "Synergized clear-thinking protocol", "Triple-buffered multi-state complexity", "Enhanced intangible portal", "Switchable real-time product", "Up-sized asymmetric firmware", "Customer-focused explicit challenge", "Extended leadingedge solution", "Front-line bifurcated ability", "Virtual 5thgeneration emulation", "Cloned 5thgeneration orchestration", "Organic bottom-line service-desk", "Robust logistical utilization", "Enhanced dedicated support", "Synergistic fresh-thinking array", "Intuitive dynamic attitude", "Business-focused value-added definition", "Synchronized systemic hierarchy", "Reactive demand-driven capacity", "Innovative user-facing extranet", "Front-line intermediate database", "Balanced dynamic application", "Reduced global support", "Triple-buffered demand-driven alliance", "Visionary reciprocal circuit", "Sharable bottom-line solution", "Upgradable asynchronous circuit", "Customer-focused empowering ability", "Stand-alone national attitude", "Advanced full-range migration", "Seamless object-oriented structure", "Distributed tertiary system engine", "Total 5thgeneration encoding", "Progressive empowering alliance", "Innovative background conglomeration", "Polarized 6thgeneration info-mediaries", "Operative system-worthy protocol", "Extended systemic policy", "Self-enabling holistic process improvement", "Horizontal client-driven hierarchy", "User-friendly asymmetric info-mediaries", "Polarized bandwidth-monitored moratorium", "Centralized systematic knowledgebase", "Future-proofed grid-enabled implementation", "Profound zero administration instruction set", "Up-sized executive moderator", "Ergonomic client-driven application", "Multi-channeled asynchronous open system", "Adaptive 24hour Graphic Interface", "Horizontal multi-state interface", "Diverse stable circuit", "Customer-focused attitude-oriented instruction set", "Secured clear-thinking middleware", "Right-sized value-added initiative", "Multi-channeled reciprocal artificial intelligence", "Realigned systematic function", "Networked high-level structure", "Advanced modular Local Area Network", "Reduced bi-directional strategy", "Digitized heuristic solution", "Multi-layered non-volatile Graphical User Interface", "Synchronized multimedia model", "Ameliorated upward-trending definition", "Multi-tiered human-resource structure", "Managed upward-trending instruction set", "Phased zero administration success", "Configurable multi-state utilization", "Diverse multi-tasking parallelism", "Up-sized tertiary contingency", "Expanded clear-thinking core", "Open-source coherent monitoring", "Persevering tertiary capability", "Enterprise-wide bi-directional secured line", "Total directional approach", "Self-enabling didactic pricing structure", "Customizable tangible hierarchy", "Intuitive explicit conglomeration", "Right-sized asynchronous website", "Advanced 5thgeneration capability", "Universal asymmetric archive", "Triple-buffered regional toolset", "Customizable zero-defect matrix", "Front-line fresh-thinking open system", "Reactive responsive emulation", "Enterprise-wide local matrices", "Persevering even-keeled help-desk", "Grass-roots eco-centric instruction set", "Fully-configurable incremental Graphical User Interface", "Mandatory 3rdgeneration moderator", "Managed eco-centric encoding", "Visionary multi-tasking alliance", "Ameliorated tangible hierarchy", "Enhanced maximized access", "Re-contextualized systemic time-frame", "Reactive bi-directional workforce", "Re-engineered neutral success", "Multi-lateral empowering throughput", "Proactive asymmetric definition", "Pre-emptive zero tolerance Local Area Network", "Reduced incremental productivity", "Realigned scalable standardization", "Team-oriented context-sensitive installation", "Pre-emptive systematic budgetary management", "Multi-layered tangible portal", "De-engineered tertiary secured line", "Realigned next generation projection", "Decentralized needs-based analyzer", "Multi-layered fresh-thinking process improvement", "Persevering eco-centric flexibility", "Triple-buffered needs-based Local Area Network", "Polarized multimedia system engine", "Face-to-face analyzing encryption", "Self-enabling even-keeled methodology", "Public-key zero-defect analyzer", "Integrated motivating neural-net", "Operative scalable emulation", "Robust responsive collaboration", "Programmable empowering middleware", "Public-key mission-critical core", "Mandatory dedicated data-warehouse", "Re-engineered responsive definition", "Cloned explicit middleware", "Inverse high-level capability", "Inverse bi-directional knowledge user", "Monitored dynamic instruction set", "Customer-focused full-range neural-net", "User-centric intangible contingency", "Quality-focused scalable utilization", "Seamless impactful info-mediaries", "Cross-group neutral synergy", "Monitored content-based implementation", "Quality-focused zero-defect budgetary management", "Intuitive fresh-thinking moderator", "Quality-focused hybrid frame", "Business-focused high-level hardware", "Managed disintermediate capability", "Function-based incremental standardization", "Realigned global initiative", "Business-focused maximized complexity", "Upgradable local migration", "Future-proofed modular utilization", "Re-engineered impactful software", "Managed 6thgeneration hierarchy", "Pre-emptive transitional protocol", "Public-key asynchronous matrix", "Grass-roots systematic hardware", "User-centric composite contingency", "Ergonomic neutral portal", "Reverse-engineered maximized focus group", "Public-key intangible Graphical User Interface", "Advanced local task-force", "Profound well-modulated array", "Multi-layered fresh-thinking neural-net", "Synchronized grid-enabled moratorium", "Total grid-enabled application", "Vision-oriented uniform knowledgebase", "Business-focused holistic benchmark", "Public-key solution-oriented focus group", "User-friendly content-based customer loyalty", "Reactive national success", "Networked regional Local Area Network", "Assimilated homogeneous service-desk", "Monitored local Internet solution", "Customizable methodical Graphical User Interface", "Front-line systemic capability", "Programmable high-level benchmark", "Grass-roots empowering paradigm", "Switchable secondary ability", "Profit-focused systemic support", "Phased content-based middleware", "Synergized well-modulated Graphical User Interface", "Implemented bottom-line implementation", "Monitored context-sensitive initiative", "Pre-emptive client-server open system", "Synergistic non-volatile analyzer", "Object-based optimal solution", "Profound dynamic attitude", "Networked responsive application", "Customer-focused impactful success", "Enhanced regional conglomeration", "Customizable value-added project", "Switchable multi-state success", "Fundamental clear-thinking knowledgebase", "Front-line incremental access", "Digitized interactive initiative", "Quality-focused 5thgeneration orchestration", "Configurable mission-critical algorithm", "Reduced holistic help-desk", "Organic 3rdgeneration encryption", "Monitored intermediate circuit", "Object-based leadingedge complexity", "Digitized zero-defect implementation", "Configurable impactful capacity", "Distributed leadingedge orchestration", "Multi-channeled 3rdgeneration model", "Devolved exuding Local Area Network", "Phased hybrid intranet", "Inverse national core", "Quality-focused zero tolerance matrices", "Decentralized 24hour approach", "Distributed bifurcated challenge", "Open-architected system-worthy ability", "Centralized client-driven workforce", "Proactive interactive service-desk", "Assimilated encompassing portal", "Cross-group global orchestration", "Down-sized bandwidth-monitored core", "Inverse zero-defect capability", "Multi-tiered real-time implementation", "Assimilated stable encryption", "Cloned optimal leverage", "De-engineered attitude-oriented projection", "Extended grid-enabled hierarchy", "Mandatory coherent groupware", "Triple-buffered systematic info-mediaries", "Centralized value-added hierarchy", "Front-line even-keeled website", "Persistent fault-tolerant service-desk", "Up-sized maximized model", "Organized global flexibility", "Balanced executive definition", "Focused coherent success", "Robust context-sensitive neural-net", "Fundamental tangible moratorium", "Sharable value-added solution", "Assimilated discrete strategy", "Phased fault-tolerant definition", "Pre-emptive next generation Internet solution", "Decentralized methodical capability", "Stand-alone logistical service-desk", "Open-architected intangible strategy", "Diverse directional hardware", "Total bi-directional success", "Progressive 24/7 definition", "Pre-emptive next generation strategy", "Open-source holistic productivity", "Function-based executive moderator", "Triple-buffered foreground encryption", "Monitored 24/7 moratorium", "Vision-oriented real-time framework", "Robust transitional ability"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Customer_Behaviour[Ad Topic Line]", "count": 500, "min": "Adaptive 24hour Graphic Interface", "max": "Visionary reciprocal circuit"}, {"values": {"label": ["West Brandonton", "West William", "West Dylanberg", "South John", "Harperborough", "South Cathyfurt", "Palmerside", "Port Cassie", "Millerchester", "West Christopher", "Amandahaven", "Garciaside", "Port Sarahshire", "Brendachester", "Robertfurt", "Jensenborough", "Bradleyburgh", "North Regina", "Davidmouth", "Lake Conniefurt", "Lake Christopherfurt", "East Tylershire", "Lake Dustin", "New Tina", "Christopherport", "Port Sarahhaven", "Williamsborough", "North Michael", "Hernandezville", "Erinton", "Hughesport", "New Lucasburgh", "Port Christopherborough", "Millerside", "Lake Jessica", "South Daniel", "Suzannetown", "Brianfurt", "East Michelleberg", "Port Eric", "Timothyfurt", "Guzmanland", "East John", "Heatherberg", "South George", "Codyburgh", "Ramirezside", "East Rachelview", "Curtisport", "Frankbury", "East Eric", "Jacobstad", "East Stephen", "Turnerchester", "Youngfort", "Port Melissaberg", "Aliciatown", "Josephstad", "West Ericfurt", "New Brendafurt", "Kentmouth", "North Russellborough", "Penatown", "Hartmanchester", "Hansenmouth", "West Jessicahaven", "Davilachester", "North Ricardotown", "Millerbury", "Garciaview", "Williamstad", "West Connor", "West Justin", "West Tinashire", "Jamesfurt", "Harveyport", "North Kevinside", "Christinetown", "Petersonfurt", "New Lindaberg", "Port Crystal", "South Jasminebury", "Charlottefort", "West Lindseybury", "Lake David", "Tinaton", "Alexanderfurt", "West Pamela", "West Amanda", "Garciamouth", "South Kyle", "Combsstad", "Lake Allenville", "Port Juan", "Michellefort", "Jessicahaven", "Roberttown", "New Amanda", "North April", "Port Paultown", "East Vincentstad", "New Rebecca", "Port Brookeland", "East Yvonnechester", "Burgessside", "Port Kathleenfort", "Charlenetown", "South Johnnymouth", "Hannaport", "East Anthony", "Rogerburgh", "Andersonchester", "Meyersstad", "Michelleside", "Port Brian", "Kristintown", "Davisfurt", "Alvaradoport", "Monicaview", "Katieport", "East Brittanyville", "West Travismouth", "Brownton", "Keithtown", "South Jade", "Williamsport", "Port Katelynview", "Lake Jesus", "Andrewborough", "New Keithburgh", "Kevinberg", "Lovemouth", "Taylorhaven", "Butlerfort", "Masseyshire", "Port Blake", "Brandymouth", "Port Jessica", "Yuton", "Welchshire", "Timothyport", "Lake Stephenborough", "Silvaton", "Florestown", "Jensenton", "Rivasland", "Helenborough", "Pattymouth", "South Alexisborough", "New Charleschester", "East Breannafurt", "Estesfurt", "South Aaron", "Catherinefort", "North Kimberly", "North Aaronburgh", "Danielview", "Lake Ian", "West Shannon", "South Jackieberg", "North Sarashire", "East Jessefort", "Rochabury", "Wrightview", "Perryburgh", "Richardsonshire", "Kimberlymouth", "Meghanchester", "Tammyshire", "Greerport", "East Sharon", "Johnstonmouth", "East Heatherside", "Chapmanmouth", "Elizabethstad", "East Brettton", "Westshire", "Julietown", "Adamsbury", "North Angelastad", "Amandafort", "Ronaldport", "Estradashire", "Hobbsbury", "New Christinatown", "Port Georgebury", "West Leahton", "Reginamouth", "Jamesmouth", "Brandonbury", "Leahside", "Port Sherrystad", "Josephmouth", "Destinyfurt", "Mezaton", "North Mark", "Brittanyborough", "West Ericaport", "Ericksonmouth", "East Heidi", "New Angelview", "Lake Brandonview", "Morganport", "Browntown", "Bradleyside", "West Ryan", "Johnsontown", "New Henry", "South Lisa", "New Hollyberg", "Staceyfort", "North Brittanyburgh", "Lake Charlottestad", "Tammymouth", "Lake Vanessa", "Port Douglasborough", "Port Aprilville", "Lake Faith", "North Samantha", "Holderville", "Jeffreymouth", "Smithside", "Vanessastad", "Carterland", "Cervantesshire", "North Debrashire", "East Mike", "North Angelatown", "Clarkborough", "Josephberg", "South Jeanneport", "Jonesshire", "Lake James", "Port Jennifer", "Chrismouth", "Port Beth", "West David", "Fraziershire", "Port Derekberg", "West Randy", "Zacharyton", "New Marcusbury", "Huffmanchester", "Williamsfort", "Edwardsport", "Lake Evantown", "Hansenland", "Port Michaelmouth", "Tylerport", "South Davidhaven", "Jonathanland", "North Virginia", "East Jason", "North Cassie", "North Destiny", "West Gabriellamouth", "Alvarezland", "Melanieton", "Waltertown", "Fosterside", "Davidstad", "Lake Tracy", "Dianaville", "Lake Matthew", "Sarahland", "New Patrick", "Nicholasland", "Ronniemouth", "Wrightburgh", "Davidton", "South Manuel", "Brandonstad", "North Tara", "Pruittmouth", "West Guybury", "Johnstad", "Kellytown", "Mackenziemouth", "Zacharystad", "Bowenview", "Jamesberg", "Johnport", "Odomville", "Thomasview", "Port Gregory", "Lake Amy", "Smithburgh", "New Michaeltown", "East Tiffanyport", "Sharpberg", "North Kristine", "Wongland", "Wallacechester", "Bradshawborough", "Andersonton", "Johnsport", "South Ronald", "Lisaberg", "Stewartbury", "Benjaminchester", "North Wesleychester", "Port Jeffrey", "Lake Josetown", "Kimberlyhaven", "Port Jodi", "Sylviaview", "West Michaelhaven", "Walshhaven", "South Jennifer", "South Daniellefort", "Dianashire", "Hammondport", "Hernandezfort", "New Jeffreychester", "South Denisefurt", "North Anna", "Port Destiny", "Wilsonburgh", "Murphymouth", "Taylorberg", "Melissafurt", "East Brianberg", "Townsendfurt", "Robertbury", "New Tinamouth", "Ramosstad", "North Shannon", "West Russell", "Masonhaven", "Derrickhaven", "New Brandy", "East Timothy", "West Alyssa", "Bruceburgh", "Port Robin", "Port Aliciabury", "Port Whitneyhaven", "Jeffreyshire", "North Loriburgh", "South Tomside", "West Brenda", "Greenechester", "Gravesport", "Millerland", "Port Jessicamouth", "Paulport", "Cynthiaside", "New Juan", "Amyfurt", "Harrishaven", "Birdshire", "Jacksonmouth", "Hayesmouth", "Juliaport", "Kimberlytown", "New Johnberg", "Shawstad", "Faithview", "Richardsontown", "East Christopherbury", "Port Christinemouth", "New Paul", "Hartport", "Hurleyborough", "Erikville", "Karenton", "Lake Adrian", "Mollyport", "West Daleborough", "Stephenborough", "Lake Kurtmouth", "West Thomas", "New Tyler", "Reyesland", "Lake Courtney", "Mariebury", "New Jasmine", "Lake Brian", "Lake Kevin", "East Sheriville", "Leonchester", "Taylorport", "Munozberg", "West Barbara", "New Gabriel", "Lake Matthewland", "Jamesville", "West Lucas", "Lake Jasonchester", "Pearsonfort", "Sellerstown", "Carterport", "Greentown", "North Lisachester", "North Alexandra", "Garnerberg", "North Anaport", "Hallfort", "Kingshire", "North Isabellaville", "Reyesfurt", "North Stephanieberg", "Sherrishire", "Port Daniel", "Brownview", "New Maria", "Calebberg", "Gomezport", "Shaneland", "East Aaron", "East Michaelland", "South Patrickfort", "Charlesbury", "West Robertside", "Port Anthony", "Austinland", "South Jaimeview", "South Meredithmouth", "Villanuevaton", "North Garyhaven", "Richardsonmouth", "New Dawnland", "Tranland", "Anthonyfurt", "Christopherchester", "Alexisland", "Johnsonfort", "Port Davidland", "Lake Michael", "West Michaelshire", "Port Calvintown", "Parkerhaven", "Cassandratown", "West Dannyberg", "East Debraborough", "Colemanshire", "Karenmouth", "New Jessicaport", "Luisfurt", "West Sharon", "Lake Cynthia", "Lake Jacob", "Meyerchester", "Wintersfort", "East Carlos", "Blairville", "Mosleyburgh", "West Wendyland", "Lawrenceborough", "Kennethview", "Pamelamouth", "Lesliefort", "Garciatown", "Evansfurt", "Barbershire", "Turnerville", "West Zacharyborough", "Robinsonland", "Haleberg", "Estradafurt", "Lake Hailey", "Meaganfort", "North Monicaville", "Mullenside", "Sanchezland", "Rogerland", "Newmanberg", "Cannonbury", "Lisamouth", "Port Brittanyville", "Carterton", "South Dianeshire", "Villanuevastad", "Lake Lisa", "Valerieland", "Patrickmouth", "Lake Deannaborough", "Davieshaven", "North Kennethside", "Shelbyport", "New Taylorburgh", "Deannaville", "East Johnport", "Wagnerchester", "Daisymouth", "Lake Joseph", "North Brandon", "Wademouth", "North Raymond", "East Troyhaven", "Lake Jose", "Ashleymouth", "Lake Danielle", "West Dennis", "Austinborough", "South Pamela", "North Laurenview"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Customer_Behaviour[City]", "count": 497, "min": "Adamsbury", "max": "Zacharyton"}, {"values": {"label": ["0"], "data": [500]}, "label": "Customer_Behaviour[Male]", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["Qatar", "Barbados", "Palestinian Territory", "Burundi", "Tokelau", "Greece", "British Virgin Islands", "Senegal", "Liberia", "Italy", "Turkey", "Israel", "Svalbard & Jan Mayen Islands", "Iran", "Christmas Island", "Rwanda", "Turks and Caicos Islands", "Norfolk Island", "Bouvet Island (Bouvetoya)", "Ukraine", "Montserrat", "Timor-Leste", "Puerto Rico", "Australia", "Jersey", "Lithuania", "Egypt", "Western Sahara", "Guinea", "Madagascar", "United Arab Emirates", "Somalia", "Bhutan", "Uzbekistan", "South Africa", "Hungary", "Saint Martin", "Cuba", "Belize", "Antarctica (the territory South of 60 deg S)", "Dominica", "Liechtenstein", "Equatorial Guinea", "Mongolia", "Kuwait", "Vietnam", "Guatemala", "Peru", "Singapore", "Canada", "Algeria", "Fiji", "Kenya", "Cyprus", "Samoa", "Mauritania", "Czech Republic", "Chile", "Turkmenistan", "Latvia", "Kazakhstan", "Bahrain", "Saint Pierre and Miquelon", "Afghanistan", "Tajikistan", "France", "Albania", "Papua New Guinea", "Thailand", "Honduras", "French Guiana", "Northern Mariana Islands", "Lebanon", "Tonga", "French Southern Territories", "Serbia", "New Caledonia", "Seychelles", "Mayotte", "Cambodia", "Taiwan", "Austria", "Zambia", "Anguilla", "Martinique", "Eritrea", "Mexico", "Nauru", "Saint Barthelemy", "Antigua and Barbuda", "Cote d'Ivoire", "Zimbabwe", "Saint Kitts and Nevis", "Bangladesh", "Faroe Islands", "Heard Island and McDonald Islands", "Bahamas", "Netherlands Antilles", "Tuvalu", "Congo", "Dominican Republic", "Trinidad and Tobago", "United States of America", "Ecuador", "Spain", "Indonesia", "Belgium", "American Samoa", "Guernsey", "China", "Macao", "Djibouti", "Romania", "Cayman Islands", "Ethiopia", "Morocco", "New Zealand", "Guam", "Venezuela", "United Kingdom", "Yemen", "Poland", "Saudi Arabia", "Ghana", "Micronesia", "Palau", "Belarus", "Benin", "Guyana", "Hong Kong", "Malta", "Japan", "Namibia", "Monaco", "Sweden", "Costa Rica", "Netherlands", "Sierra Leone", "Uganda", "Brunei Darussalam", "Luxembourg", "United States Virgin Islands", "Chad", "Moldova", "Malawi", "Uruguay", "Armenia", "Denmark", "El Salvador", "San Marino", "Paraguay", "Jamaica", "Georgia", "Brazil", "Syrian Arab Republic", "Maldives", "Haiti", "Montenegro", "Tunisia", "Iceland", "Myanmar", "Bosnia and Herzegovina", "Russian Federation", "Saint Helena", "Niger", "Sri Lanka", "Croatia", "Azerbaijan", "Central African Republic", "Falkland Islands (Malvinas)", "United States Minor Outlying Islands", "Gibraltar", "Togo", "Angola", "Estonia", "Colombia", "Finland", "Philippines", "Malaysia", "Greenland", "Guadeloupe", "Wallis and Futuna", "Gabon", "Holy See (Vatican City State)", "Cameroon", "Niue", "Pitcairn Islands", "Libyan Arab Jamahiriya", "Kyrgyz Republic", "Swaziland", "French Polynesia", "Bolivia", "Portugal", "Panama", "Pakistan", "Ireland", "Lao People's Democratic Republic", "Tanzania", "Comoros", "Nepal", "Guinea-Bissau", "Mauritius", "Reunion", "Vanuatu", "Slovakia (Slovak Republic)", "South Georgia and the South Sandwich Islands", "Bulgaria", "India", "Nicaragua"], "data": [3, 4, 1, 5, 2, 4, 2, 5, 5, 2, 3, 3, 3, 4, 3, 4, 4, 3, 4, 4, 1, 1, 5, 6, 4, 3, 3, 4, 3, 3, 3, 2, 1, 1, 5, 5, 2, 2, 4, 1, 2, 3, 1, 2, 1, 3, 2, 5, 4, 3, 5, 5, 3, 4, 5, 1, 2, 2, 3, 1, 2, 1, 4, 6, 1, 4, 4, 5, 2, 2, 2, 1, 2, 3, 2, 2, 1, 3, 4, 2, 5, 2, 1, 1, 1, 3, 4, 2, 2, 3, 3, 3, 1, 2, 1, 1, 3, 2, 1, 2, 2, 1, 1, 4, 1, 2, 3, 4, 2, 5, 3, 2, 1, 3, 2, 2, 3, 2, 5, 2, 3, 3, 2, 2, 2, 2, 2, 2, 1, 3, 2, 1, 2, 2, 3, 2, 2, 1, 1, 3, 4, 2, 2, 3, 3, 2, 1, 2, 1, 2, 1, 3, 2, 4, 3, 2, 1, 1, 2, 1, 3, 2, 2, 2, 1, 2, 5, 2, 1, 1, 1, 2, 2, 1, 2, 1, 4, 1, 2, 4, 1, 2, 4, 2, 3, 2, 1, 1, 2, 2, 1, 2, 2, 1, 3, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1]}, "label": "Customer_Behaviour[Country]", "count": 209, "min": "Afghanistan", "max": "Zimbabwe"}, {"values": {"label": ["2016-03-16 20:19:01", "2016-03-24 09:31:49", "2016-01-30 19:20:41", "2016-05-20 08:49:33", "2016-06-13 17:27:09", "2016-07-19 08:32:10", "2016-04-14 05:08:35", "2016-01-14 14:00:09", "2016-03-11 06:49:10", "2016-04-25 11:01:54", "2016-02-14 07:36:58", "2016-02-17 11:42:00", "2016-04-10 00:13:47", "2016-05-26 22:49:47", "2016-06-03 00:55:23", "2016-01-08 00:17:27", "2016-06-05 22:11:34", "2016-04-22 20:10:22", "2016-02-01 09:00:55", "2016-02-17 21:55:29", "2016-01-05 17:56:52", "2016-04-19 07:34:28", "2016-06-12 15:25:44", "2016-03-14 23:13:11", "2016-05-13 11:51:10", "2016-02-20 20:47:05", "2016-01-08 22:47:10", "2016-03-28 08:46:26", "2016-07-03 09:22:30", "2016-04-28 05:50:25", "2016-04-03 05:10:31", "2016-01-16 23:37:51", "2016-07-13 16:12:24", "2016-07-13 04:10:53", "2016-06-11 18:32:12", "2016-02-26 19:48:23", "2016-06-21 13:15:21", "2016-04-18 15:54:33", "2016-05-04 09:00:24", "2016-06-13 18:50:00", "2016-01-03 16:01:40", "2016-01-12 10:07:29", "2016-05-13 06:09:28", "2016-06-29 02:43:29", "2016-04-10 19:48:01", "2016-02-14 06:51:43", "2016-05-09 02:58:58", "2016-01-29 03:54:19", "2016-07-14 12:07:10", "2016-01-10 23:14:30", "2016-06-23 01:22:43", "2016-02-28 18:52:44", "2016-01-03 03:22:15", "2016-01-04 21:48:38", "2016-05-24 13:30:38", "2016-02-04 08:53:37", "2016-02-21 07:42:48", "2016-06-26 17:16:26", "2016-01-03 05:34:33", "2016-03-08 18:00:43", "2016-05-17 06:14:20", "2016-02-11 02:40:02", "2016-06-16 02:01:24", "2016-02-03 04:21:14", "2016-06-21 03:14:41", "2016-05-06 21:07:31", "2016-06-12 17:52:43", "2016-01-11 07:36:22", "2016-03-24 09:12:52", "2016-02-14 07:30:24", "2016-02-10 19:20:51", "2016-04-23 14:34:38", "2016-06-18 17:56:32", "2016-07-19 07:59:18", "2016-06-26 11:52:18", "2016-05-04 00:01:33", "2016-05-23 21:14:38", "2016-07-23 14:47:23", "2016-02-10 15:23:17", "2016-04-24 13:42:15", "2016-01-09 04:53:22", "2016-06-18 17:23:26", "2016-06-29 13:35:05", "2016-04-13 05:42:52", "2016-02-26 09:18:48", "2016-07-18 11:33:31", "2016-01-05 00:02:53", "2016-05-15 01:03:06", "2016-05-05 09:28:36", "2016-07-05 18:59:45", "2016-05-05 11:09:29", "2016-03-25 15:17:39", "2016-01-23 15:02:13", "2016-02-01 20:30:35", "2016-01-23 17:39:06", "2016-05-09 21:54:38", "2016-06-13 13:59:51", "2016-02-19 07:29:30", "2016-04-20 00:41:53", "2016-04-12 14:01:08", "2016-03-15 11:25:48", "2016-01-28 11:50:40", "2016-07-06 15:56:39", "2016-04-18 00:49:33", "2016-07-17 01:13:56", "2016-06-09 14:24:06", "2016-05-31 02:17:18", "2016-04-10 03:30:16", "2016-02-09 07:21:25", "2016-06-17 17:11:16", "2016-01-28 07:10:29", "2016-04-08 22:48:25", "2016-06-17 09:58:46", "2016-04-25 21:15:39", "2016-05-09 08:44:55", "2016-02-29 23:56:06", "2016-04-03 06:17:22", "2016-04-17 21:39:11", "2016-07-09 16:23:33", "2016-06-28 12:51:02", "2016-06-18 16:32:58", "2016-05-28 12:38:37", "2016-07-16 23:08:54", "2016-02-17 23:47:00", "2016-06-29 09:04:31", "2016-05-09 10:21:48", "2016-04-04 18:36:59", "2016-02-20 10:52:51", "2016-05-30 20:07:59", "2016-03-10 01:36:19", "2016-03-10 22:28:52", "2016-02-05 15:26:37", "2016-05-31 21:41:46", "2016-06-11 09:37:52", "2016-04-30 19:42:04", "2016-07-18 01:36:37", "2016-03-22 06:41:38", "2016-06-28 09:19:06", "2016-06-30 00:19:33", "2016-04-03 11:38:36", "2016-04-08 14:35:44", "2016-03-25 19:02:35", "2016-05-12 21:32:06", "2016-05-10 14:12:31", "2016-05-27 05:35:27", "2016-06-12 21:21:53", "2016-01-07 13:58:51", "2016-02-07 17:06:35", "2016-02-15 07:27:41", "2016-03-24 09:34:00", "2016-04-04 20:01:12", "2016-07-08 17:14:01", "2016-02-01 00:52:29", "2016-01-01 20:17:49", "2016-05-01 00:23:13", "2016-05-08 22:24:27", "2016-04-05 05:54:15", "2016-07-11 18:12:43", "2016-02-14 10:06:49", "2016-04-01 01:57:12", "2016-04-06 01:19:08", "2016-02-24 19:08:11", "2016-04-27 18:25:30", "2016-03-09 02:07:17", "2016-07-24 00:22:16", "2016-02-13 13:57:53", "2016-05-08 10:25:08", "2016-02-17 18:50:57", "2016-01-29 05:39:16", "2016-02-23 13:55:48", "2016-07-09 11:18:02", "2016-03-19 11:09:36", "2016-04-07 10:51:05", "2016-07-17 14:26:04", "2016-03-01 22:06:37", "2016-01-13 20:38:35", "2016-06-23 11:05:01", "2016-01-18 02:51:13", "2016-07-18 04:53:22", "2016-07-01 01:12:04", "2016-05-02 15:31:28", "2016-01-14 09:27:59", "2016-07-16 10:14:04", "2016-02-03 16:54:33", "2016-03-12 07:18:36", "2016-05-20 00:00:48", "2016-04-15 15:07:17", "2016-06-29 02:48:44", "2016-07-14 22:43:29", "2016-01-23 21:15:57", "2016-06-01 03:17:50", "2016-03-15 06:54:21", "2016-02-14 14:38:01", "2016-05-04 05:01:37", "2016-05-12 12:11:12", "2016-07-23 05:21:39", "2016-01-23 13:14:18", "2016-01-05 11:53:17", "2016-04-28 21:58:25", "2016-02-12 08:46:15", "2016-07-11 13:23:37", "2016-01-29 00:45:19", "2016-01-05 16:26:44", "2016-06-10 00:35:15", "2016-01-01 15:14:24", "2016-04-24 13:46:10", "2016-05-02 18:37:01", "2016-04-07 18:52:57", "2016-05-19 06:37:38", "2016-01-14 08:27:04", "2016-04-13 07:07:36", "2016-04-07 20:38:02", "2016-03-10 15:07:44", "2016-05-01 08:27:12", "2016-03-18 09:08:39", "2016-05-26 06:03:57", "2016-04-29 14:10:00", "2016-02-24 07:13:00", "2016-03-26 19:37:46", "2016-03-31 08:53:43", "2016-06-14 12:08:10", "2016-05-11 19:13:42", "2016-02-28 03:34:35", "2016-05-01 09:23:25", "2016-05-30 08:02:27", "2016-05-29 18:12:00", "2016-05-10 17:13:47", "2016-03-30 05:29:38", "2016-01-24 13:41:38", "2016-05-23 00:32:54", "2016-05-15 18:44:50", "2016-05-27 12:45:37", "2016-02-26 06:00:16", "2016-02-21 23:07:11", "2016-04-29 14:08:26", "2016-02-11 17:02:07", "2016-07-22 07:44:43", "2016-06-26 02:34:15", "2016-03-20 02:44:13", "2016-04-01 05:17:28", "2016-02-12 05:20:19", "2016-04-29 20:40:21", "2016-06-27 21:51:47", "2016-05-31 00:58:37", "2016-05-27 08:53:51", "2016-05-09 07:13:27", "2016-03-05 12:03:41", "2016-01-15 22:49:45", "2016-02-12 03:39:09", "2016-07-23 04:04:42", "2016-02-24 04:11:37", "2016-02-17 20:22:49", "2016-02-12 01:55:38", "2016-01-11 08:18:12", "2016-04-22 22:01:21", "2016-02-04 03:10:17", "2016-02-21 20:09:12", "2016-06-19 23:04:45", "2016-01-03 04:39:47", "2016-03-27 08:32:37", "2016-07-10 16:25:56", "2016-06-25 04:21:33", "2016-05-16 18:51:59", "2016-06-25 18:17:53", "2016-04-21 19:56:24", "2016-03-06 11:36:06", "2016-04-04 03:57:48", "2016-06-03 21:43:21", "2016-03-27 00:53:11", "2016-03-13 20:35:42", "2016-06-03 03:36:18", "2016-01-28 20:59:32", "2016-04-20 21:49:22", "2016-05-02 07:00:58", "2016-01-27 12:38:16", "2016-04-12 03:26:39", "2016-02-09 05:28:18", "2016-04-27 09:27:58", "2016-04-16 11:53:43", "2016-02-08 00:23:38", "2016-02-11 13:26:22", "2016-06-08 18:54:01", "2016-05-03 21:19:58", "2016-04-07 03:56:16", "2016-02-14 17:05:15", "2016-04-30 08:07:13", "2016-03-09 14:45:33", "2016-07-07 13:37:34", "2016-04-01 16:21:05", "2016-03-15 15:49:14", "2016-07-01 04:41:57", "2016-07-08 21:18:32", "2016-06-10 11:31:33", "2016-03-09 14:57:11", "2016-03-14 06:46:14", "2016-04-07 16:02:02", "2016-02-04 13:30:32", "2016-05-17 04:27:31", "2016-04-03 10:07:56", "2016-04-04 21:30:46", "2016-07-06 16:00:33", "2016-01-14 00:23:10", "2016-02-05 19:06:01", "2016-03-12 01:39:19", "2016-05-28 20:41:50", "2016-02-12 22:51:08", "2016-02-29 12:31:57", "2016-01-17 15:10:31", "2016-05-27 06:19:27", "2016-03-19 14:23:45", "2016-07-23 04:37:05", "2016-07-19 18:06:22", "2016-02-10 06:52:07", "2016-05-23 02:15:04", "2016-06-05 13:16:24", "2016-01-21 23:48:29", "2016-06-05 00:29:13", "2016-05-24 18:35:58", "2016-04-22 08:31:24", "2016-04-15 11:51:14", "2016-07-02 00:24:22", "2016-03-04 10:13:48", "2016-04-25 07:30:21", "2016-07-17 01:58:53", "2016-04-27 04:28:17", "2016-07-02 21:22:23", "2016-06-19 09:24:35", "2016-06-12 05:31:19", "2016-01-06 13:20:01", "2016-01-31 04:10:20", "2016-05-15 20:48:40", "2016-03-17 05:00:12", "2016-07-20 09:27:24", "2016-04-15 14:45:48", "2016-01-20 19:09:37", "2016-02-15 07:55:10", "2016-02-09 19:37:52", "2016-01-25 07:52:53", "2016-01-09 07:28:16", "2016-05-26 13:18:30", "2016-06-28 20:13:41", "2016-05-29 07:29:27", "2016-04-17 15:46:03", "2016-04-10 14:48:35", "2016-04-16 16:38:35", "2016-05-03 08:21:23", "2016-05-22 00:01:58", "2016-03-30 19:09:50", "2016-01-09 15:49:28", "2016-04-18 03:41:56", "2016-03-27 16:41:29", "2016-01-27 20:47:57", "2016-02-07 07:41:06", "2016-04-19 05:15:28", "2016-02-16 18:21:36", "2016-03-25 08:40:15", "2016-03-16 00:28:10", "2016-03-03 22:31:16", "2016-02-26 09:54:33", "2016-06-24 05:50:22", "2016-05-23 21:00:45", "2016-05-12 04:35:59", "2016-02-17 07:05:57", "2016-05-11 22:02:17", "2016-02-29 19:26:35", "2016-01-30 16:15:29", "2016-01-31 06:14:10", "2016-05-22 21:54:23", "2016-03-01 10:01:35", "2016-04-04 08:19:54", "2016-05-15 13:18:34", "2016-07-05 15:14:10", "2016-06-19 22:08:15", "2016-07-21 23:14:35", "2016-07-13 01:48:46", "2016-06-08 12:25:49", "2016-02-26 17:01:01", "2016-03-26 19:54:16", "2016-01-27 17:55:44", "2016-01-16 16:40:30", "2016-02-15 14:13:47", "2016-06-07 01:29:06", "2016-06-09 19:32:27", "2016-04-01 09:21:14", "2016-02-20 00:06:20", "2016-01-01 02:52:10", "2016-01-20 00:26:15", "2016-07-18 18:33:05", "2016-01-23 04:47:37", "2016-02-29 11:00:06", "2016-02-13 04:16:08", "2016-03-08 10:39:16", "2016-07-04 11:03:49", "2016-02-10 13:46:35", "2016-05-13 14:12:39", "2016-05-02 00:01:56", "2016-03-20 22:27:25", "2016-05-19 09:30:12", "2016-03-23 08:52:31", "2016-06-26 04:22:26", "2016-03-20 08:22:50", "2016-03-25 05:05:27", "2016-02-14 07:15:37", "2016-03-26 00:32:02", "2016-03-07 22:32:15", "2016-06-18 05:17:33", "2016-01-01 08:27:06", "2016-04-07 01:57:38", "2016-02-28 22:02:14", "2016-01-21 04:30:43", "2016-07-21 10:01:50", "2016-07-20 01:56:33", "2016-05-26 15:40:12", "2016-03-10 07:07:31", "2016-01-03 23:21:26", "2016-01-02 09:30:11", "2016-01-07 21:21:50", "2016-01-05 20:58:42", "2016-06-17 20:18:27", "2016-06-14 07:02:09", "2016-07-06 05:34:52", "2016-02-27 13:51:44", "2016-05-24 17:42:58", "2016-04-30 15:27:22", "2016-03-30 16:15:59", "2016-05-16 23:21:06", "2016-02-15 20:41:05", "2016-01-23 01:42:28", "2016-02-26 01:18:44", "2016-01-11 02:07:14", "2016-03-05 23:02:11", "2016-01-06 21:43:22", "2016-02-18 03:58:36", "2016-06-29 01:19:21", "2016-04-05 08:18:45", "2016-01-15 01:20:05", "2016-04-04 21:23:13", "2016-05-15 03:10:50", "2016-07-19 12:05:58", "2016-06-10 04:21:57", "2016-03-19 08:00:58", "2016-03-04 14:33:38", "2016-07-22 11:05:10", "2016-02-11 11:50:26", "2016-02-14 11:36:08", "2016-07-18 02:51:19", "2016-02-10 08:21:13", "2016-01-04 06:37:15", "2016-02-26 19:35:54", "2016-07-13 14:30:14", "2016-06-11 06:47:55", "2016-03-11 10:01:23", "2016-03-22 19:14:47", "2016-06-18 19:10:14", "2016-01-04 04:00:35", "2016-01-04 22:27:25", "2016-06-29 04:23:10", "2016-06-20 08:22:09", "2016-04-16 05:24:33", "2016-01-17 05:07:11", "2016-07-08 22:30:10", "2016-03-27 19:50:11", "2016-04-29 13:38:19", "2016-06-21 00:52:47", "2016-01-17 18:45:55", "2016-06-10 22:21:10", "2016-03-28 23:01:24", "2016-06-04 09:13:29", "2016-04-14 21:37:49", "2016-05-17 18:06:46", "2016-01-20 02:31:36", "2016-07-20 21:53:42", "2016-06-04 09:25:27", "2016-04-22 07:48:33", "2016-04-16 08:36:08", "2016-06-25 00:33:23", "2016-03-23 05:27:35", "2016-02-23 17:37:46", "2016-04-04 11:39:51", "2016-01-30 00:05:37", "2016-02-15 16:18:49", "2016-03-08 05:12:57", "2016-03-11 09:58:32", "2016-04-12 04:22:42", "2016-05-01 23:21:53", "2016-03-24 17:48:31", "2016-03-09 12:10:08", "2016-06-07 05:41:16", "2016-05-31 23:32:00", "2016-01-10 20:18:21", "2016-04-18 07:00:38", "2016-01-12 21:17:15", "2016-05-14 23:08:14", "2016-05-24 10:04:39", "2016-01-09 17:33:03", "2016-07-09 14:55:36", "2016-07-16 14:13:54", "2016-07-23 06:18:51", "2016-05-03 16:02:50", "2016-06-17 23:19:38"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Customer_Behaviour[Timestamp]", "count": 500, "min": "", "max": ""}, {"values": {"label": ["1", "0"], "data": [269, 231]}, "label": "Customer_Behaviour[Clicked on Ad]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0.0", "1.0"], "data": [218, 282]}, "label": "Customer_Behaviour[Area Income]_binarizer_transform", "count": 2, "min": "0.0", "max": "1.0"}, {"values": {"label": ["0.0 - 49.9", "49.9 - 99.8", "99.8 - 149.7", "149.7 - 199.6", "199.6 - 249.5", "249.5 - 299.4", "299.4 - 349.3", "349.3 - 399.2", "399.2 - 449.1", "449.1 - 499.0"], "data": [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]}, "label": "Customer_Behaviour[Ad Topic Line]_stringindexer_transform", "count": 10, "min": 0.0, "max": 499.0}, {"values": {"label": ["0.0 - 49.6", "49.6 - 99.2", "99.2 - 148.8", "148.8 - 198.4", "198.4 - 248.0", "248.0 - 297.6", "297.6 - 347.2", "347.2 - 396.8", "396.8 - 446.4", "446.4 - 496.0"], "data": [53, 50, 49, 50, 49, 50, 50, 49, 50, 50]}, "label": "Customer_Behaviour[City]_stringindexer_transform", "count": 10, "min": 0.0, "max": 496.0}, {"values": {"label": ["0.0 - 20.8", "20.8 - 41.6", "41.6 - 62.4", "62.4 - 83.2", "83.2 - 104.0", "104.0 - 124.8", "124.8 - 145.6", "145.6 - 166.4", "166.4 - 187.2", "187.2 - 208.0"], "data": [103, 83, 63, 59, 40, 42, 42, 26, 21, 21]}, "label": "Customer_Behaviour[Country]_stringindexer_transform", "count": 10, "min": 0.0, "max": 208.0}, {"values": {"label": ["1 - 4", "4 - 7", "7 - 10", "10 - 13", "13 - 16", "16 - 19", "19 - 22", "22 - 25", "25 - 28", "28 - 31"], "data": [46, 48, 50, 58, 55, 54, 43, 48, 45, 53]}, "label": "Customer_Behaviour[Timestamp]_dayofmonth", "count": 10, "min": 1, "max": 31}, {"values": {"label": ["3", "1", "5", "6", "7", "4", "2"], "data": [66, 76, 77, 69, 55, 77, 80]}, "label": "Customer_Behaviour[Timestamp]_month", "count": 7, "min": "1", "max": "7"}, {"values": {"label": ["2016"], "data": [500]}, "label": "Customer_Behaviour[Timestamp]_year", "count": 1, "min": "2016", "max": "2016"}], "stageId": "64ca9c48ab8472757bd245a1", "FESamplePath": "/FileStore/platform/sampleData/64ca9c48ab8472757bd245a1_AutoFE/part-00000-109f3f95-19f8-4a00-a50c-b3b878a97066-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/64ca9c48ab8472757bd245a1_AutoFE/part-00000-109f3f95-19f8-4a00-a50c-b3b878a97066-c000.csv", "originalcount": 1000, "graphdata": {"Customer_Behaviour[Daily Time Spent on Site]": {"label": ["32.0 - 37.8", "37.8 - 43.6", "43.6 - 49.4", "49.4 - 55.2", "55.2 - 61.0", "61.0 - 66.8", "66.8 - 72.6", "72.6 - 78.4", "78.4 - 84.2", "84.2 - 90.0"], "data": [28, 46, 42, 37, 35, 48, 70, 81, 86, 27]}, "Customer_Behaviour[Age]": {"label": ["19.0 - 23.1", "23.1 - 27.2", "27.2 - 31.3", "31.3 - 35.4", "35.4 - 39.5", "39.5 - 43.6", "43.6 - 47.7", "47.7 - 51.8", "51.8 - 55.9", "55.9 - 60"], "data": [20, 53, 101, 76, 80, 60, 48, 33, 18, 11]}, "Customer_Behaviour[Area Income]": {"label": ["14775.0 - 21109.4", "21109.4 - 27443.8", "27443.8 - 33778.2", "33778.2 - 40112.6", "40112.6 - 46447.0", "46447.0 - 52781.4", "52781.4 - 59115.8", "59115.8 - 65450.2", "65450.2 - 71784.6", "71784.6 - 78119.0"], "data": [6, 15, 34, 26, 45, 75, 73, 80, 101, 45]}, "Customer_Behaviour[Daily Internet Usage]": {"label": ["105.0 - 120.6", "120.6 - 136.2", "136.2 - 151.8", "151.8 - 167.4", "167.4 - 183.0", "183.0 - 198.6", "198.6 - 214.2", "214.2 - 229.8", "229.8 - 245.4", "245.4 - 261.0"], "data": [61, 66, 47, 51, 40, 40, 68, 54, 52, 21]}, "Customer_Behaviour[Ad Topic Line]": {"label": ["Centralized neutral neural-net", "Grass-roots coherent extranet", "Customizable multi-tasking website", "Mandatory disintermediate utilization", "Exclusive neutral parallelism", "Monitored systematic hierarchy", "Open-architected impactful productivity", "Multi-layered 4thgeneration knowledge user", "Intuitive exuding service-desk", "Centralized 24/7 installation", "Team-oriented encompassing portal", "Cross-group regional website", "Organized global model", "Phased transitional instruction set", "Streamlined cohesive conglomeration", "Synchronized user-facing core", "Organized client-driven alliance", "Synergized multimedia emulation", "Customer-focused optimizing moderator", "Customizable executive software", "Down-sized uniform info-mediaries", "Streamlined next generation implementation", "Triple-buffered scalable groupware", "Phased dynamic customer loyalty", "Down-sized modular intranet", "Pre-emptive content-based focus group", "Function-based optimizing protocol", "Up-sized secondary software", "Persevering reciprocal firmware", "De-engineered mobile infrastructure", "Customer-focused upward-trending contingency", "User-friendly upward-trending intranet", "Focused intangible moderator", "Customer-focused transitional strategy", "Advanced web-enabled standardization", "Polarized dynamic throughput", "Devolved zero administration intranet", "Cross-platform regional task-force", "Down-sized well-modulated archive", "Realigned zero tolerance emulation", "Versatile transitional monitoring", "User-centric intangible task-force", "Multi-layered user-facing paradigm", "Enterprise-wide client-driven contingency", "Diverse modular interface", "Up-sized incremental encryption", "Managed grid-enabled standardization", "Universal 24/7 implementation", "Customer-focused multi-tasking Internet solution", "Vision-oriented contextually-based extranet", "Centralized tertiary pricing structure", "Synergized context-sensitive database", "Profit-focused dedicated utilization", "Stand-alone tangible moderator", "Polarized tangible collaboration", "Virtual scalable secured line", "Synchronized leadingedge help-desk", "Total 5thgeneration standardization", "Sharable grid-enabled matrix", "Balanced asynchronous hierarchy", "Face-to-face even-keeled website", "User-friendly client-server instruction set", "Assimilated fault-tolerant hub", "Compatible systemic function", "Front-line tangible alliance", "Self-enabling optimal initiative", "Configurable logistical Graphical User Interface", "Virtual bandwidth-monitored initiative", "Cloned object-oriented benchmark", "Fundamental fault-tolerant neural-net", "Compatible intangible customer loyalty", "Distributed 3rdgeneration definition", "Pre-emptive cohesive budgetary management", "Diverse executive groupware", "Synergized cohesive array", "Universal even-keeled analyzer", "Monitored real-time superstructure", "Automated static concept", "Profit-focused attitude-oriented task-force", "Cross-platform multimedia algorithm", "Progressive non-volatile neural-net", "Programmable uniform productivity", "De-engineered fault-tolerant database", "Configurable bottom-line application", "Proactive next generation knowledge user", "Devolved responsive structure", "De-engineered solution-oriented open architecture", "Customizable modular Internet solution", "Stand-alone encompassing throughput", "Re-engineered real-time success", "Digitized contextually-based product", "Organic interactive support", "Function-based stable alliance", "Enterprise-wide foreground emulation", "Customer-focused incremental system engine", "Vision-oriented optimizing middleware", "Extended interactive model", "Upgradable even-keeled challenge", "Horizontal national architecture", "Adaptive contextually-based methodology", "Configurable dynamic adapter", "Self-enabling incremental collaboration", "Secured scalable Graphical User Interface", "Reverse-engineered well-modulated capability", "Integrated coherent pricing structure", "Upgradable directional system engine", "Public-key non-volatile implementation", "Horizontal high-level concept", "Reduced multimedia project", "Object-based modular functionalities", "Organic asynchronous hierarchy", "Proactive client-server productivity", "Balanced value-added database", "Seamless composite budgetary management", "Face-to-face reciprocal methodology", "Upgradable even-keeled hardware", "Versatile responsive knowledge user", "Proactive radical support", "Versatile content-based protocol", "Seamless cohesive conglomeration", "De-engineered actuating hierarchy", "Balanced motivating help-desk", "Sharable optimal capacity", "Advanced systemic productivity", "User-friendly bandwidth-monitored attitude", "Networked even-keeled workforce", "Cross-group value-added success", "Upgradable asymmetric emulation", "Universal transitional Graphical User Interface", "Triple-buffered 3rdgeneration migration", "Team-oriented dynamic forecast", "Customer-focused zero-defect process improvement", "Focused systemic benchmark", "Organized 24/7 middleware", "Phased full-range hardware", "Polarized analyzing intranet", "Digitized disintermediate ability", "Public-key real-time definition", "Reverse-engineered 24hour hardware", "Distributed maximized ability", "Fully-configurable holistic throughput", "Progressive uniform budgetary management", "Synergistic stable infrastructure", "Expanded zero administration attitude", "Innovative regional structure", "Universal asymmetric workforce", "Business-focused client-driven forecast", "Open-source global strategy", "Stand-alone motivating moratorium", "Profound bottom-line standardization", "Managed client-server access", "Horizontal modular success", "Team-oriented zero-defect initiative", "Progressive intermediate throughput", "Assimilated next generation firmware", "Business-focused background synergy", "Ergonomic methodical encoding", "Switchable analyzing encryption", "Programmable uniform website", "Fundamental methodical support", "Multi-tiered stable leverage", "Cross-group human-resource time-frame", "Realigned intangible benchmark", "Grass-roots mission-critical emulation", "Proactive encompassing paradigm", "Automated multi-state toolset", "Managed didactic flexibility", "Cross-platform neutral system engine", "Focused high-level frame", "Total human-resource flexibility", "Ergonomic zero tolerance encoding", "Cross-platform zero-defect structure", "Innovative maximized groupware", "Cross-platform logistical pricing structure", "Future-proofed fresh-thinking conglomeration", "Sharable multimedia conglomeration", "Robust object-oriented Graphic Interface", "Optimized systemic capability", "Right-sized system-worthy project", "Versatile optimizing projection", "Universal multi-state system engine", "Operative didactic Local Area Network", "Ergonomic empowering frame", "Multi-tiered mobile encoding", "Organic logistical adapter", "Programmable didactic capacity", "Reactive impactful challenge", "Implemented asynchronous application", "Multi-layered secondary software", "Expanded value-added emulation", "Stand-alone empowering benchmark", "Face-to-face dedicated flexibility", "Optimized attitude-oriented initiative", "Virtual executive implementation", "Enhanced intermediate standardization", "Versatile solution-oriented secured line", "User-centric solution-oriented emulation", "Multi-channeled non-volatile website", "Self-enabling zero administration neural-net", "Sharable secondary Graphical User Interface", "Innovative homogeneous alliance", "Diverse leadingedge website", "Optimized intermediate help-desk", "Sharable reciprocal project", "Reactive demand-driven strategy", "Team-oriented bi-directional secured line", "Vision-oriented system-worthy forecast", "Multi-tiered interactive neural-net", "Ameliorated leadingedge help-desk", "Persevering 5thgeneration knowledge user", "Expanded modular application", "Front-line actuating functionalities", "Inverse stable synergy", "Operative full-range forecast", "Operative secondary functionalities", "Managed 24hour analyzer", "Horizontal client-server database", "Digitized homogeneous core", "Ameliorated coherent open architecture", "Vision-oriented bifurcated contingency", "Re-engineered zero-defect open architecture", "Synchronized full-range portal", "Integrated encompassing support", "Realigned 24/7 core", "Enhanced tertiary utilization", "Balanced disintermediate conglomeration", "Networked local secured line", "Programmable empowering orchestration", "Object-based motivating instruction set", "Realigned intermediate application", "Optional tangible productivity", "Virtual homogeneous budgetary management", "Balanced uniform algorithm", "Fully-configurable asynchronous firmware", "Exclusive systematic algorithm", "Exclusive cohesive intranet", "Vision-oriented asynchronous Internet solution", "Sharable 5thgeneration access", "Monitored homogeneous artificial intelligence", "Secured encompassing Graphical User Interface", "Team-oriented executive core", "Reduced background data-warehouse", "Public-key bi-directional Graphical User Interface", "Front-line fresh-thinking installation", "Assimilated multi-state paradigm", "Open-source local approach", "Polarized intangible encoding", "Reactive upward-trending migration", "Customer-focused fault-tolerant implementation", "Customizable homogeneous contingency", "Face-to-face modular budgetary management", "Decentralized bottom-line help-desk", "Visionary mission-critical application", "Stand-alone well-modulated product", "Ameliorated bandwidth-monitored contingency", "Front-line neutral alliance", "Re-engineered optimal policy", "Implemented uniform synergy", "Mandatory empowering focus group", "Intuitive global website", "Synergized clear-thinking protocol", "Triple-buffered multi-state complexity", "Enhanced intangible portal", "Switchable real-time product", "Up-sized asymmetric firmware", "Customer-focused explicit challenge", "Extended leadingedge solution", "Front-line bifurcated ability", "Virtual 5thgeneration emulation", "Cloned 5thgeneration orchestration", "Organic bottom-line service-desk", "Robust logistical utilization", "Enhanced dedicated support", "Synergistic fresh-thinking array", "Intuitive dynamic attitude", "Business-focused value-added definition", "Synchronized systemic hierarchy", "Reactive demand-driven capacity", "Innovative user-facing extranet", "Front-line intermediate database", "Balanced dynamic application", "Reduced global support", "Triple-buffered demand-driven alliance", "Visionary reciprocal circuit", "Sharable bottom-line solution", "Upgradable asynchronous circuit", "Customer-focused empowering ability", "Stand-alone national attitude", "Advanced full-range migration", "Seamless object-oriented structure", "Distributed tertiary system engine", "Total 5thgeneration encoding", "Progressive empowering alliance", "Innovative background conglomeration", "Polarized 6thgeneration info-mediaries", "Operative system-worthy protocol", "Extended systemic policy", "Self-enabling holistic process improvement", "Horizontal client-driven hierarchy", "User-friendly asymmetric info-mediaries", "Polarized bandwidth-monitored moratorium", "Centralized systematic knowledgebase", "Future-proofed grid-enabled implementation", "Profound zero administration instruction set", "Up-sized executive moderator", "Ergonomic client-driven application", "Multi-channeled asynchronous open system", "Adaptive 24hour Graphic Interface", "Horizontal multi-state interface", "Diverse stable circuit", "Customer-focused attitude-oriented instruction set", "Secured clear-thinking middleware", "Right-sized value-added initiative", "Multi-channeled reciprocal artificial intelligence", "Realigned systematic function", "Networked high-level structure", "Advanced modular Local Area Network", "Reduced bi-directional strategy", "Digitized heuristic solution", "Multi-layered non-volatile Graphical User Interface", "Synchronized multimedia model", "Ameliorated upward-trending definition", "Multi-tiered human-resource structure", "Managed upward-trending instruction set", "Phased zero administration success", "Configurable multi-state utilization", "Diverse multi-tasking parallelism", "Up-sized tertiary contingency", "Expanded clear-thinking core", "Open-source coherent monitoring", "Persevering tertiary capability", "Enterprise-wide bi-directional secured line", "Total directional approach", "Self-enabling didactic pricing structure", "Customizable tangible hierarchy", "Intuitive explicit conglomeration", "Right-sized asynchronous website", "Advanced 5thgeneration capability", "Universal asymmetric archive", "Triple-buffered regional toolset", "Customizable zero-defect matrix", "Front-line fresh-thinking open system", "Reactive responsive emulation", "Enterprise-wide local matrices", "Persevering even-keeled help-desk", "Grass-roots eco-centric instruction set", "Fully-configurable incremental Graphical User Interface", "Mandatory 3rdgeneration moderator", "Managed eco-centric encoding", "Visionary multi-tasking alliance", "Ameliorated tangible hierarchy", "Enhanced maximized access", "Re-contextualized systemic time-frame", "Reactive bi-directional workforce", "Re-engineered neutral success", "Multi-lateral empowering throughput", "Proactive asymmetric definition", "Pre-emptive zero tolerance Local Area Network", "Reduced incremental productivity", "Realigned scalable standardization", "Team-oriented context-sensitive installation", "Pre-emptive systematic budgetary management", "Multi-layered tangible portal", "De-engineered tertiary secured line", "Realigned next generation projection", "Decentralized needs-based analyzer", "Multi-layered fresh-thinking process improvement", "Persevering eco-centric flexibility", "Triple-buffered needs-based Local Area Network", "Polarized multimedia system engine", "Face-to-face analyzing encryption", "Self-enabling even-keeled methodology", "Public-key zero-defect analyzer", "Integrated motivating neural-net", "Operative scalable emulation", "Robust responsive collaboration", "Programmable empowering middleware", "Public-key mission-critical core", "Mandatory dedicated data-warehouse", "Re-engineered responsive definition", "Cloned explicit middleware", "Inverse high-level capability", "Inverse bi-directional knowledge user", "Monitored dynamic instruction set", "Customer-focused full-range neural-net", "User-centric intangible contingency", "Quality-focused scalable utilization", "Seamless impactful info-mediaries", "Cross-group neutral synergy", "Monitored content-based implementation", "Quality-focused zero-defect budgetary management", "Intuitive fresh-thinking moderator", "Quality-focused hybrid frame", "Business-focused high-level hardware", "Managed disintermediate capability", "Function-based incremental standardization", "Realigned global initiative", "Business-focused maximized complexity", "Upgradable local migration", "Future-proofed modular utilization", "Re-engineered impactful software", "Managed 6thgeneration hierarchy", "Pre-emptive transitional protocol", "Public-key asynchronous matrix", "Grass-roots systematic hardware", "User-centric composite contingency", "Ergonomic neutral portal", "Reverse-engineered maximized focus group", "Public-key intangible Graphical User Interface", "Advanced local task-force", "Profound well-modulated array", "Multi-layered fresh-thinking neural-net", "Synchronized grid-enabled moratorium", "Total grid-enabled application", "Vision-oriented uniform knowledgebase", "Business-focused holistic benchmark", "Public-key solution-oriented focus group", "User-friendly content-based customer loyalty", "Reactive national success", "Networked regional Local Area Network", "Assimilated homogeneous service-desk", "Monitored local Internet solution", "Customizable methodical Graphical User Interface", "Front-line systemic capability", "Programmable high-level benchmark", "Grass-roots empowering paradigm", "Switchable secondary ability", "Profit-focused systemic support", "Phased content-based middleware", "Synergized well-modulated Graphical User Interface", "Implemented bottom-line implementation", "Monitored context-sensitive initiative", "Pre-emptive client-server open system", "Synergistic non-volatile analyzer", "Object-based optimal solution", "Profound dynamic attitude", "Networked responsive application", "Customer-focused impactful success", "Enhanced regional conglomeration", "Customizable value-added project", "Switchable multi-state success", "Fundamental clear-thinking knowledgebase", "Front-line incremental access", "Digitized interactive initiative", "Quality-focused 5thgeneration orchestration", "Configurable mission-critical algorithm", "Reduced holistic help-desk", "Organic 3rdgeneration encryption", "Monitored intermediate circuit", "Object-based leadingedge complexity", "Digitized zero-defect implementation", "Configurable impactful capacity", "Distributed leadingedge orchestration", "Multi-channeled 3rdgeneration model", "Devolved exuding Local Area Network", "Phased hybrid intranet", "Inverse national core", "Quality-focused zero tolerance matrices", "Decentralized 24hour approach", "Distributed bifurcated challenge", "Open-architected system-worthy ability", "Centralized client-driven workforce", "Proactive interactive service-desk", "Assimilated encompassing portal", "Cross-group global orchestration", "Down-sized bandwidth-monitored core", "Inverse zero-defect capability", "Multi-tiered real-time implementation", "Assimilated stable encryption", "Cloned optimal leverage", "De-engineered attitude-oriented projection", "Extended grid-enabled hierarchy", "Mandatory coherent groupware", "Triple-buffered systematic info-mediaries", "Centralized value-added hierarchy", "Front-line even-keeled website", "Persistent fault-tolerant service-desk", "Up-sized maximized model", "Organized global flexibility", "Balanced executive definition", "Focused coherent success", "Robust context-sensitive neural-net", "Fundamental tangible moratorium", "Sharable value-added solution", "Assimilated discrete strategy", "Phased fault-tolerant definition", "Pre-emptive next generation Internet solution", "Decentralized methodical capability", "Stand-alone logistical service-desk", "Open-architected intangible strategy", "Diverse directional hardware", "Total bi-directional success", "Progressive 24/7 definition", "Pre-emptive next generation strategy", "Open-source holistic productivity", "Function-based executive moderator", "Triple-buffered foreground encryption", "Monitored 24/7 moratorium", "Vision-oriented real-time framework", "Robust transitional ability"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "Customer_Behaviour[City]": {"label": ["West Brandonton", "West William", "West Dylanberg", "South John", "Harperborough", "South Cathyfurt", "Palmerside", "Port Cassie", "Millerchester", "West Christopher", "Amandahaven", "Garciaside", "Port Sarahshire", "Brendachester", "Robertfurt", "Jensenborough", "Bradleyburgh", "North Regina", "Davidmouth", "Lake Conniefurt", "Lake Christopherfurt", "East Tylershire", "Lake Dustin", "New Tina", "Christopherport", "Port Sarahhaven", "Williamsborough", "North Michael", "Hernandezville", "Erinton", "Hughesport", "New Lucasburgh", "Port Christopherborough", "Millerside", "Lake Jessica", "South Daniel", "Suzannetown", "Brianfurt", "East Michelleberg", "Port Eric", "Timothyfurt", "Guzmanland", "East John", "Heatherberg", "South George", "Codyburgh", "Ramirezside", "East Rachelview", "Curtisport", "Frankbury", "East Eric", "Jacobstad", "East Stephen", "Turnerchester", "Youngfort", "Port Melissaberg", "Aliciatown", "Josephstad", "West Ericfurt", "New Brendafurt", "Kentmouth", "North Russellborough", "Penatown", "Hartmanchester", "Hansenmouth", "West Jessicahaven", "Davilachester", "North Ricardotown", "Millerbury", "Garciaview", "Williamstad", "West Connor", "West Justin", "West Tinashire", "Jamesfurt", "Harveyport", "North Kevinside", "Christinetown", "Petersonfurt", "New Lindaberg", "Port Crystal", "South Jasminebury", "Charlottefort", "West Lindseybury", "Lake David", "Tinaton", "Alexanderfurt", "West Pamela", "West Amanda", "Garciamouth", "South Kyle", "Combsstad", "Lake Allenville", "Port Juan", "Michellefort", "Jessicahaven", "Roberttown", "New Amanda", "North April", "Port Paultown", "East Vincentstad", "New Rebecca", "Port Brookeland", "East Yvonnechester", "Burgessside", "Port Kathleenfort", "Charlenetown", "South Johnnymouth", "Hannaport", "East Anthony", "Rogerburgh", "Andersonchester", "Meyersstad", "Michelleside", "Port Brian", "Kristintown", "Davisfurt", "Alvaradoport", "Monicaview", "Katieport", "East Brittanyville", "West Travismouth", "Brownton", "Keithtown", "South Jade", "Williamsport", "Port Katelynview", "Lake Jesus", "Andrewborough", "New Keithburgh", "Kevinberg", "Lovemouth", "Taylorhaven", "Butlerfort", "Masseyshire", "Port Blake", "Brandymouth", "Port Jessica", "Yuton", "Welchshire", "Timothyport", "Lake Stephenborough", "Silvaton", "Florestown", "Jensenton", "Rivasland", "Helenborough", "Pattymouth", "South Alexisborough", "New Charleschester", "East Breannafurt", "Estesfurt", "South Aaron", "Catherinefort", "North Kimberly", "North Aaronburgh", "Danielview", "Lake Ian", "West Shannon", "South Jackieberg", "North Sarashire", "East Jessefort", "Rochabury", "Wrightview", "Perryburgh", "Richardsonshire", "Kimberlymouth", "Meghanchester", "Tammyshire", "Greerport", "East Sharon", "Johnstonmouth", "East Heatherside", "Chapmanmouth", "Elizabethstad", "East Brettton", "Westshire", "Julietown", "Adamsbury", "North Angelastad", "Amandafort", "Ronaldport", "Estradashire", "Hobbsbury", "New Christinatown", "Port Georgebury", "West Leahton", "Reginamouth", "Jamesmouth", "Brandonbury", "Leahside", "Port Sherrystad", "Josephmouth", "Destinyfurt", "Mezaton", "North Mark", "Brittanyborough", "West Ericaport", "Ericksonmouth", "East Heidi", "New Angelview", "Lake Brandonview", "Morganport", "Browntown", "Bradleyside", "West Ryan", "Johnsontown", "New Henry", "South Lisa", "New Hollyberg", "Staceyfort", "North Brittanyburgh", "Lake Charlottestad", "Tammymouth", "Lake Vanessa", "Port Douglasborough", "Port Aprilville", "Lake Faith", "North Samantha", "Holderville", "Jeffreymouth", "Smithside", "Vanessastad", "Carterland", "Cervantesshire", "North Debrashire", "East Mike", "North Angelatown", "Clarkborough", "Josephberg", "South Jeanneport", "Jonesshire", "Lake James", "Port Jennifer", "Chrismouth", "Port Beth", "West David", "Fraziershire", "Port Derekberg", "West Randy", "Zacharyton", "New Marcusbury", "Huffmanchester", "Williamsfort", "Edwardsport", "Lake Evantown", "Hansenland", "Port Michaelmouth", "Tylerport", "South Davidhaven", "Jonathanland", "North Virginia", "East Jason", "North Cassie", "North Destiny", "West Gabriellamouth", "Alvarezland", "Melanieton", "Waltertown", "Fosterside", "Davidstad", "Lake Tracy", "Dianaville", "Lake Matthew", "Sarahland", "New Patrick", "Nicholasland", "Ronniemouth", "Wrightburgh", "Davidton", "South Manuel", "Brandonstad", "North Tara", "Pruittmouth", "West Guybury", "Johnstad", "Kellytown", "Mackenziemouth", "Zacharystad", "Bowenview", "Jamesberg", "Johnport", "Odomville", "Thomasview", "Port Gregory", "Lake Amy", "Smithburgh", "New Michaeltown", "East Tiffanyport", "Sharpberg", "North Kristine", "Wongland", "Wallacechester", "Bradshawborough", "Andersonton", "Johnsport", "South Ronald", "Lisaberg", "Stewartbury", "Benjaminchester", "North Wesleychester", "Port Jeffrey", "Lake Josetown", "Kimberlyhaven", "Port Jodi", "Sylviaview", "West Michaelhaven", "Walshhaven", "South Jennifer", "South Daniellefort", "Dianashire", "Hammondport", "Hernandezfort", "New Jeffreychester", "South Denisefurt", "North Anna", "Port Destiny", "Wilsonburgh", "Murphymouth", "Taylorberg", "Melissafurt", "East Brianberg", "Townsendfurt", "Robertbury", "New Tinamouth", "Ramosstad", "North Shannon", "West Russell", "Masonhaven", "Derrickhaven", "New Brandy", "East Timothy", "West Alyssa", "Bruceburgh", "Port Robin", "Port Aliciabury", "Port Whitneyhaven", "Jeffreyshire", "North Loriburgh", "South Tomside", "West Brenda", "Greenechester", "Gravesport", "Millerland", "Port Jessicamouth", "Paulport", "Cynthiaside", "New Juan", "Amyfurt", "Harrishaven", "Birdshire", "Jacksonmouth", "Hayesmouth", "Juliaport", "Kimberlytown", "New Johnberg", "Shawstad", "Faithview", "Richardsontown", "East Christopherbury", "Port Christinemouth", "New Paul", "Hartport", "Hurleyborough", "Erikville", "Karenton", "Lake Adrian", "Mollyport", "West Daleborough", "Stephenborough", "Lake Kurtmouth", "West Thomas", "New Tyler", "Reyesland", "Lake Courtney", "Mariebury", "New Jasmine", "Lake Brian", "Lake Kevin", "East Sheriville", "Leonchester", "Taylorport", "Munozberg", "West Barbara", "New Gabriel", "Lake Matthewland", "Jamesville", "West Lucas", "Lake Jasonchester", "Pearsonfort", "Sellerstown", "Carterport", "Greentown", "North Lisachester", "North Alexandra", "Garnerberg", "North Anaport", "Hallfort", "Kingshire", "North Isabellaville", "Reyesfurt", "North Stephanieberg", "Sherrishire", "Port Daniel", "Brownview", "New Maria", "Calebberg", "Gomezport", "Shaneland", "East Aaron", "East Michaelland", "South Patrickfort", "Charlesbury", "West Robertside", "Port Anthony", "Austinland", "South Jaimeview", "South Meredithmouth", "Villanuevaton", "North Garyhaven", "Richardsonmouth", "New Dawnland", "Tranland", "Anthonyfurt", "Christopherchester", "Alexisland", "Johnsonfort", "Port Davidland", "Lake Michael", "West Michaelshire", "Port Calvintown", "Parkerhaven", "Cassandratown", "West Dannyberg", "East Debraborough", "Colemanshire", "Karenmouth", "New Jessicaport", "Luisfurt", "West Sharon", "Lake Cynthia", "Lake Jacob", "Meyerchester", "Wintersfort", "East Carlos", "Blairville", "Mosleyburgh", "West Wendyland", "Lawrenceborough", "Kennethview", "Pamelamouth", "Lesliefort", "Garciatown", "Evansfurt", "Barbershire", "Turnerville", "West Zacharyborough", "Robinsonland", "Haleberg", "Estradafurt", "Lake Hailey", "Meaganfort", "North Monicaville", "Mullenside", "Sanchezland", "Rogerland", "Newmanberg", "Cannonbury", "Lisamouth", "Port Brittanyville", "Carterton", "South Dianeshire", "Villanuevastad", "Lake Lisa", "Valerieland", "Patrickmouth", "Lake Deannaborough", "Davieshaven", "North Kennethside", "Shelbyport", "New Taylorburgh", "Deannaville", "East Johnport", "Wagnerchester", "Daisymouth", "Lake Joseph", "North Brandon", "Wademouth", "North Raymond", "East Troyhaven", "Lake Jose", "Ashleymouth", "Lake Danielle", "West Dennis", "Austinborough", "South Pamela", "North Laurenview"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "Customer_Behaviour[Male]": {"label": ["0"], "data": [500]}, "Customer_Behaviour[Country]": {"label": ["Qatar", "Barbados", "Palestinian Territory", "Burundi", "Tokelau", "Greece", "British Virgin Islands", "Senegal", "Liberia", "Italy", "Turkey", "Israel", "Svalbard & Jan Mayen Islands", "Iran", "Christmas Island", "Rwanda", "Turks and Caicos Islands", "Norfolk Island", "Bouvet Island (Bouvetoya)", "Ukraine", "Montserrat", "Timor-Leste", "Puerto Rico", "Australia", "Jersey", "Lithuania", "Egypt", "Western Sahara", "Guinea", "Madagascar", "United Arab Emirates", "Somalia", "Bhutan", "Uzbekistan", "South Africa", "Hungary", "Saint Martin", "Cuba", "Belize", "Antarctica (the territory South of 60 deg S)", "Dominica", "Liechtenstein", "Equatorial Guinea", "Mongolia", "Kuwait", "Vietnam", "Guatemala", "Peru", "Singapore", "Canada", "Algeria", "Fiji", "Kenya", "Cyprus", "Samoa", "Mauritania", "Czech Republic", "Chile", "Turkmenistan", "Latvia", "Kazakhstan", "Bahrain", "Saint Pierre and Miquelon", "Afghanistan", "Tajikistan", "France", "Albania", "Papua New Guinea", "Thailand", "Honduras", "French Guiana", "Northern Mariana Islands", "Lebanon", "Tonga", "French Southern Territories", "Serbia", "New Caledonia", "Seychelles", "Mayotte", "Cambodia", "Taiwan", "Austria", "Zambia", "Anguilla", "Martinique", "Eritrea", "Mexico", "Nauru", "Saint Barthelemy", "Antigua and Barbuda", "Cote d'Ivoire", "Zimbabwe", "Saint Kitts and Nevis", "Bangladesh", "Faroe Islands", "Heard Island and McDonald Islands", "Bahamas", "Netherlands Antilles", "Tuvalu", "Congo", "Dominican Republic", "Trinidad and Tobago", "United States of America", "Ecuador", "Spain", "Indonesia", "Belgium", "American Samoa", "Guernsey", "China", "Macao", "Djibouti", "Romania", "Cayman Islands", "Ethiopia", "Morocco", "New Zealand", "Guam", "Venezuela", "United Kingdom", "Yemen", "Poland", "Saudi Arabia", "Ghana", "Micronesia", "Palau", "Belarus", "Benin", "Guyana", "Hong Kong", "Malta", "Japan", "Namibia", "Monaco", "Sweden", "Costa Rica", "Netherlands", "Sierra Leone", "Uganda", "Brunei Darussalam", "Luxembourg", "United States Virgin Islands", "Chad", "Moldova", "Malawi", "Uruguay", "Armenia", "Denmark", "El Salvador", "San Marino", "Paraguay", "Jamaica", "Georgia", "Brazil", "Syrian Arab Republic", "Maldives", "Haiti", "Montenegro", "Tunisia", "Iceland", "Myanmar", "Bosnia and Herzegovina", "Russian Federation", "Saint Helena", "Niger", "Sri Lanka", "Croatia", "Azerbaijan", "Central African Republic", "Falkland Islands (Malvinas)", "United States Minor Outlying Islands", "Gibraltar", "Togo", "Angola", "Estonia", "Colombia", "Finland", "Philippines", "Malaysia", "Greenland", "Guadeloupe", "Wallis and Futuna", "Gabon", "Holy See (Vatican City State)", "Cameroon", "Niue", "Pitcairn Islands", "Libyan Arab Jamahiriya", "Kyrgyz Republic", "Swaziland", "French Polynesia", "Bolivia", "Portugal", "Panama", "Pakistan", "Ireland", "Lao People's Democratic Republic", "Tanzania", "Comoros", "Nepal", "Guinea-Bissau", "Mauritius", "Reunion", "Vanuatu", "Slovakia (Slovak Republic)", "South Georgia and the South Sandwich Islands", "Bulgaria", "India", "Nicaragua"], "data": [3, 4, 1, 5, 2, 4, 2, 5, 5, 2, 3, 3, 3, 4, 3, 4, 4, 3, 4, 4, 1, 1, 5, 6, 4, 3, 3, 4, 3, 3, 3, 2, 1, 1, 5, 5, 2, 2, 4, 1, 2, 3, 1, 2, 1, 3, 2, 5, 4, 3, 5, 5, 3, 4, 5, 1, 2, 2, 3, 1, 2, 1, 4, 6, 1, 4, 4, 5, 2, 2, 2, 1, 2, 3, 2, 2, 1, 3, 4, 2, 5, 2, 1, 1, 1, 3, 4, 2, 2, 3, 3, 3, 1, 2, 1, 1, 3, 2, 1, 2, 2, 1, 1, 4, 1, 2, 3, 4, 2, 5, 3, 2, 1, 3, 2, 2, 3, 2, 5, 2, 3, 3, 2, 2, 2, 2, 2, 2, 1, 3, 2, 1, 2, 2, 3, 2, 2, 1, 1, 3, 4, 2, 2, 3, 3, 2, 1, 2, 1, 2, 1, 3, 2, 4, 3, 2, 1, 1, 2, 1, 3, 2, 2, 2, 1, 2, 5, 2, 1, 1, 1, 2, 2, 1, 2, 1, 4, 1, 2, 4, 1, 2, 4, 2, 3, 2, 1, 1, 2, 2, 1, 2, 2, 1, 3, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1]}, "Customer_Behaviour[Timestamp]": {"label": ["2016-03-16 20:19:01", "2016-03-24 09:31:49", "2016-01-30 19:20:41", "2016-05-20 08:49:33", "2016-06-13 17:27:09", "2016-07-19 08:32:10", "2016-04-14 05:08:35", "2016-01-14 14:00:09", "2016-03-11 06:49:10", "2016-04-25 11:01:54", "2016-02-14 07:36:58", "2016-02-17 11:42:00", "2016-04-10 00:13:47", "2016-05-26 22:49:47", "2016-06-03 00:55:23", "2016-01-08 00:17:27", "2016-06-05 22:11:34", "2016-04-22 20:10:22", "2016-02-01 09:00:55", "2016-02-17 21:55:29", "2016-01-05 17:56:52", "2016-04-19 07:34:28", "2016-06-12 15:25:44", "2016-03-14 23:13:11", "2016-05-13 11:51:10", "2016-02-20 20:47:05", "2016-01-08 22:47:10", "2016-03-28 08:46:26", "2016-07-03 09:22:30", "2016-04-28 05:50:25", "2016-04-03 05:10:31", "2016-01-16 23:37:51", "2016-07-13 16:12:24", "2016-07-13 04:10:53", "2016-06-11 18:32:12", "2016-02-26 19:48:23", "2016-06-21 13:15:21", "2016-04-18 15:54:33", "2016-05-04 09:00:24", "2016-06-13 18:50:00", "2016-01-03 16:01:40", "2016-01-12 10:07:29", "2016-05-13 06:09:28", "2016-06-29 02:43:29", "2016-04-10 19:48:01", "2016-02-14 06:51:43", "2016-05-09 02:58:58", "2016-01-29 03:54:19", "2016-07-14 12:07:10", "2016-01-10 23:14:30", "2016-06-23 01:22:43", "2016-02-28 18:52:44", "2016-01-03 03:22:15", "2016-01-04 21:48:38", "2016-05-24 13:30:38", "2016-02-04 08:53:37", "2016-02-21 07:42:48", "2016-06-26 17:16:26", "2016-01-03 05:34:33", "2016-03-08 18:00:43", "2016-05-17 06:14:20", "2016-02-11 02:40:02", "2016-06-16 02:01:24", "2016-02-03 04:21:14", "2016-06-21 03:14:41", "2016-05-06 21:07:31", "2016-06-12 17:52:43", "2016-01-11 07:36:22", "2016-03-24 09:12:52", "2016-02-14 07:30:24", "2016-02-10 19:20:51", "2016-04-23 14:34:38", "2016-06-18 17:56:32", "2016-07-19 07:59:18", "2016-06-26 11:52:18", "2016-05-04 00:01:33", "2016-05-23 21:14:38", "2016-07-23 14:47:23", "2016-02-10 15:23:17", "2016-04-24 13:42:15", "2016-01-09 04:53:22", "2016-06-18 17:23:26", "2016-06-29 13:35:05", "2016-04-13 05:42:52", "2016-02-26 09:18:48", "2016-07-18 11:33:31", "2016-01-05 00:02:53", "2016-05-15 01:03:06", "2016-05-05 09:28:36", "2016-07-05 18:59:45", "2016-05-05 11:09:29", "2016-03-25 15:17:39", "2016-01-23 15:02:13", "2016-02-01 20:30:35", "2016-01-23 17:39:06", "2016-05-09 21:54:38", "2016-06-13 13:59:51", "2016-02-19 07:29:30", "2016-04-20 00:41:53", "2016-04-12 14:01:08", "2016-03-15 11:25:48", "2016-01-28 11:50:40", "2016-07-06 15:56:39", "2016-04-18 00:49:33", "2016-07-17 01:13:56", "2016-06-09 14:24:06", "2016-05-31 02:17:18", "2016-04-10 03:30:16", "2016-02-09 07:21:25", "2016-06-17 17:11:16", "2016-01-28 07:10:29", "2016-04-08 22:48:25", "2016-06-17 09:58:46", "2016-04-25 21:15:39", "2016-05-09 08:44:55", "2016-02-29 23:56:06", "2016-04-03 06:17:22", "2016-04-17 21:39:11", "2016-07-09 16:23:33", "2016-06-28 12:51:02", "2016-06-18 16:32:58", "2016-05-28 12:38:37", "2016-07-16 23:08:54", "2016-02-17 23:47:00", "2016-06-29 09:04:31", "2016-05-09 10:21:48", "2016-04-04 18:36:59", "2016-02-20 10:52:51", "2016-05-30 20:07:59", "2016-03-10 01:36:19", "2016-03-10 22:28:52", "2016-02-05 15:26:37", "2016-05-31 21:41:46", "2016-06-11 09:37:52", "2016-04-30 19:42:04", "2016-07-18 01:36:37", "2016-03-22 06:41:38", "2016-06-28 09:19:06", "2016-06-30 00:19:33", "2016-04-03 11:38:36", "2016-04-08 14:35:44", "2016-03-25 19:02:35", "2016-05-12 21:32:06", "2016-05-10 14:12:31", "2016-05-27 05:35:27", "2016-06-12 21:21:53", "2016-01-07 13:58:51", "2016-02-07 17:06:35", "2016-02-15 07:27:41", "2016-03-24 09:34:00", "2016-04-04 20:01:12", "2016-07-08 17:14:01", "2016-02-01 00:52:29", "2016-01-01 20:17:49", "2016-05-01 00:23:13", "2016-05-08 22:24:27", "2016-04-05 05:54:15", "2016-07-11 18:12:43", "2016-02-14 10:06:49", "2016-04-01 01:57:12", "2016-04-06 01:19:08", "2016-02-24 19:08:11", "2016-04-27 18:25:30", "2016-03-09 02:07:17", "2016-07-24 00:22:16", "2016-02-13 13:57:53", "2016-05-08 10:25:08", "2016-02-17 18:50:57", "2016-01-29 05:39:16", "2016-02-23 13:55:48", "2016-07-09 11:18:02", "2016-03-19 11:09:36", "2016-04-07 10:51:05", "2016-07-17 14:26:04", "2016-03-01 22:06:37", "2016-01-13 20:38:35", "2016-06-23 11:05:01", "2016-01-18 02:51:13", "2016-07-18 04:53:22", "2016-07-01 01:12:04", "2016-05-02 15:31:28", "2016-01-14 09:27:59", "2016-07-16 10:14:04", "2016-02-03 16:54:33", "2016-03-12 07:18:36", "2016-05-20 00:00:48", "2016-04-15 15:07:17", "2016-06-29 02:48:44", "2016-07-14 22:43:29", "2016-01-23 21:15:57", "2016-06-01 03:17:50", "2016-03-15 06:54:21", "2016-02-14 14:38:01", "2016-05-04 05:01:37", "2016-05-12 12:11:12", "2016-07-23 05:21:39", "2016-01-23 13:14:18", "2016-01-05 11:53:17", "2016-04-28 21:58:25", "2016-02-12 08:46:15", "2016-07-11 13:23:37", "2016-01-29 00:45:19", "2016-01-05 16:26:44", "2016-06-10 00:35:15", "2016-01-01 15:14:24", "2016-04-24 13:46:10", "2016-05-02 18:37:01", "2016-04-07 18:52:57", "2016-05-19 06:37:38", "2016-01-14 08:27:04", "2016-04-13 07:07:36", "2016-04-07 20:38:02", "2016-03-10 15:07:44", "2016-05-01 08:27:12", "2016-03-18 09:08:39", "2016-05-26 06:03:57", "2016-04-29 14:10:00", "2016-02-24 07:13:00", "2016-03-26 19:37:46", "2016-03-31 08:53:43", "2016-06-14 12:08:10", "2016-05-11 19:13:42", "2016-02-28 03:34:35", "2016-05-01 09:23:25", "2016-05-30 08:02:27", "2016-05-29 18:12:00", "2016-05-10 17:13:47", "2016-03-30 05:29:38", "2016-01-24 13:41:38", "2016-05-23 00:32:54", "2016-05-15 18:44:50", "2016-05-27 12:45:37", "2016-02-26 06:00:16", "2016-02-21 23:07:11", "2016-04-29 14:08:26", "2016-02-11 17:02:07", "2016-07-22 07:44:43", "2016-06-26 02:34:15", "2016-03-20 02:44:13", "2016-04-01 05:17:28", "2016-02-12 05:20:19", "2016-04-29 20:40:21", "2016-06-27 21:51:47", "2016-05-31 00:58:37", "2016-05-27 08:53:51", "2016-05-09 07:13:27", "2016-03-05 12:03:41", "2016-01-15 22:49:45", "2016-02-12 03:39:09", "2016-07-23 04:04:42", "2016-02-24 04:11:37", "2016-02-17 20:22:49", "2016-02-12 01:55:38", "2016-01-11 08:18:12", "2016-04-22 22:01:21", "2016-02-04 03:10:17", "2016-02-21 20:09:12", "2016-06-19 23:04:45", "2016-01-03 04:39:47", "2016-03-27 08:32:37", "2016-07-10 16:25:56", "2016-06-25 04:21:33", "2016-05-16 18:51:59", "2016-06-25 18:17:53", "2016-04-21 19:56:24", "2016-03-06 11:36:06", "2016-04-04 03:57:48", "2016-06-03 21:43:21", "2016-03-27 00:53:11", "2016-03-13 20:35:42", "2016-06-03 03:36:18", "2016-01-28 20:59:32", "2016-04-20 21:49:22", "2016-05-02 07:00:58", "2016-01-27 12:38:16", "2016-04-12 03:26:39", "2016-02-09 05:28:18", "2016-04-27 09:27:58", "2016-04-16 11:53:43", "2016-02-08 00:23:38", "2016-02-11 13:26:22", "2016-06-08 18:54:01", "2016-05-03 21:19:58", "2016-04-07 03:56:16", "2016-02-14 17:05:15", "2016-04-30 08:07:13", "2016-03-09 14:45:33", "2016-07-07 13:37:34", "2016-04-01 16:21:05", "2016-03-15 15:49:14", "2016-07-01 04:41:57", "2016-07-08 21:18:32", "2016-06-10 11:31:33", "2016-03-09 14:57:11", "2016-03-14 06:46:14", "2016-04-07 16:02:02", "2016-02-04 13:30:32", "2016-05-17 04:27:31", "2016-04-03 10:07:56", "2016-04-04 21:30:46", "2016-07-06 16:00:33", "2016-01-14 00:23:10", "2016-02-05 19:06:01", "2016-03-12 01:39:19", "2016-05-28 20:41:50", "2016-02-12 22:51:08", "2016-02-29 12:31:57", "2016-01-17 15:10:31", "2016-05-27 06:19:27", "2016-03-19 14:23:45", "2016-07-23 04:37:05", "2016-07-19 18:06:22", "2016-02-10 06:52:07", "2016-05-23 02:15:04", "2016-06-05 13:16:24", "2016-01-21 23:48:29", "2016-06-05 00:29:13", "2016-05-24 18:35:58", "2016-04-22 08:31:24", "2016-04-15 11:51:14", "2016-07-02 00:24:22", "2016-03-04 10:13:48", "2016-04-25 07:30:21", "2016-07-17 01:58:53", "2016-04-27 04:28:17", "2016-07-02 21:22:23", "2016-06-19 09:24:35", "2016-06-12 05:31:19", "2016-01-06 13:20:01", "2016-01-31 04:10:20", "2016-05-15 20:48:40", "2016-03-17 05:00:12", "2016-07-20 09:27:24", "2016-04-15 14:45:48", "2016-01-20 19:09:37", "2016-02-15 07:55:10", "2016-02-09 19:37:52", "2016-01-25 07:52:53", "2016-01-09 07:28:16", "2016-05-26 13:18:30", "2016-06-28 20:13:41", "2016-05-29 07:29:27", "2016-04-17 15:46:03", "2016-04-10 14:48:35", "2016-04-16 16:38:35", "2016-05-03 08:21:23", "2016-05-22 00:01:58", "2016-03-30 19:09:50", "2016-01-09 15:49:28", "2016-04-18 03:41:56", "2016-03-27 16:41:29", "2016-01-27 20:47:57", "2016-02-07 07:41:06", "2016-04-19 05:15:28", "2016-02-16 18:21:36", "2016-03-25 08:40:15", "2016-03-16 00:28:10", "2016-03-03 22:31:16", "2016-02-26 09:54:33", "2016-06-24 05:50:22", "2016-05-23 21:00:45", "2016-05-12 04:35:59", "2016-02-17 07:05:57", "2016-05-11 22:02:17", "2016-02-29 19:26:35", "2016-01-30 16:15:29", "2016-01-31 06:14:10", "2016-05-22 21:54:23", "2016-03-01 10:01:35", "2016-04-04 08:19:54", "2016-05-15 13:18:34", "2016-07-05 15:14:10", "2016-06-19 22:08:15", "2016-07-21 23:14:35", "2016-07-13 01:48:46", "2016-06-08 12:25:49", "2016-02-26 17:01:01", "2016-03-26 19:54:16", "2016-01-27 17:55:44", "2016-01-16 16:40:30", "2016-02-15 14:13:47", "2016-06-07 01:29:06", "2016-06-09 19:32:27", "2016-04-01 09:21:14", "2016-02-20 00:06:20", "2016-01-01 02:52:10", "2016-01-20 00:26:15", "2016-07-18 18:33:05", "2016-01-23 04:47:37", "2016-02-29 11:00:06", "2016-02-13 04:16:08", "2016-03-08 10:39:16", "2016-07-04 11:03:49", "2016-02-10 13:46:35", "2016-05-13 14:12:39", "2016-05-02 00:01:56", "2016-03-20 22:27:25", "2016-05-19 09:30:12", "2016-03-23 08:52:31", "2016-06-26 04:22:26", "2016-03-20 08:22:50", "2016-03-25 05:05:27", "2016-02-14 07:15:37", "2016-03-26 00:32:02", "2016-03-07 22:32:15", "2016-06-18 05:17:33", "2016-01-01 08:27:06", "2016-04-07 01:57:38", "2016-02-28 22:02:14", "2016-01-21 04:30:43", "2016-07-21 10:01:50", "2016-07-20 01:56:33", "2016-05-26 15:40:12", "2016-03-10 07:07:31", "2016-01-03 23:21:26", "2016-01-02 09:30:11", "2016-01-07 21:21:50", "2016-01-05 20:58:42", "2016-06-17 20:18:27", "2016-06-14 07:02:09", "2016-07-06 05:34:52", "2016-02-27 13:51:44", "2016-05-24 17:42:58", "2016-04-30 15:27:22", "2016-03-30 16:15:59", "2016-05-16 23:21:06", "2016-02-15 20:41:05", "2016-01-23 01:42:28", "2016-02-26 01:18:44", "2016-01-11 02:07:14", "2016-03-05 23:02:11", "2016-01-06 21:43:22", "2016-02-18 03:58:36", "2016-06-29 01:19:21", "2016-04-05 08:18:45", "2016-01-15 01:20:05", "2016-04-04 21:23:13", "2016-05-15 03:10:50", "2016-07-19 12:05:58", "2016-06-10 04:21:57", "2016-03-19 08:00:58", "2016-03-04 14:33:38", "2016-07-22 11:05:10", "2016-02-11 11:50:26", "2016-02-14 11:36:08", "2016-07-18 02:51:19", "2016-02-10 08:21:13", "2016-01-04 06:37:15", "2016-02-26 19:35:54", "2016-07-13 14:30:14", "2016-06-11 06:47:55", "2016-03-11 10:01:23", "2016-03-22 19:14:47", "2016-06-18 19:10:14", "2016-01-04 04:00:35", "2016-01-04 22:27:25", "2016-06-29 04:23:10", "2016-06-20 08:22:09", "2016-04-16 05:24:33", "2016-01-17 05:07:11", "2016-07-08 22:30:10", "2016-03-27 19:50:11", "2016-04-29 13:38:19", "2016-06-21 00:52:47", "2016-01-17 18:45:55", "2016-06-10 22:21:10", "2016-03-28 23:01:24", "2016-06-04 09:13:29", "2016-04-14 21:37:49", "2016-05-17 18:06:46", "2016-01-20 02:31:36", "2016-07-20 21:53:42", "2016-06-04 09:25:27", "2016-04-22 07:48:33", "2016-04-16 08:36:08", "2016-06-25 00:33:23", "2016-03-23 05:27:35", "2016-02-23 17:37:46", "2016-04-04 11:39:51", "2016-01-30 00:05:37", "2016-02-15 16:18:49", "2016-03-08 05:12:57", "2016-03-11 09:58:32", "2016-04-12 04:22:42", "2016-05-01 23:21:53", "2016-03-24 17:48:31", "2016-03-09 12:10:08", "2016-06-07 05:41:16", "2016-05-31 23:32:00", "2016-01-10 20:18:21", "2016-04-18 07:00:38", "2016-01-12 21:17:15", "2016-05-14 23:08:14", "2016-05-24 10:04:39", "2016-01-09 17:33:03", "2016-07-09 14:55:36", "2016-07-16 14:13:54", "2016-07-23 06:18:51", "2016-05-03 16:02:50", "2016-06-17 23:19:38"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "Customer_Behaviour[Clicked on Ad]": {"label": ["1", "0"], "data": [269, 231]}, "Customer_Behaviour[Area Income]_binarizer_transform": {"label": ["0.0", "1.0"], "data": [218, 282]}, "Customer_Behaviour[Ad Topic Line]_stringindexer_transform": {"label": ["0.0 - 49.9", "49.9 - 99.8", "99.8 - 149.7", "149.7 - 199.6", "199.6 - 249.5", "249.5 - 299.4", "299.4 - 349.3", "349.3 - 399.2", "399.2 - 449.1", "449.1 - 499.0"], "data": [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]}, "Customer_Behaviour[City]_stringindexer_transform": {"label": ["0.0 - 49.6", "49.6 - 99.2", "99.2 - 148.8", "148.8 - 198.4", "198.4 - 248.0", "248.0 - 297.6", "297.6 - 347.2", "347.2 - 396.8", "396.8 - 446.4", "446.4 - 496.0"], "data": [53, 50, 49, 50, 49, 50, 50, 49, 50, 50]}, "Customer_Behaviour[Country]_stringindexer_transform": {"label": ["0.0 - 20.8", "20.8 - 41.6", "41.6 - 62.4", "62.4 - 83.2", "83.2 - 104.0", "104.0 - 124.8", "124.8 - 145.6", "145.6 - 166.4", "166.4 - 187.2", "187.2 - 208.0"], "data": [103, 83, 63, 59, 40, 42, 42, 26, 21, 21]}, "Customer_Behaviour[Timestamp]_dayofmonth": {"label": ["1 - 4", "4 - 7", "7 - 10", "10 - 13", "13 - 16", "16 - 19", "19 - 22", "22 - 25", "25 - 28", "28 - 31"], "data": [46, 48, 50, 58, 55, 54, 43, 48, 45, 53]}, "Customer_Behaviour[Timestamp]_month": {"label": ["3", "1", "5", "6", "7", "4", "2"], "data": [66, 76, 77, 69, 55, 77, 80]}, "Customer_Behaviour[Timestamp]_year": {"label": ["2016"], "data": [500]}}}, "ManualFE": {"FE": [{"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Daily Time Spent on Site]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "64.9", "stddev": "15.66", "min": "32.6", "max": "90.97", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Daily ..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Age]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "36.42", "stddev": "8.64", "min": "19", "max": "60", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Age]"}, {"transformationsData": [{"feature_label": "Customer_Behaviour[Area Income]", "threshold": 54913.42, "transformation_label": "Binarizer"}], "feature": "Customer_Behaviour[Area Income]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "54913.92", "stddev": "14040.03", "min": "14775.5", "max": "78119.5", "missing": "0"}, "transformation": [{"transformation": "Binarizer", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Area I..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Daily Internet Usage]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "177.45", "stddev": "43.92", "min": "105.0", "max": "261.02", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Daily ..."}, {"transformationsData": [{"feature_label": "Customer_Behaviour[Ad Topic Line]", "transformation_label": "String Indexer"}], "feature": "Customer_Behaviour[Ad Topic Line]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Adaptive 24hour Graphic Interface", "max": "Visionary reciprocal circuit", "missing": "0", "distinct": "500"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Ad Top..."}, {"transformationsData": [{"feature_label": "Customer_Behaviour[City]", "transformation_label": "String Indexer"}], "feature": "Customer_Behaviour[City]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Adamsbury", "max": "Zacharyton", "missing": "0", "distinct": "497"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[City]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Male]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Male]"}, {"transformationsData": [{"feature_label": "Customer_Behaviour[Country]", "transformation_label": "String Indexer"}], "feature": "Customer_Behaviour[Country]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Afghanistan", "max": "Zimbabwe", "missing": "0", "distinct": "209"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Countr..."}, {"transformationsData": [{"feature_label": "Customer_Behaviour[Timestamp]", "transformation_label": "Extract Date"}], "feature": "Customer_Behaviour[Timestamp]", "type": "date", "selected": true, "replaceby": "random", "stats": {"count": "", "mean": "", "stddev": "", "min": "", "max": "", "missing": "0"}, "transformation": [{"transformation": "Extract Date", "selectedAsDefault": 1}], "generated": false, "updatedLabel": "Customer_Behaviour[Timest..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Clicked on Ad]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.54", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Clicke..."}, {"feature": "Customer_Behaviour[Area Income]_binarizer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.56", "stddev": "0.5", "min": "0.0", "max": "1.0", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Area I..."}, {"feature": "Customer_Behaviour[Ad Topic Line]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "249.5", "stddev": "144.48", "min": "0.0", "max": "499.0", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Ad Top..."}, {"feature": "Customer_Behaviour[City]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "246.52", "stddev": "144.45", "min": "0.0", "max": "496.0", "missing": "0"}, "updatedLabel": "Customer_Behaviour[City]_..."}, {"feature": "Customer_Behaviour[Country]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "74.36", "stddev": "56.35", "min": "0.0", "max": "208.0", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Countr..."}, {"feature": "Customer_Behaviour[Timestamp]_dayofmonth", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "generated": true, "selected": true, "stats": {"count": "500", "mean": "15.48", "stddev": "8.63", "min": "1", "max": "31", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Timest..."}, {"feature": "Customer_Behaviour[Timestamp]_month", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "generated": true, "selected": true, "stats": {"count": "500", "mean": "3.85", "stddev": "1.95", "min": "1", "max": "7", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Timest..."}, {"feature": "Customer_Behaviour[Timestamp]_year", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "generated": true, "selected": true, "stats": {"count": "500", "mean": "2016.0", "stddev": "0.0", "min": "2016", "max": "2016", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Timest..."}], "message": "Successfully executed", "status": 1, "userid": "d2596556-3f80-4d6d-b0c0-61914b958779", "autoFE_flag": true, "stageId": "64ca9c48ab8472757bd245a1", "FESamplePath": "/FileStore/platform/sampleData/64ca9c48ab8472757bd245a1_AutoFE/part-00000-109f3f95-19f8-4a00-a50c-b3b878a97066-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/64ca9c48ab8472757bd245a1_AutoFE/part-00000-109f3f95-19f8-4a00-a50c-b3b878a97066-c000.csv", "samplecount": 500, "originalcount": 1000, "dataPercentage": "100", "FEGraph": [{"values": {"label": ["32.0 - 37.8", "37.8 - 43.6", "43.6 - 49.4", "49.4 - 55.2", "55.2 - 61.0", "61.0 - 66.8", "66.8 - 72.6", "72.6 - 78.4", "78.4 - 84.2", "84.2 - 90.0"], "data": [28, 46, 42, 37, 35, 48, 70, 81, 86, 27]}, "label": "Customer_Behaviour[Daily Time Spent on Site]", "count": 10, "min": 32.0, "max": 90.0}, {"values": {"label": ["19.0 - 23.1", "23.1 - 27.2", "27.2 - 31.3", "31.3 - 35.4", "35.4 - 39.5", "39.5 - 43.6", "43.6 - 47.7", "47.7 - 51.8", "51.8 - 55.9", "55.9 - 60"], "data": [20, 53, 101, 76, 80, 60, 48, 33, 18, 11]}, "label": "Customer_Behaviour[Age]", "count": 10, "min": 19.0, "max": 60}, {"values": {"label": ["14775.0 - 21109.4", "21109.4 - 27443.8", "27443.8 - 33778.2", "33778.2 - 40112.6", "40112.6 - 46447.0", "46447.0 - 52781.4", "52781.4 - 59115.8", "59115.8 - 65450.2", "65450.2 - 71784.6", "71784.6 - 78119.0"], "data": [6, 15, 34, 26, 45, 75, 73, 80, 101, 45]}, "label": "Customer_Behaviour[Area Income]", "count": 10, "min": 14775.0, "max": 78119.0}, {"values": {"label": ["105.0 - 120.6", "120.6 - 136.2", "136.2 - 151.8", "151.8 - 167.4", "167.4 - 183.0", "183.0 - 198.6", "198.6 - 214.2", "214.2 - 229.8", "229.8 - 245.4", "245.4 - 261.0"], "data": [61, 66, 47, 51, 40, 40, 68, 54, 52, 21]}, "label": "Customer_Behaviour[Daily Internet Usage]", "count": 10, "min": 105.0, "max": 261.0}, {"values": {"label": ["Centralized neutral neural-net", "Grass-roots coherent extranet", "Customizable multi-tasking website", "Mandatory disintermediate utilization", "Exclusive neutral parallelism", "Monitored systematic hierarchy", "Open-architected impactful productivity", "Multi-layered 4thgeneration knowledge user", "Intuitive exuding service-desk", "Centralized 24/7 installation", "Team-oriented encompassing portal", "Cross-group regional website", "Organized global model", "Phased transitional instruction set", "Streamlined cohesive conglomeration", "Synchronized user-facing core", "Organized client-driven alliance", "Synergized multimedia emulation", "Customer-focused optimizing moderator", "Customizable executive software", "Down-sized uniform info-mediaries", "Streamlined next generation implementation", "Triple-buffered scalable groupware", "Phased dynamic customer loyalty", "Down-sized modular intranet", "Pre-emptive content-based focus group", "Function-based optimizing protocol", "Up-sized secondary software", "Persevering reciprocal firmware", "De-engineered mobile infrastructure", "Customer-focused upward-trending contingency", "User-friendly upward-trending intranet", "Focused intangible moderator", "Customer-focused transitional strategy", "Advanced web-enabled standardization", "Polarized dynamic throughput", "Devolved zero administration intranet", "Cross-platform regional task-force", "Down-sized well-modulated archive", "Realigned zero tolerance emulation", "Versatile transitional monitoring", "User-centric intangible task-force", "Multi-layered user-facing paradigm", "Enterprise-wide client-driven contingency", "Diverse modular interface", "Up-sized incremental encryption", "Managed grid-enabled standardization", "Universal 24/7 implementation", "Customer-focused multi-tasking Internet solution", "Vision-oriented contextually-based extranet", "Centralized tertiary pricing structure", "Synergized context-sensitive database", "Profit-focused dedicated utilization", "Stand-alone tangible moderator", "Polarized tangible collaboration", "Virtual scalable secured line", "Synchronized leadingedge help-desk", "Total 5thgeneration standardization", "Sharable grid-enabled matrix", "Balanced asynchronous hierarchy", "Face-to-face even-keeled website", "User-friendly client-server instruction set", "Assimilated fault-tolerant hub", "Compatible systemic function", "Front-line tangible alliance", "Self-enabling optimal initiative", "Configurable logistical Graphical User Interface", "Virtual bandwidth-monitored initiative", "Cloned object-oriented benchmark", "Fundamental fault-tolerant neural-net", "Compatible intangible customer loyalty", "Distributed 3rdgeneration definition", "Pre-emptive cohesive budgetary management", "Diverse executive groupware", "Synergized cohesive array", "Universal even-keeled analyzer", "Monitored real-time superstructure", "Automated static concept", "Profit-focused attitude-oriented task-force", "Cross-platform multimedia algorithm", "Progressive non-volatile neural-net", "Programmable uniform productivity", "De-engineered fault-tolerant database", "Configurable bottom-line application", "Proactive next generation knowledge user", "Devolved responsive structure", "De-engineered solution-oriented open architecture", "Customizable modular Internet solution", "Stand-alone encompassing throughput", "Re-engineered real-time success", "Digitized contextually-based product", "Organic interactive support", "Function-based stable alliance", "Enterprise-wide foreground emulation", "Customer-focused incremental system engine", "Vision-oriented optimizing middleware", "Extended interactive model", "Upgradable even-keeled challenge", "Horizontal national architecture", "Adaptive contextually-based methodology", "Configurable dynamic adapter", "Self-enabling incremental collaboration", "Secured scalable Graphical User Interface", "Reverse-engineered well-modulated capability", "Integrated coherent pricing structure", "Upgradable directional system engine", "Public-key non-volatile implementation", "Horizontal high-level concept", "Reduced multimedia project", "Object-based modular functionalities", "Organic asynchronous hierarchy", "Proactive client-server productivity", "Balanced value-added database", "Seamless composite budgetary management", "Face-to-face reciprocal methodology", "Upgradable even-keeled hardware", "Versatile responsive knowledge user", "Proactive radical support", "Versatile content-based protocol", "Seamless cohesive conglomeration", "De-engineered actuating hierarchy", "Balanced motivating help-desk", "Sharable optimal capacity", "Advanced systemic productivity", "User-friendly bandwidth-monitored attitude", "Networked even-keeled workforce", "Cross-group value-added success", "Upgradable asymmetric emulation", "Universal transitional Graphical User Interface", "Triple-buffered 3rdgeneration migration", "Team-oriented dynamic forecast", "Customer-focused zero-defect process improvement", "Focused systemic benchmark", "Organized 24/7 middleware", "Phased full-range hardware", "Polarized analyzing intranet", "Digitized disintermediate ability", "Public-key real-time definition", "Reverse-engineered 24hour hardware", "Distributed maximized ability", "Fully-configurable holistic throughput", "Progressive uniform budgetary management", "Synergistic stable infrastructure", "Expanded zero administration attitude", "Innovative regional structure", "Universal asymmetric workforce", "Business-focused client-driven forecast", "Open-source global strategy", "Stand-alone motivating moratorium", "Profound bottom-line standardization", "Managed client-server access", "Horizontal modular success", "Team-oriented zero-defect initiative", "Progressive intermediate throughput", "Assimilated next generation firmware", "Business-focused background synergy", "Ergonomic methodical encoding", "Switchable analyzing encryption", "Programmable uniform website", "Fundamental methodical support", "Multi-tiered stable leverage", "Cross-group human-resource time-frame", "Realigned intangible benchmark", "Grass-roots mission-critical emulation", "Proactive encompassing paradigm", "Automated multi-state toolset", "Managed didactic flexibility", "Cross-platform neutral system engine", "Focused high-level frame", "Total human-resource flexibility", "Ergonomic zero tolerance encoding", "Cross-platform zero-defect structure", "Innovative maximized groupware", "Cross-platform logistical pricing structure", "Future-proofed fresh-thinking conglomeration", "Sharable multimedia conglomeration", "Robust object-oriented Graphic Interface", "Optimized systemic capability", "Right-sized system-worthy project", "Versatile optimizing projection", "Universal multi-state system engine", "Operative didactic Local Area Network", "Ergonomic empowering frame", "Multi-tiered mobile encoding", "Organic logistical adapter", "Programmable didactic capacity", "Reactive impactful challenge", "Implemented asynchronous application", "Multi-layered secondary software", "Expanded value-added emulation", "Stand-alone empowering benchmark", "Face-to-face dedicated flexibility", "Optimized attitude-oriented initiative", "Virtual executive implementation", "Enhanced intermediate standardization", "Versatile solution-oriented secured line", "User-centric solution-oriented emulation", "Multi-channeled non-volatile website", "Self-enabling zero administration neural-net", "Sharable secondary Graphical User Interface", "Innovative homogeneous alliance", "Diverse leadingedge website", "Optimized intermediate help-desk", "Sharable reciprocal project", "Reactive demand-driven strategy", "Team-oriented bi-directional secured line", "Vision-oriented system-worthy forecast", "Multi-tiered interactive neural-net", "Ameliorated leadingedge help-desk", "Persevering 5thgeneration knowledge user", "Expanded modular application", "Front-line actuating functionalities", "Inverse stable synergy", "Operative full-range forecast", "Operative secondary functionalities", "Managed 24hour analyzer", "Horizontal client-server database", "Digitized homogeneous core", "Ameliorated coherent open architecture", "Vision-oriented bifurcated contingency", "Re-engineered zero-defect open architecture", "Synchronized full-range portal", "Integrated encompassing support", "Realigned 24/7 core", "Enhanced tertiary utilization", "Balanced disintermediate conglomeration", "Networked local secured line", "Programmable empowering orchestration", "Object-based motivating instruction set", "Realigned intermediate application", "Optional tangible productivity", "Virtual homogeneous budgetary management", "Balanced uniform algorithm", "Fully-configurable asynchronous firmware", "Exclusive systematic algorithm", "Exclusive cohesive intranet", "Vision-oriented asynchronous Internet solution", "Sharable 5thgeneration access", "Monitored homogeneous artificial intelligence", "Secured encompassing Graphical User Interface", "Team-oriented executive core", "Reduced background data-warehouse", "Public-key bi-directional Graphical User Interface", "Front-line fresh-thinking installation", "Assimilated multi-state paradigm", "Open-source local approach", "Polarized intangible encoding", "Reactive upward-trending migration", "Customer-focused fault-tolerant implementation", "Customizable homogeneous contingency", "Face-to-face modular budgetary management", "Decentralized bottom-line help-desk", "Visionary mission-critical application", "Stand-alone well-modulated product", "Ameliorated bandwidth-monitored contingency", "Front-line neutral alliance", "Re-engineered optimal policy", "Implemented uniform synergy", "Mandatory empowering focus group", "Intuitive global website", "Synergized clear-thinking protocol", "Triple-buffered multi-state complexity", "Enhanced intangible portal", "Switchable real-time product", "Up-sized asymmetric firmware", "Customer-focused explicit challenge", "Extended leadingedge solution", "Front-line bifurcated ability", "Virtual 5thgeneration emulation", "Cloned 5thgeneration orchestration", "Organic bottom-line service-desk", "Robust logistical utilization", "Enhanced dedicated support", "Synergistic fresh-thinking array", "Intuitive dynamic attitude", "Business-focused value-added definition", "Synchronized systemic hierarchy", "Reactive demand-driven capacity", "Innovative user-facing extranet", "Front-line intermediate database", "Balanced dynamic application", "Reduced global support", "Triple-buffered demand-driven alliance", "Visionary reciprocal circuit", "Sharable bottom-line solution", "Upgradable asynchronous circuit", "Customer-focused empowering ability", "Stand-alone national attitude", "Advanced full-range migration", "Seamless object-oriented structure", "Distributed tertiary system engine", "Total 5thgeneration encoding", "Progressive empowering alliance", "Innovative background conglomeration", "Polarized 6thgeneration info-mediaries", "Operative system-worthy protocol", "Extended systemic policy", "Self-enabling holistic process improvement", "Horizontal client-driven hierarchy", "User-friendly asymmetric info-mediaries", "Polarized bandwidth-monitored moratorium", "Centralized systematic knowledgebase", "Future-proofed grid-enabled implementation", "Profound zero administration instruction set", "Up-sized executive moderator", "Ergonomic client-driven application", "Multi-channeled asynchronous open system", "Adaptive 24hour Graphic Interface", "Horizontal multi-state interface", "Diverse stable circuit", "Customer-focused attitude-oriented instruction set", "Secured clear-thinking middleware", "Right-sized value-added initiative", "Multi-channeled reciprocal artificial intelligence", "Realigned systematic function", "Networked high-level structure", "Advanced modular Local Area Network", "Reduced bi-directional strategy", "Digitized heuristic solution", "Multi-layered non-volatile Graphical User Interface", "Synchronized multimedia model", "Ameliorated upward-trending definition", "Multi-tiered human-resource structure", "Managed upward-trending instruction set", "Phased zero administration success", "Configurable multi-state utilization", "Diverse multi-tasking parallelism", "Up-sized tertiary contingency", "Expanded clear-thinking core", "Open-source coherent monitoring", "Persevering tertiary capability", "Enterprise-wide bi-directional secured line", "Total directional approach", "Self-enabling didactic pricing structure", "Customizable tangible hierarchy", "Intuitive explicit conglomeration", "Right-sized asynchronous website", "Advanced 5thgeneration capability", "Universal asymmetric archive", "Triple-buffered regional toolset", "Customizable zero-defect matrix", "Front-line fresh-thinking open system", "Reactive responsive emulation", "Enterprise-wide local matrices", "Persevering even-keeled help-desk", "Grass-roots eco-centric instruction set", "Fully-configurable incremental Graphical User Interface", "Mandatory 3rdgeneration moderator", "Managed eco-centric encoding", "Visionary multi-tasking alliance", "Ameliorated tangible hierarchy", "Enhanced maximized access", "Re-contextualized systemic time-frame", "Reactive bi-directional workforce", "Re-engineered neutral success", "Multi-lateral empowering throughput", "Proactive asymmetric definition", "Pre-emptive zero tolerance Local Area Network", "Reduced incremental productivity", "Realigned scalable standardization", "Team-oriented context-sensitive installation", "Pre-emptive systematic budgetary management", "Multi-layered tangible portal", "De-engineered tertiary secured line", "Realigned next generation projection", "Decentralized needs-based analyzer", "Multi-layered fresh-thinking process improvement", "Persevering eco-centric flexibility", "Triple-buffered needs-based Local Area Network", "Polarized multimedia system engine", "Face-to-face analyzing encryption", "Self-enabling even-keeled methodology", "Public-key zero-defect analyzer", "Integrated motivating neural-net", "Operative scalable emulation", "Robust responsive collaboration", "Programmable empowering middleware", "Public-key mission-critical core", "Mandatory dedicated data-warehouse", "Re-engineered responsive definition", "Cloned explicit middleware", "Inverse high-level capability", "Inverse bi-directional knowledge user", "Monitored dynamic instruction set", "Customer-focused full-range neural-net", "User-centric intangible contingency", "Quality-focused scalable utilization", "Seamless impactful info-mediaries", "Cross-group neutral synergy", "Monitored content-based implementation", "Quality-focused zero-defect budgetary management", "Intuitive fresh-thinking moderator", "Quality-focused hybrid frame", "Business-focused high-level hardware", "Managed disintermediate capability", "Function-based incremental standardization", "Realigned global initiative", "Business-focused maximized complexity", "Upgradable local migration", "Future-proofed modular utilization", "Re-engineered impactful software", "Managed 6thgeneration hierarchy", "Pre-emptive transitional protocol", "Public-key asynchronous matrix", "Grass-roots systematic hardware", "User-centric composite contingency", "Ergonomic neutral portal", "Reverse-engineered maximized focus group", "Public-key intangible Graphical User Interface", "Advanced local task-force", "Profound well-modulated array", "Multi-layered fresh-thinking neural-net", "Synchronized grid-enabled moratorium", "Total grid-enabled application", "Vision-oriented uniform knowledgebase", "Business-focused holistic benchmark", "Public-key solution-oriented focus group", "User-friendly content-based customer loyalty", "Reactive national success", "Networked regional Local Area Network", "Assimilated homogeneous service-desk", "Monitored local Internet solution", "Customizable methodical Graphical User Interface", "Front-line systemic capability", "Programmable high-level benchmark", "Grass-roots empowering paradigm", "Switchable secondary ability", "Profit-focused systemic support", "Phased content-based middleware", "Synergized well-modulated Graphical User Interface", "Implemented bottom-line implementation", "Monitored context-sensitive initiative", "Pre-emptive client-server open system", "Synergistic non-volatile analyzer", "Object-based optimal solution", "Profound dynamic attitude", "Networked responsive application", "Customer-focused impactful success", "Enhanced regional conglomeration", "Customizable value-added project", "Switchable multi-state success", "Fundamental clear-thinking knowledgebase", "Front-line incremental access", "Digitized interactive initiative", "Quality-focused 5thgeneration orchestration", "Configurable mission-critical algorithm", "Reduced holistic help-desk", "Organic 3rdgeneration encryption", "Monitored intermediate circuit", "Object-based leadingedge complexity", "Digitized zero-defect implementation", "Configurable impactful capacity", "Distributed leadingedge orchestration", "Multi-channeled 3rdgeneration model", "Devolved exuding Local Area Network", "Phased hybrid intranet", "Inverse national core", "Quality-focused zero tolerance matrices", "Decentralized 24hour approach", "Distributed bifurcated challenge", "Open-architected system-worthy ability", "Centralized client-driven workforce", "Proactive interactive service-desk", "Assimilated encompassing portal", "Cross-group global orchestration", "Down-sized bandwidth-monitored core", "Inverse zero-defect capability", "Multi-tiered real-time implementation", "Assimilated stable encryption", "Cloned optimal leverage", "De-engineered attitude-oriented projection", "Extended grid-enabled hierarchy", "Mandatory coherent groupware", "Triple-buffered systematic info-mediaries", "Centralized value-added hierarchy", "Front-line even-keeled website", "Persistent fault-tolerant service-desk", "Up-sized maximized model", "Organized global flexibility", "Balanced executive definition", "Focused coherent success", "Robust context-sensitive neural-net", "Fundamental tangible moratorium", "Sharable value-added solution", "Assimilated discrete strategy", "Phased fault-tolerant definition", "Pre-emptive next generation Internet solution", "Decentralized methodical capability", "Stand-alone logistical service-desk", "Open-architected intangible strategy", "Diverse directional hardware", "Total bi-directional success", "Progressive 24/7 definition", "Pre-emptive next generation strategy", "Open-source holistic productivity", "Function-based executive moderator", "Triple-buffered foreground encryption", "Monitored 24/7 moratorium", "Vision-oriented real-time framework", "Robust transitional ability"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Customer_Behaviour[Ad Topic Line]", "count": 500, "min": "Adaptive 24hour Graphic Interface", "max": "Visionary reciprocal circuit"}, {"values": {"label": ["West Brandonton", "West William", "West Dylanberg", "South John", "Harperborough", "South Cathyfurt", "Palmerside", "Port Cassie", "Millerchester", "West Christopher", "Amandahaven", "Garciaside", "Port Sarahshire", "Brendachester", "Robertfurt", "Jensenborough", "Bradleyburgh", "North Regina", "Davidmouth", "Lake Conniefurt", "Lake Christopherfurt", "East Tylershire", "Lake Dustin", "New Tina", "Christopherport", "Port Sarahhaven", "Williamsborough", "North Michael", "Hernandezville", "Erinton", "Hughesport", "New Lucasburgh", "Port Christopherborough", "Millerside", "Lake Jessica", "South Daniel", "Suzannetown", "Brianfurt", "East Michelleberg", "Port Eric", "Timothyfurt", "Guzmanland", "East John", "Heatherberg", "South George", "Codyburgh", "Ramirezside", "East Rachelview", "Curtisport", "Frankbury", "East Eric", "Jacobstad", "East Stephen", "Turnerchester", "Youngfort", "Port Melissaberg", "Aliciatown", "Josephstad", "West Ericfurt", "New Brendafurt", "Kentmouth", "North Russellborough", "Penatown", "Hartmanchester", "Hansenmouth", "West Jessicahaven", "Davilachester", "North Ricardotown", "Millerbury", "Garciaview", "Williamstad", "West Connor", "West Justin", "West Tinashire", "Jamesfurt", "Harveyport", "North Kevinside", "Christinetown", "Petersonfurt", "New Lindaberg", "Port Crystal", "South Jasminebury", "Charlottefort", "West Lindseybury", "Lake David", "Tinaton", "Alexanderfurt", "West Pamela", "West Amanda", "Garciamouth", "South Kyle", "Combsstad", "Lake Allenville", "Port Juan", "Michellefort", "Jessicahaven", "Roberttown", "New Amanda", "North April", "Port Paultown", "East Vincentstad", "New Rebecca", "Port Brookeland", "East Yvonnechester", "Burgessside", "Port Kathleenfort", "Charlenetown", "South Johnnymouth", "Hannaport", "East Anthony", "Rogerburgh", "Andersonchester", "Meyersstad", "Michelleside", "Port Brian", "Kristintown", "Davisfurt", "Alvaradoport", "Monicaview", "Katieport", "East Brittanyville", "West Travismouth", "Brownton", "Keithtown", "South Jade", "Williamsport", "Port Katelynview", "Lake Jesus", "Andrewborough", "New Keithburgh", "Kevinberg", "Lovemouth", "Taylorhaven", "Butlerfort", "Masseyshire", "Port Blake", "Brandymouth", "Port Jessica", "Yuton", "Welchshire", "Timothyport", "Lake Stephenborough", "Silvaton", "Florestown", "Jensenton", "Rivasland", "Helenborough", "Pattymouth", "South Alexisborough", "New Charleschester", "East Breannafurt", "Estesfurt", "South Aaron", "Catherinefort", "North Kimberly", "North Aaronburgh", "Danielview", "Lake Ian", "West Shannon", "South Jackieberg", "North Sarashire", "East Jessefort", "Rochabury", "Wrightview", "Perryburgh", "Richardsonshire", "Kimberlymouth", "Meghanchester", "Tammyshire", "Greerport", "East Sharon", "Johnstonmouth", "East Heatherside", "Chapmanmouth", "Elizabethstad", "East Brettton", "Westshire", "Julietown", "Adamsbury", "North Angelastad", "Amandafort", "Ronaldport", "Estradashire", "Hobbsbury", "New Christinatown", "Port Georgebury", "West Leahton", "Reginamouth", "Jamesmouth", "Brandonbury", "Leahside", "Port Sherrystad", "Josephmouth", "Destinyfurt", "Mezaton", "North Mark", "Brittanyborough", "West Ericaport", "Ericksonmouth", "East Heidi", "New Angelview", "Lake Brandonview", "Morganport", "Browntown", "Bradleyside", "West Ryan", "Johnsontown", "New Henry", "South Lisa", "New Hollyberg", "Staceyfort", "North Brittanyburgh", "Lake Charlottestad", "Tammymouth", "Lake Vanessa", "Port Douglasborough", "Port Aprilville", "Lake Faith", "North Samantha", "Holderville", "Jeffreymouth", "Smithside", "Vanessastad", "Carterland", "Cervantesshire", "North Debrashire", "East Mike", "North Angelatown", "Clarkborough", "Josephberg", "South Jeanneport", "Jonesshire", "Lake James", "Port Jennifer", "Chrismouth", "Port Beth", "West David", "Fraziershire", "Port Derekberg", "West Randy", "Zacharyton", "New Marcusbury", "Huffmanchester", "Williamsfort", "Edwardsport", "Lake Evantown", "Hansenland", "Port Michaelmouth", "Tylerport", "South Davidhaven", "Jonathanland", "North Virginia", "East Jason", "North Cassie", "North Destiny", "West Gabriellamouth", "Alvarezland", "Melanieton", "Waltertown", "Fosterside", "Davidstad", "Lake Tracy", "Dianaville", "Lake Matthew", "Sarahland", "New Patrick", "Nicholasland", "Ronniemouth", "Wrightburgh", "Davidton", "South Manuel", "Brandonstad", "North Tara", "Pruittmouth", "West Guybury", "Johnstad", "Kellytown", "Mackenziemouth", "Zacharystad", "Bowenview", "Jamesberg", "Johnport", "Odomville", "Thomasview", "Port Gregory", "Lake Amy", "Smithburgh", "New Michaeltown", "East Tiffanyport", "Sharpberg", "North Kristine", "Wongland", "Wallacechester", "Bradshawborough", "Andersonton", "Johnsport", "South Ronald", "Lisaberg", "Stewartbury", "Benjaminchester", "North Wesleychester", "Port Jeffrey", "Lake Josetown", "Kimberlyhaven", "Port Jodi", "Sylviaview", "West Michaelhaven", "Walshhaven", "South Jennifer", "South Daniellefort", "Dianashire", "Hammondport", "Hernandezfort", "New Jeffreychester", "South Denisefurt", "North Anna", "Port Destiny", "Wilsonburgh", "Murphymouth", "Taylorberg", "Melissafurt", "East Brianberg", "Townsendfurt", "Robertbury", "New Tinamouth", "Ramosstad", "North Shannon", "West Russell", "Masonhaven", "Derrickhaven", "New Brandy", "East Timothy", "West Alyssa", "Bruceburgh", "Port Robin", "Port Aliciabury", "Port Whitneyhaven", "Jeffreyshire", "North Loriburgh", "South Tomside", "West Brenda", "Greenechester", "Gravesport", "Millerland", "Port Jessicamouth", "Paulport", "Cynthiaside", "New Juan", "Amyfurt", "Harrishaven", "Birdshire", "Jacksonmouth", "Hayesmouth", "Juliaport", "Kimberlytown", "New Johnberg", "Shawstad", "Faithview", "Richardsontown", "East Christopherbury", "Port Christinemouth", "New Paul", "Hartport", "Hurleyborough", "Erikville", "Karenton", "Lake Adrian", "Mollyport", "West Daleborough", "Stephenborough", "Lake Kurtmouth", "West Thomas", "New Tyler", "Reyesland", "Lake Courtney", "Mariebury", "New Jasmine", "Lake Brian", "Lake Kevin", "East Sheriville", "Leonchester", "Taylorport", "Munozberg", "West Barbara", "New Gabriel", "Lake Matthewland", "Jamesville", "West Lucas", "Lake Jasonchester", "Pearsonfort", "Sellerstown", "Carterport", "Greentown", "North Lisachester", "North Alexandra", "Garnerberg", "North Anaport", "Hallfort", "Kingshire", "North Isabellaville", "Reyesfurt", "North Stephanieberg", "Sherrishire", "Port Daniel", "Brownview", "New Maria", "Calebberg", "Gomezport", "Shaneland", "East Aaron", "East Michaelland", "South Patrickfort", "Charlesbury", "West Robertside", "Port Anthony", "Austinland", "South Jaimeview", "South Meredithmouth", "Villanuevaton", "North Garyhaven", "Richardsonmouth", "New Dawnland", "Tranland", "Anthonyfurt", "Christopherchester", "Alexisland", "Johnsonfort", "Port Davidland", "Lake Michael", "West Michaelshire", "Port Calvintown", "Parkerhaven", "Cassandratown", "West Dannyberg", "East Debraborough", "Colemanshire", "Karenmouth", "New Jessicaport", "Luisfurt", "West Sharon", "Lake Cynthia", "Lake Jacob", "Meyerchester", "Wintersfort", "East Carlos", "Blairville", "Mosleyburgh", "West Wendyland", "Lawrenceborough", "Kennethview", "Pamelamouth", "Lesliefort", "Garciatown", "Evansfurt", "Barbershire", "Turnerville", "West Zacharyborough", "Robinsonland", "Haleberg", "Estradafurt", "Lake Hailey", "Meaganfort", "North Monicaville", "Mullenside", "Sanchezland", "Rogerland", "Newmanberg", "Cannonbury", "Lisamouth", "Port Brittanyville", "Carterton", "South Dianeshire", "Villanuevastad", "Lake Lisa", "Valerieland", "Patrickmouth", "Lake Deannaborough", "Davieshaven", "North Kennethside", "Shelbyport", "New Taylorburgh", "Deannaville", "East Johnport", "Wagnerchester", "Daisymouth", "Lake Joseph", "North Brandon", "Wademouth", "North Raymond", "East Troyhaven", "Lake Jose", "Ashleymouth", "Lake Danielle", "West Dennis", "Austinborough", "South Pamela", "North Laurenview"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Customer_Behaviour[City]", "count": 497, "min": "Adamsbury", "max": "Zacharyton"}, {"values": {"label": ["0"], "data": [500]}, "label": "Customer_Behaviour[Male]", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["Qatar", "Barbados", "Palestinian Territory", "Burundi", "Tokelau", "Greece", "British Virgin Islands", "Senegal", "Liberia", "Italy", "Turkey", "Israel", "Svalbard & Jan Mayen Islands", "Iran", "Christmas Island", "Rwanda", "Turks and Caicos Islands", "Norfolk Island", "Bouvet Island (Bouvetoya)", "Ukraine", "Montserrat", "Timor-Leste", "Puerto Rico", "Australia", "Jersey", "Lithuania", "Egypt", "Western Sahara", "Guinea", "Madagascar", "United Arab Emirates", "Somalia", "Bhutan", "Uzbekistan", "South Africa", "Hungary", "Saint Martin", "Cuba", "Belize", "Antarctica (the territory South of 60 deg S)", "Dominica", "Liechtenstein", "Equatorial Guinea", "Mongolia", "Kuwait", "Vietnam", "Guatemala", "Peru", "Singapore", "Canada", "Algeria", "Fiji", "Kenya", "Cyprus", "Samoa", "Mauritania", "Czech Republic", "Chile", "Turkmenistan", "Latvia", "Kazakhstan", "Bahrain", "Saint Pierre and Miquelon", "Afghanistan", "Tajikistan", "France", "Albania", "Papua New Guinea", "Thailand", "Honduras", "French Guiana", "Northern Mariana Islands", "Lebanon", "Tonga", "French Southern Territories", "Serbia", "New Caledonia", "Seychelles", "Mayotte", "Cambodia", "Taiwan", "Austria", "Zambia", "Anguilla", "Martinique", "Eritrea", "Mexico", "Nauru", "Saint Barthelemy", "Antigua and Barbuda", "Cote d'Ivoire", "Zimbabwe", "Saint Kitts and Nevis", "Bangladesh", "Faroe Islands", "Heard Island and McDonald Islands", "Bahamas", "Netherlands Antilles", "Tuvalu", "Congo", "Dominican Republic", "Trinidad and Tobago", "United States of America", "Ecuador", "Spain", "Indonesia", "Belgium", "American Samoa", "Guernsey", "China", "Macao", "Djibouti", "Romania", "Cayman Islands", "Ethiopia", "Morocco", "New Zealand", "Guam", "Venezuela", "United Kingdom", "Yemen", "Poland", "Saudi Arabia", "Ghana", "Micronesia", "Palau", "Belarus", "Benin", "Guyana", "Hong Kong", "Malta", "Japan", "Namibia", "Monaco", "Sweden", "Costa Rica", "Netherlands", "Sierra Leone", "Uganda", "Brunei Darussalam", "Luxembourg", "United States Virgin Islands", "Chad", "Moldova", "Malawi", "Uruguay", "Armenia", "Denmark", "El Salvador", "San Marino", "Paraguay", "Jamaica", "Georgia", "Brazil", "Syrian Arab Republic", "Maldives", "Haiti", "Montenegro", "Tunisia", "Iceland", "Myanmar", "Bosnia and Herzegovina", "Russian Federation", "Saint Helena", "Niger", "Sri Lanka", "Croatia", "Azerbaijan", "Central African Republic", "Falkland Islands (Malvinas)", "United States Minor Outlying Islands", "Gibraltar", "Togo", "Angola", "Estonia", "Colombia", "Finland", "Philippines", "Malaysia", "Greenland", "Guadeloupe", "Wallis and Futuna", "Gabon", "Holy See (Vatican City State)", "Cameroon", "Niue", "Pitcairn Islands", "Libyan Arab Jamahiriya", "Kyrgyz Republic", "Swaziland", "French Polynesia", "Bolivia", "Portugal", "Panama", "Pakistan", "Ireland", "Lao People's Democratic Republic", "Tanzania", "Comoros", "Nepal", "Guinea-Bissau", "Mauritius", "Reunion", "Vanuatu", "Slovakia (Slovak Republic)", "South Georgia and the South Sandwich Islands", "Bulgaria", "India", "Nicaragua"], "data": [3, 4, 1, 5, 2, 4, 2, 5, 5, 2, 3, 3, 3, 4, 3, 4, 4, 3, 4, 4, 1, 1, 5, 6, 4, 3, 3, 4, 3, 3, 3, 2, 1, 1, 5, 5, 2, 2, 4, 1, 2, 3, 1, 2, 1, 3, 2, 5, 4, 3, 5, 5, 3, 4, 5, 1, 2, 2, 3, 1, 2, 1, 4, 6, 1, 4, 4, 5, 2, 2, 2, 1, 2, 3, 2, 2, 1, 3, 4, 2, 5, 2, 1, 1, 1, 3, 4, 2, 2, 3, 3, 3, 1, 2, 1, 1, 3, 2, 1, 2, 2, 1, 1, 4, 1, 2, 3, 4, 2, 5, 3, 2, 1, 3, 2, 2, 3, 2, 5, 2, 3, 3, 2, 2, 2, 2, 2, 2, 1, 3, 2, 1, 2, 2, 3, 2, 2, 1, 1, 3, 4, 2, 2, 3, 3, 2, 1, 2, 1, 2, 1, 3, 2, 4, 3, 2, 1, 1, 2, 1, 3, 2, 2, 2, 1, 2, 5, 2, 1, 1, 1, 2, 2, 1, 2, 1, 4, 1, 2, 4, 1, 2, 4, 2, 3, 2, 1, 1, 2, 2, 1, 2, 2, 1, 3, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1]}, "label": "Customer_Behaviour[Country]", "count": 209, "min": "Afghanistan", "max": "Zimbabwe"}, {"values": {"label": ["2016-03-16 20:19:01", "2016-03-24 09:31:49", "2016-01-30 19:20:41", "2016-05-20 08:49:33", "2016-06-13 17:27:09", "2016-07-19 08:32:10", "2016-04-14 05:08:35", "2016-01-14 14:00:09", "2016-03-11 06:49:10", "2016-04-25 11:01:54", "2016-02-14 07:36:58", "2016-02-17 11:42:00", "2016-04-10 00:13:47", "2016-05-26 22:49:47", "2016-06-03 00:55:23", "2016-01-08 00:17:27", "2016-06-05 22:11:34", "2016-04-22 20:10:22", "2016-02-01 09:00:55", "2016-02-17 21:55:29", "2016-01-05 17:56:52", "2016-04-19 07:34:28", "2016-06-12 15:25:44", "2016-03-14 23:13:11", "2016-05-13 11:51:10", "2016-02-20 20:47:05", "2016-01-08 22:47:10", "2016-03-28 08:46:26", "2016-07-03 09:22:30", "2016-04-28 05:50:25", "2016-04-03 05:10:31", "2016-01-16 23:37:51", "2016-07-13 16:12:24", "2016-07-13 04:10:53", "2016-06-11 18:32:12", "2016-02-26 19:48:23", "2016-06-21 13:15:21", "2016-04-18 15:54:33", "2016-05-04 09:00:24", "2016-06-13 18:50:00", "2016-01-03 16:01:40", "2016-01-12 10:07:29", "2016-05-13 06:09:28", "2016-06-29 02:43:29", "2016-04-10 19:48:01", "2016-02-14 06:51:43", "2016-05-09 02:58:58", "2016-01-29 03:54:19", "2016-07-14 12:07:10", "2016-01-10 23:14:30", "2016-06-23 01:22:43", "2016-02-28 18:52:44", "2016-01-03 03:22:15", "2016-01-04 21:48:38", "2016-05-24 13:30:38", "2016-02-04 08:53:37", "2016-02-21 07:42:48", "2016-06-26 17:16:26", "2016-01-03 05:34:33", "2016-03-08 18:00:43", "2016-05-17 06:14:20", "2016-02-11 02:40:02", "2016-06-16 02:01:24", "2016-02-03 04:21:14", "2016-06-21 03:14:41", "2016-05-06 21:07:31", "2016-06-12 17:52:43", "2016-01-11 07:36:22", "2016-03-24 09:12:52", "2016-02-14 07:30:24", "2016-02-10 19:20:51", "2016-04-23 14:34:38", "2016-06-18 17:56:32", "2016-07-19 07:59:18", "2016-06-26 11:52:18", "2016-05-04 00:01:33", "2016-05-23 21:14:38", "2016-07-23 14:47:23", "2016-02-10 15:23:17", "2016-04-24 13:42:15", "2016-01-09 04:53:22", "2016-06-18 17:23:26", "2016-06-29 13:35:05", "2016-04-13 05:42:52", "2016-02-26 09:18:48", "2016-07-18 11:33:31", "2016-01-05 00:02:53", "2016-05-15 01:03:06", "2016-05-05 09:28:36", "2016-07-05 18:59:45", "2016-05-05 11:09:29", "2016-03-25 15:17:39", "2016-01-23 15:02:13", "2016-02-01 20:30:35", "2016-01-23 17:39:06", "2016-05-09 21:54:38", "2016-06-13 13:59:51", "2016-02-19 07:29:30", "2016-04-20 00:41:53", "2016-04-12 14:01:08", "2016-03-15 11:25:48", "2016-01-28 11:50:40", "2016-07-06 15:56:39", "2016-04-18 00:49:33", "2016-07-17 01:13:56", "2016-06-09 14:24:06", "2016-05-31 02:17:18", "2016-04-10 03:30:16", "2016-02-09 07:21:25", "2016-06-17 17:11:16", "2016-01-28 07:10:29", "2016-04-08 22:48:25", "2016-06-17 09:58:46", "2016-04-25 21:15:39", "2016-05-09 08:44:55", "2016-02-29 23:56:06", "2016-04-03 06:17:22", "2016-04-17 21:39:11", "2016-07-09 16:23:33", "2016-06-28 12:51:02", "2016-06-18 16:32:58", "2016-05-28 12:38:37", "2016-07-16 23:08:54", "2016-02-17 23:47:00", "2016-06-29 09:04:31", "2016-05-09 10:21:48", "2016-04-04 18:36:59", "2016-02-20 10:52:51", "2016-05-30 20:07:59", "2016-03-10 01:36:19", "2016-03-10 22:28:52", "2016-02-05 15:26:37", "2016-05-31 21:41:46", "2016-06-11 09:37:52", "2016-04-30 19:42:04", "2016-07-18 01:36:37", "2016-03-22 06:41:38", "2016-06-28 09:19:06", "2016-06-30 00:19:33", "2016-04-03 11:38:36", "2016-04-08 14:35:44", "2016-03-25 19:02:35", "2016-05-12 21:32:06", "2016-05-10 14:12:31", "2016-05-27 05:35:27", "2016-06-12 21:21:53", "2016-01-07 13:58:51", "2016-02-07 17:06:35", "2016-02-15 07:27:41", "2016-03-24 09:34:00", "2016-04-04 20:01:12", "2016-07-08 17:14:01", "2016-02-01 00:52:29", "2016-01-01 20:17:49", "2016-05-01 00:23:13", "2016-05-08 22:24:27", "2016-04-05 05:54:15", "2016-07-11 18:12:43", "2016-02-14 10:06:49", "2016-04-01 01:57:12", "2016-04-06 01:19:08", "2016-02-24 19:08:11", "2016-04-27 18:25:30", "2016-03-09 02:07:17", "2016-07-24 00:22:16", "2016-02-13 13:57:53", "2016-05-08 10:25:08", "2016-02-17 18:50:57", "2016-01-29 05:39:16", "2016-02-23 13:55:48", "2016-07-09 11:18:02", "2016-03-19 11:09:36", "2016-04-07 10:51:05", "2016-07-17 14:26:04", "2016-03-01 22:06:37", "2016-01-13 20:38:35", "2016-06-23 11:05:01", "2016-01-18 02:51:13", "2016-07-18 04:53:22", "2016-07-01 01:12:04", "2016-05-02 15:31:28", "2016-01-14 09:27:59", "2016-07-16 10:14:04", "2016-02-03 16:54:33", "2016-03-12 07:18:36", "2016-05-20 00:00:48", "2016-04-15 15:07:17", "2016-06-29 02:48:44", "2016-07-14 22:43:29", "2016-01-23 21:15:57", "2016-06-01 03:17:50", "2016-03-15 06:54:21", "2016-02-14 14:38:01", "2016-05-04 05:01:37", "2016-05-12 12:11:12", "2016-07-23 05:21:39", "2016-01-23 13:14:18", "2016-01-05 11:53:17", "2016-04-28 21:58:25", "2016-02-12 08:46:15", "2016-07-11 13:23:37", "2016-01-29 00:45:19", "2016-01-05 16:26:44", "2016-06-10 00:35:15", "2016-01-01 15:14:24", "2016-04-24 13:46:10", "2016-05-02 18:37:01", "2016-04-07 18:52:57", "2016-05-19 06:37:38", "2016-01-14 08:27:04", "2016-04-13 07:07:36", "2016-04-07 20:38:02", "2016-03-10 15:07:44", "2016-05-01 08:27:12", "2016-03-18 09:08:39", "2016-05-26 06:03:57", "2016-04-29 14:10:00", "2016-02-24 07:13:00", "2016-03-26 19:37:46", "2016-03-31 08:53:43", "2016-06-14 12:08:10", "2016-05-11 19:13:42", "2016-02-28 03:34:35", "2016-05-01 09:23:25", "2016-05-30 08:02:27", "2016-05-29 18:12:00", "2016-05-10 17:13:47", "2016-03-30 05:29:38", "2016-01-24 13:41:38", "2016-05-23 00:32:54", "2016-05-15 18:44:50", "2016-05-27 12:45:37", "2016-02-26 06:00:16", "2016-02-21 23:07:11", "2016-04-29 14:08:26", "2016-02-11 17:02:07", "2016-07-22 07:44:43", "2016-06-26 02:34:15", "2016-03-20 02:44:13", "2016-04-01 05:17:28", "2016-02-12 05:20:19", "2016-04-29 20:40:21", "2016-06-27 21:51:47", "2016-05-31 00:58:37", "2016-05-27 08:53:51", "2016-05-09 07:13:27", "2016-03-05 12:03:41", "2016-01-15 22:49:45", "2016-02-12 03:39:09", "2016-07-23 04:04:42", "2016-02-24 04:11:37", "2016-02-17 20:22:49", "2016-02-12 01:55:38", "2016-01-11 08:18:12", "2016-04-22 22:01:21", "2016-02-04 03:10:17", "2016-02-21 20:09:12", "2016-06-19 23:04:45", "2016-01-03 04:39:47", "2016-03-27 08:32:37", "2016-07-10 16:25:56", "2016-06-25 04:21:33", "2016-05-16 18:51:59", "2016-06-25 18:17:53", "2016-04-21 19:56:24", "2016-03-06 11:36:06", "2016-04-04 03:57:48", "2016-06-03 21:43:21", "2016-03-27 00:53:11", "2016-03-13 20:35:42", "2016-06-03 03:36:18", "2016-01-28 20:59:32", "2016-04-20 21:49:22", "2016-05-02 07:00:58", "2016-01-27 12:38:16", "2016-04-12 03:26:39", "2016-02-09 05:28:18", "2016-04-27 09:27:58", "2016-04-16 11:53:43", "2016-02-08 00:23:38", "2016-02-11 13:26:22", "2016-06-08 18:54:01", "2016-05-03 21:19:58", "2016-04-07 03:56:16", "2016-02-14 17:05:15", "2016-04-30 08:07:13", "2016-03-09 14:45:33", "2016-07-07 13:37:34", "2016-04-01 16:21:05", "2016-03-15 15:49:14", "2016-07-01 04:41:57", "2016-07-08 21:18:32", "2016-06-10 11:31:33", "2016-03-09 14:57:11", "2016-03-14 06:46:14", "2016-04-07 16:02:02", "2016-02-04 13:30:32", "2016-05-17 04:27:31", "2016-04-03 10:07:56", "2016-04-04 21:30:46", "2016-07-06 16:00:33", "2016-01-14 00:23:10", "2016-02-05 19:06:01", "2016-03-12 01:39:19", "2016-05-28 20:41:50", "2016-02-12 22:51:08", "2016-02-29 12:31:57", "2016-01-17 15:10:31", "2016-05-27 06:19:27", "2016-03-19 14:23:45", "2016-07-23 04:37:05", "2016-07-19 18:06:22", "2016-02-10 06:52:07", "2016-05-23 02:15:04", "2016-06-05 13:16:24", "2016-01-21 23:48:29", "2016-06-05 00:29:13", "2016-05-24 18:35:58", "2016-04-22 08:31:24", "2016-04-15 11:51:14", "2016-07-02 00:24:22", "2016-03-04 10:13:48", "2016-04-25 07:30:21", "2016-07-17 01:58:53", "2016-04-27 04:28:17", "2016-07-02 21:22:23", "2016-06-19 09:24:35", "2016-06-12 05:31:19", "2016-01-06 13:20:01", "2016-01-31 04:10:20", "2016-05-15 20:48:40", "2016-03-17 05:00:12", "2016-07-20 09:27:24", "2016-04-15 14:45:48", "2016-01-20 19:09:37", "2016-02-15 07:55:10", "2016-02-09 19:37:52", "2016-01-25 07:52:53", "2016-01-09 07:28:16", "2016-05-26 13:18:30", "2016-06-28 20:13:41", "2016-05-29 07:29:27", "2016-04-17 15:46:03", "2016-04-10 14:48:35", "2016-04-16 16:38:35", "2016-05-03 08:21:23", "2016-05-22 00:01:58", "2016-03-30 19:09:50", "2016-01-09 15:49:28", "2016-04-18 03:41:56", "2016-03-27 16:41:29", "2016-01-27 20:47:57", "2016-02-07 07:41:06", "2016-04-19 05:15:28", "2016-02-16 18:21:36", "2016-03-25 08:40:15", "2016-03-16 00:28:10", "2016-03-03 22:31:16", "2016-02-26 09:54:33", "2016-06-24 05:50:22", "2016-05-23 21:00:45", "2016-05-12 04:35:59", "2016-02-17 07:05:57", "2016-05-11 22:02:17", "2016-02-29 19:26:35", "2016-01-30 16:15:29", "2016-01-31 06:14:10", "2016-05-22 21:54:23", "2016-03-01 10:01:35", "2016-04-04 08:19:54", "2016-05-15 13:18:34", "2016-07-05 15:14:10", "2016-06-19 22:08:15", "2016-07-21 23:14:35", "2016-07-13 01:48:46", "2016-06-08 12:25:49", "2016-02-26 17:01:01", "2016-03-26 19:54:16", "2016-01-27 17:55:44", "2016-01-16 16:40:30", "2016-02-15 14:13:47", "2016-06-07 01:29:06", "2016-06-09 19:32:27", "2016-04-01 09:21:14", "2016-02-20 00:06:20", "2016-01-01 02:52:10", "2016-01-20 00:26:15", "2016-07-18 18:33:05", "2016-01-23 04:47:37", "2016-02-29 11:00:06", "2016-02-13 04:16:08", "2016-03-08 10:39:16", "2016-07-04 11:03:49", "2016-02-10 13:46:35", "2016-05-13 14:12:39", "2016-05-02 00:01:56", "2016-03-20 22:27:25", "2016-05-19 09:30:12", "2016-03-23 08:52:31", "2016-06-26 04:22:26", "2016-03-20 08:22:50", "2016-03-25 05:05:27", "2016-02-14 07:15:37", "2016-03-26 00:32:02", "2016-03-07 22:32:15", "2016-06-18 05:17:33", "2016-01-01 08:27:06", "2016-04-07 01:57:38", "2016-02-28 22:02:14", "2016-01-21 04:30:43", "2016-07-21 10:01:50", "2016-07-20 01:56:33", "2016-05-26 15:40:12", "2016-03-10 07:07:31", "2016-01-03 23:21:26", "2016-01-02 09:30:11", "2016-01-07 21:21:50", "2016-01-05 20:58:42", "2016-06-17 20:18:27", "2016-06-14 07:02:09", "2016-07-06 05:34:52", "2016-02-27 13:51:44", "2016-05-24 17:42:58", "2016-04-30 15:27:22", "2016-03-30 16:15:59", "2016-05-16 23:21:06", "2016-02-15 20:41:05", "2016-01-23 01:42:28", "2016-02-26 01:18:44", "2016-01-11 02:07:14", "2016-03-05 23:02:11", "2016-01-06 21:43:22", "2016-02-18 03:58:36", "2016-06-29 01:19:21", "2016-04-05 08:18:45", "2016-01-15 01:20:05", "2016-04-04 21:23:13", "2016-05-15 03:10:50", "2016-07-19 12:05:58", "2016-06-10 04:21:57", "2016-03-19 08:00:58", "2016-03-04 14:33:38", "2016-07-22 11:05:10", "2016-02-11 11:50:26", "2016-02-14 11:36:08", "2016-07-18 02:51:19", "2016-02-10 08:21:13", "2016-01-04 06:37:15", "2016-02-26 19:35:54", "2016-07-13 14:30:14", "2016-06-11 06:47:55", "2016-03-11 10:01:23", "2016-03-22 19:14:47", "2016-06-18 19:10:14", "2016-01-04 04:00:35", "2016-01-04 22:27:25", "2016-06-29 04:23:10", "2016-06-20 08:22:09", "2016-04-16 05:24:33", "2016-01-17 05:07:11", "2016-07-08 22:30:10", "2016-03-27 19:50:11", "2016-04-29 13:38:19", "2016-06-21 00:52:47", "2016-01-17 18:45:55", "2016-06-10 22:21:10", "2016-03-28 23:01:24", "2016-06-04 09:13:29", "2016-04-14 21:37:49", "2016-05-17 18:06:46", "2016-01-20 02:31:36", "2016-07-20 21:53:42", "2016-06-04 09:25:27", "2016-04-22 07:48:33", "2016-04-16 08:36:08", "2016-06-25 00:33:23", "2016-03-23 05:27:35", "2016-02-23 17:37:46", "2016-04-04 11:39:51", "2016-01-30 00:05:37", "2016-02-15 16:18:49", "2016-03-08 05:12:57", "2016-03-11 09:58:32", "2016-04-12 04:22:42", "2016-05-01 23:21:53", "2016-03-24 17:48:31", "2016-03-09 12:10:08", "2016-06-07 05:41:16", "2016-05-31 23:32:00", "2016-01-10 20:18:21", "2016-04-18 07:00:38", "2016-01-12 21:17:15", "2016-05-14 23:08:14", "2016-05-24 10:04:39", "2016-01-09 17:33:03", "2016-07-09 14:55:36", "2016-07-16 14:13:54", "2016-07-23 06:18:51", "2016-05-03 16:02:50", "2016-06-17 23:19:38"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Customer_Behaviour[Timestamp]", "count": 500, "min": "", "max": ""}, {"values": {"label": ["1", "0"], "data": [269, 231]}, "label": "Customer_Behaviour[Clicked on Ad]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0.0", "1.0"], "data": [218, 282]}, "label": "Customer_Behaviour[Area Income]_binarizer_transform", "count": 2, "min": "0.0", "max": "1.0"}, {"values": {"label": ["0.0 - 49.9", "49.9 - 99.8", "99.8 - 149.7", "149.7 - 199.6", "199.6 - 249.5", "249.5 - 299.4", "299.4 - 349.3", "349.3 - 399.2", "399.2 - 449.1", "449.1 - 499.0"], "data": [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]}, "label": "Customer_Behaviour[Ad Topic Line]_stringindexer_transform", "count": 10, "min": 0.0, "max": 499.0}, {"values": {"label": ["0.0 - 49.6", "49.6 - 99.2", "99.2 - 148.8", "148.8 - 198.4", "198.4 - 248.0", "248.0 - 297.6", "297.6 - 347.2", "347.2 - 396.8", "396.8 - 446.4", "446.4 - 496.0"], "data": [53, 50, 49, 50, 49, 50, 50, 49, 50, 50]}, "label": "Customer_Behaviour[City]_stringindexer_transform", "count": 10, "min": 0.0, "max": 496.0}, {"values": {"label": ["0.0 - 20.8", "20.8 - 41.6", "41.6 - 62.4", "62.4 - 83.2", "83.2 - 104.0", "104.0 - 124.8", "124.8 - 145.6", "145.6 - 166.4", "166.4 - 187.2", "187.2 - 208.0"], "data": [103, 83, 63, 59, 40, 42, 42, 26, 21, 21]}, "label": "Customer_Behaviour[Country]_stringindexer_transform", "count": 10, "min": 0.0, "max": 208.0}, {"values": {"label": ["1 - 4", "4 - 7", "7 - 10", "10 - 13", "13 - 16", "16 - 19", "19 - 22", "22 - 25", "25 - 28", "28 - 31"], "data": [46, 48, 50, 58, 55, 54, 43, 48, 45, 53]}, "label": "Customer_Behaviour[Timestamp]_dayofmonth", "count": 10, "min": 1, "max": 31}, {"values": {"label": ["3", "1", "5", "6", "7", "4", "2"], "data": [66, 76, 77, 69, 55, 77, 80]}, "label": "Customer_Behaviour[Timestamp]_month", "count": 7, "min": "1", "max": "7"}, {"values": {"label": ["2016"], "data": [500]}, "label": "Customer_Behaviour[Timestamp]_year", "count": 1, "min": "2016", "max": "2016"}]}, "selectedFE": [{"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Daily Time Spent on Site]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "64.9", "stddev": "15.66", "min": "32.6", "max": "90.97", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Daily ..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Age]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "36.42", "stddev": "8.64", "min": "19", "max": "60", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Age]"}, {"transformationsData": [{"feature_label": "Customer_Behaviour[Area Income]", "threshold": 54913.42, "transformation_label": "Binarizer"}], "feature": "Customer_Behaviour[Area Income]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "54913.92", "stddev": "14040.03", "min": "14775.5", "max": "78119.5", "missing": "0"}, "transformation": [{"transformation": "Binarizer", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Area I..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Daily Internet Usage]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "177.45", "stddev": "43.92", "min": "105.0", "max": "261.02", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Daily ..."}, {"transformationsData": [{"feature_label": "Customer_Behaviour[Ad Topic Line]", "transformation_label": "String Indexer"}], "feature": "Customer_Behaviour[Ad Topic Line]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Adaptive 24hour Graphic Interface", "max": "Visionary reciprocal circuit", "missing": "0", "distinct": "500"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Ad Top..."}, {"transformationsData": [{"feature_label": "Customer_Behaviour[City]", "transformation_label": "String Indexer"}], "feature": "Customer_Behaviour[City]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Adamsbury", "max": "Zacharyton", "missing": "0", "distinct": "497"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[City]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Male]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Male]"}, {"transformationsData": [{"feature_label": "Customer_Behaviour[Country]", "transformation_label": "String Indexer"}], "feature": "Customer_Behaviour[Country]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Afghanistan", "max": "Zimbabwe", "missing": "0", "distinct": "209"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Customer_Behaviour[Countr..."}, {"transformationsData": [{"feature_label": "Customer_Behaviour[Timestamp]", "transformation_label": "Extract Date"}], "feature": "Customer_Behaviour[Timestamp]", "type": "date", "selected": true, "replaceby": "random", "stats": {"count": "", "mean": "", "stddev": "", "min": "", "max": "", "missing": "0"}, "transformation": [{"transformation": "Extract Date", "selectedAsDefault": 1}], "generated": false, "updatedLabel": "Customer_Behaviour[Timest..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Customer_Behaviour[Clicked on Ad]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.54", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Customer_Behaviour[Clicke..."}], "autoFE_flag": true, "modeltrainingpercent": "100"}, "status": "new", "position": {"x": 62, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/transformation/feature-transformation.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "transformation", "text": "Auto FE", "slug": "auto-fe", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10"}, "ManualFE": {"FE": []}, "selectedFE": [], "autoFE_flag": true}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "d2596556-3f80-4d6d-b0c0-61914b958779", "original_schema": [{"inherited": true, "checked": true, "field": "Customer_Behaviour[Daily Time Spent on Site]", "alias": "Customer_Behaviour[Daily Time Spent on Site]", "type": "real", "position": 0}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Age]", "alias": "Customer_Behaviour[Age]", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Daily Internet Usage]", "alias": "Customer_Behaviour[Daily Internet Usage]", "type": "real", "position": 2}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Male]", "alias": "Customer_Behaviour[Male]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Clicked on Ad]", "alias": "Customer_Behaviour[Clicked on Ad]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Area Income]_binarizer", "alias": "Customer_Behaviour[Area Income]_binarizer", "type": "real", "position": 5}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Ad Topic Line]_stringindexer", "alias": "Customer_Behaviour[Ad Topic Line]_stringindexer", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[City]_stringindexer", "alias": "Customer_Behaviour[City]_stringindexer", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Country]_stringindexer", "alias": "Customer_Behaviour[Country]_stringindexer", "type": "real", "position": 8}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Timestamp]_dayofmonth", "alias": "Customer_Behaviour[Timestamp]_dayofmonth", "type": "numeric", "position": 9, "generated": true}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Timestamp]_month", "alias": "Customer_Behaviour[Timestamp]_month", "type": "numeric", "position": 10, "generated": true}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Timestamp]_year", "alias": "Customer_Behaviour[Timestamp]_year", "type": "numeric", "position": 11, "generated": true}], "actual_schema": [{"inherited": true, "checked": true, "field": "Customer_Behaviour[Daily Time Spent on Site]", "alias": "Customer_Behaviour[Daily Time Spent on Site]", "type": "real", "position": 0}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Age]", "alias": "Customer_Behaviour[Age]", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Area Income]", "alias": "Customer_Behaviour[Area Income]", "type": "real", "position": 2}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Daily Internet Usage]", "alias": "Customer_Behaviour[Daily Internet Usage]", "type": "real", "position": 3}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Ad Topic Line]", "alias": "Customer_Behaviour[Ad Topic Line]", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[City]", "alias": "Customer_Behaviour[City]", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Male]", "alias": "Customer_Behaviour[Male]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Country]", "alias": "Customer_Behaviour[Country]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Timestamp]", "alias": "Customer_Behaviour[Timestamp]", "type": "numeric", "position": 8}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Clicked on Ad]", "alias": "Customer_Behaviour[Clicked on Ad]", "type": "numeric", "position": 9}], "selected_schema": [], "created_at": "2023-08-02 18:11:20.782000", "originalcount": 1000, "samplecount": 1000, "samplefile": "/FileStore/platform/sampleData/64ca9c48ab8472757bd245a0/part-00000-9fb367dc-3789-4ede-8c65-c460c1b33b2d-c000.csv", "joinSchema": [], "updated_at": "2023-08-02 18:11:20.810000", "__v": 0, "datacache": 0, "sampleData": [{"Customer_Behaviour[Daily Time Spent on Site]": 47.64, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 45632.51, "Customer_Behaviour[Daily Internet Usage]": 122.02, "Customer_Behaviour[Ad Topic Line]": "Centralized neutral neural-net", "Customer_Behaviour[City]": "West Brandonton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Qatar", "Customer_Behaviour[Timestamp]": 1458159541000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.95, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 30976.0, "Customer_Behaviour[Daily Internet Usage]": 143.56, "Customer_Behaviour[Ad Topic Line]": "Grass-roots coherent extranet", "Customer_Behaviour[City]": "West William", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Barbados", "Customer_Behaviour[Timestamp]": 1458811909000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.39, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 23936.86, "Customer_Behaviour[Daily Internet Usage]": 129.41, "Customer_Behaviour[Ad Topic Line]": "Customizable multi-tasking website", "Customer_Behaviour[City]": "West Dylanberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Palestinian Territory", "Customer_Behaviour[Timestamp]": 1454181641000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.49, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Area Income]": 32635.7, "Customer_Behaviour[Daily Internet Usage]": 164.83, "Customer_Behaviour[Ad Topic Line]": "Mandatory disintermediate utilization", "Customer_Behaviour[City]": "South John", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1463734173000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.39, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 68962.32, "Customer_Behaviour[Daily Internet Usage]": 167.22, "Customer_Behaviour[Ad Topic Line]": "Exclusive neutral parallelism", "Customer_Behaviour[City]": "Harperborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tokelau", "Customer_Behaviour[Timestamp]": 1465838829000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.95, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Area Income]": 58295.82, "Customer_Behaviour[Daily Internet Usage]": 129.23, "Customer_Behaviour[Ad Topic Line]": "Monitored systematic hierarchy", "Customer_Behaviour[City]": "South Cathyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greece", "Customer_Behaviour[Timestamp]": 1468917130000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.2, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 32708.94, "Customer_Behaviour[Daily Internet Usage]": 119.2, "Customer_Behaviour[Ad Topic Line]": "Open-architected impactful productivity", "Customer_Behaviour[City]": "Palmerside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "British Virgin Islands", "Customer_Behaviour[Timestamp]": 1460610515000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.6, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 30227.98, "Customer_Behaviour[Daily Internet Usage]": 212.58, "Customer_Behaviour[Ad Topic Line]": "Multi-layered 4thgeneration knowledge user", "Customer_Behaviour[City]": "Port Cassie", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1452780009000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 38.93, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 27508.41, "Customer_Behaviour[Daily Internet Usage]": 162.08, "Customer_Behaviour[Ad Topic Line]": "Intuitive exuding service-desk", "Customer_Behaviour[City]": "Millerchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1457678950000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.01, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 54286.1, "Customer_Behaviour[Daily Internet Usage]": 119.93, "Customer_Behaviour[Ad Topic Line]": "Centralized 24/7 installation", "Customer_Behaviour[City]": "West Christopher", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Italy", "Customer_Behaviour[Timestamp]": 1461582114000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.31, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 62722.57, "Customer_Behaviour[Daily Internet Usage]": 119.3, "Customer_Behaviour[Ad Topic Line]": "Team-oriented encompassing portal", "Customer_Behaviour[City]": "Amandahaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkey", "Customer_Behaviour[Timestamp]": 1455435418000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.19, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 75254.88, "Customer_Behaviour[Daily Internet Usage]": 150.61, "Customer_Behaviour[Ad Topic Line]": "Cross-group regional website", "Customer_Behaviour[City]": "Garciaside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Israel", "Customer_Behaviour[Timestamp]": 1455709320000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 44.98, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 52336.64, "Customer_Behaviour[Daily Internet Usage]": 129.31, "Customer_Behaviour[Ad Topic Line]": "Organized global model", "Customer_Behaviour[City]": "Port Sarahshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Svalbard & Jan Mayen Islands", "Customer_Behaviour[Timestamp]": 1460247227000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.82, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 24852.9, "Customer_Behaviour[Daily Internet Usage]": 156.36, "Customer_Behaviour[Ad Topic Line]": "Phased transitional instruction set", "Customer_Behaviour[City]": "Brendachester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iran", "Customer_Behaviour[Timestamp]": 1464302987000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.96, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 66281.46, "Customer_Behaviour[Daily Internet Usage]": 141.22, "Customer_Behaviour[Ad Topic Line]": "Streamlined cohesive conglomeration", "Customer_Behaviour[City]": "Robertfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Christmas Island", "Customer_Behaviour[Timestamp]": 1464915323000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.89, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 51317.33, "Customer_Behaviour[Daily Internet Usage]": 105.22, "Customer_Behaviour[Ad Topic Line]": "Synchronized user-facing core", "Customer_Behaviour[City]": "Jensenborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Rwanda", "Customer_Behaviour[Timestamp]": 1452212247000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.33, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 51510.18, "Customer_Behaviour[Daily Internet Usage]": 200.22, "Customer_Behaviour[Ad Topic Line]": "Organized client-driven alliance", "Customer_Behaviour[City]": "Bradleyburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turks and Caicos Islands", "Customer_Behaviour[Timestamp]": 1465164694000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.53, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 32536.98, "Customer_Behaviour[Daily Internet Usage]": 131.72, "Customer_Behaviour[Ad Topic Line]": "Synergized multimedia emulation", "Customer_Behaviour[City]": "North Regina", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Norfolk Island", "Customer_Behaviour[Timestamp]": 1461355822000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.13, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 60248.97, "Customer_Behaviour[Daily Internet Usage]": 139.01, "Customer_Behaviour[Ad Topic Line]": "Customer-focused optimizing moderator", "Customer_Behaviour[City]": "Davidmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bouvet Island (Bouvetoya)", "Customer_Behaviour[Timestamp]": 1454317255000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.13, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 55605.92, "Customer_Behaviour[Daily Internet Usage]": 111.71, "Customer_Behaviour[Ad Topic Line]": "Customizable executive software", "Customer_Behaviour[City]": "Lake Conniefurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ukraine", "Customer_Behaviour[Timestamp]": 1455746129000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.64, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 61652.53, "Customer_Behaviour[Daily Internet Usage]": 115.91, "Customer_Behaviour[Ad Topic Line]": "Down-sized uniform info-mediaries", "Customer_Behaviour[City]": "Lake Christopherfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Montserrat", "Customer_Behaviour[Timestamp]": 1452016612000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.94, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Area Income]": 30726.26, "Customer_Behaviour[Daily Internet Usage]": 138.71, "Customer_Behaviour[Ad Topic Line]": "Streamlined next generation implementation", "Customer_Behaviour[City]": "East Tylershire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Timor-Leste", "Customer_Behaviour[Timestamp]": 1461051268000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.76, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 47861.93, "Customer_Behaviour[Daily Internet Usage]": 105.15, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered scalable groupware", "Customer_Behaviour[City]": "Lake Dustin", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1465745144000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.7, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 42696.67, "Customer_Behaviour[Daily Internet Usage]": 109.07, "Customer_Behaviour[Ad Topic Line]": "Phased dynamic customer loyalty", "Customer_Behaviour[City]": "New Tina", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1457997191000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.9, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 71392.53, "Customer_Behaviour[Daily Internet Usage]": 138.35, "Customer_Behaviour[Ad Topic Line]": "Down-sized modular intranet", "Customer_Behaviour[City]": "Christopherport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jersey", "Customer_Behaviour[Timestamp]": 1463140270000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.79, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 59550.05, "Customer_Behaviour[Daily Internet Usage]": 149.67, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive content-based focus group", "Customer_Behaviour[City]": "Port Sarahhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1456001225000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.94, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 64927.19, "Customer_Behaviour[Daily Internet Usage]": 156.3, "Customer_Behaviour[Ad Topic Line]": "Function-based optimizing protocol", "Customer_Behaviour[City]": "Williamsborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lithuania", "Customer_Behaviour[Timestamp]": 1452293230000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.61, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 51868.85, "Customer_Behaviour[Daily Internet Usage]": 158.22, "Customer_Behaviour[Ad Topic Line]": "Up-sized secondary software", "Customer_Behaviour[City]": "North Michael", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Egypt", "Customer_Behaviour[Timestamp]": 1459154786000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.49, "Customer_Behaviour[Age]": 53, "Customer_Behaviour[Area Income]": 31947.65, "Customer_Behaviour[Daily Internet Usage]": 169.18, "Customer_Behaviour[Ad Topic Line]": "Persevering reciprocal firmware", "Customer_Behaviour[City]": "Hernandezville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Western Sahara", "Customer_Behaviour[Timestamp]": 1467537750000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.39, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 66541.05, "Customer_Behaviour[Daily Internet Usage]": 150.99, "Customer_Behaviour[Ad Topic Line]": "De-engineered mobile infrastructure", "Customer_Behaviour[City]": "Erinton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Christmas Island", "Customer_Behaviour[Timestamp]": 1461822625000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.53, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 33258.09, "Customer_Behaviour[Daily Internet Usage]": 135.18, "Customer_Behaviour[Ad Topic Line]": "Customer-focused upward-trending contingency", "Customer_Behaviour[City]": "Hughesport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guinea", "Customer_Behaviour[Timestamp]": 1459660231000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.63, "Customer_Behaviour[Age]": 60, "Customer_Behaviour[Area Income]": 60333.38, "Customer_Behaviour[Daily Internet Usage]": 176.98, "Customer_Behaviour[Ad Topic Line]": "User-friendly upward-trending intranet", "Customer_Behaviour[City]": "New Lucasburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Madagascar", "Customer_Behaviour[Timestamp]": 1452987471000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.6, "Customer_Behaviour[Age]": 55, "Customer_Behaviour[Area Income]": 66815.54, "Customer_Behaviour[Daily Internet Usage]": 162.95, "Customer_Behaviour[Ad Topic Line]": "Focused intangible moderator", "Customer_Behaviour[City]": "Port Christopherborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Arab Emirates", "Customer_Behaviour[Timestamp]": 1468426344000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.45, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 29727.79, "Customer_Behaviour[Daily Internet Usage]": 207.18, "Customer_Behaviour[Ad Topic Line]": "Customer-focused transitional strategy", "Customer_Behaviour[City]": "Millerside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Somalia", "Customer_Behaviour[Timestamp]": 1468383053000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.97, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 49269.98, "Customer_Behaviour[Daily Internet Usage]": 152.49, "Customer_Behaviour[Ad Topic Line]": "Advanced web-enabled standardization", "Customer_Behaviour[City]": "Lake Jessica", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bhutan", "Customer_Behaviour[Timestamp]": 1465669932000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 37.75, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 35466.8, "Customer_Behaviour[Daily Internet Usage]": 225.24, "Customer_Behaviour[Ad Topic Line]": "Polarized dynamic throughput", "Customer_Behaviour[City]": "South Daniel", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Uzbekistan", "Customer_Behaviour[Timestamp]": 1456516103000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.33, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 68787.09, "Customer_Behaviour[Daily Internet Usage]": 127.11, "Customer_Behaviour[Ad Topic Line]": "Devolved zero administration intranet", "Customer_Behaviour[City]": "Suzannetown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1466514921000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.31, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 56366.88, "Customer_Behaviour[Daily Internet Usage]": 127.07, "Customer_Behaviour[Ad Topic Line]": "Cross-platform regional task-force", "Customer_Behaviour[City]": "Brianfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1460994873000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.98, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 21644.91, "Customer_Behaviour[Daily Internet Usage]": 175.37, "Customer_Behaviour[Ad Topic Line]": "Down-sized well-modulated archive", "Customer_Behaviour[City]": "East Michelleberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lithuania", "Customer_Behaviour[Timestamp]": 1462352424000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.67, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 53817.02, "Customer_Behaviour[Daily Internet Usage]": 132.55, "Customer_Behaviour[Ad Topic Line]": "Realigned zero tolerance emulation", "Customer_Behaviour[City]": "Port Eric", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Martin", "Customer_Behaviour[Timestamp]": 1465843800000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.24, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 76368.31, "Customer_Behaviour[Daily Internet Usage]": 176.73, "Customer_Behaviour[Ad Topic Line]": "Versatile transitional monitoring", "Customer_Behaviour[City]": "Timothyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cuba", "Customer_Behaviour[Timestamp]": 1451836900000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.49, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 50335.46, "Customer_Behaviour[Daily Internet Usage]": 127.83, "Customer_Behaviour[Ad Topic Line]": "User-centric intangible task-force", "Customer_Behaviour[City]": "Guzmanland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belize", "Customer_Behaviour[Timestamp]": 1452593249000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 38.37, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 41229.16, "Customer_Behaviour[Daily Internet Usage]": 140.46, "Customer_Behaviour[Ad Topic Line]": "Multi-layered user-facing paradigm", "Customer_Behaviour[City]": "East John", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Antarctica (the territory South of 60 deg S)", "Customer_Behaviour[Timestamp]": 1463119768000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.78, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 71718.51, "Customer_Behaviour[Daily Internet Usage]": 152.24, "Customer_Behaviour[Ad Topic Line]": "Enterprise-wide client-driven contingency", "Customer_Behaviour[City]": "Heatherberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Dominica", "Customer_Behaviour[Timestamp]": 1467168209000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.61, "Customer_Behaviour[Age]": 57, "Customer_Behaviour[Area Income]": 61770.34, "Customer_Behaviour[Daily Internet Usage]": 150.29, "Customer_Behaviour[Ad Topic Line]": "Diverse modular interface", "Customer_Behaviour[City]": "South George", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1460317681000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 44.64, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 55787.58, "Customer_Behaviour[Daily Internet Usage]": 127.01, "Customer_Behaviour[Ad Topic Line]": "Up-sized incremental encryption", "Customer_Behaviour[City]": "Codyburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belize", "Customer_Behaviour[Timestamp]": 1455432703000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.55, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 73234.87, "Customer_Behaviour[Daily Internet Usage]": 159.24, "Customer_Behaviour[Ad Topic Line]": "Managed grid-enabled standardization", "Customer_Behaviour[City]": "Ramirezside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liechtenstein", "Customer_Behaviour[Timestamp]": 1462762738000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.28, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 50960.08, "Customer_Behaviour[Daily Internet Usage]": 140.39, "Customer_Behaviour[Ad Topic Line]": "Universal 24/7 implementation", "Customer_Behaviour[City]": "East Rachelview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Equatorial Guinea", "Customer_Behaviour[Timestamp]": 1454039659000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 34.66, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 48246.6, "Customer_Behaviour[Daily Internet Usage]": 194.83, "Customer_Behaviour[Ad Topic Line]": "Customer-focused multi-tasking Internet solution", "Customer_Behaviour[City]": "Curtisport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mongolia", "Customer_Behaviour[Timestamp]": 1468498030000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.18, "Customer_Behaviour[Age]": 55, "Customer_Behaviour[Area Income]": 28271.84, "Customer_Behaviour[Daily Internet Usage]": 143.42, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented contextually-based extranet", "Customer_Behaviour[City]": "Frankbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Svalbard & Jan Mayen Islands", "Customer_Behaviour[Timestamp]": 1452467670000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.36, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Area Income]": 70053.27, "Customer_Behaviour[Daily Internet Usage]": 137.43, "Customer_Behaviour[Ad Topic Line]": "Centralized tertiary pricing structure", "Customer_Behaviour[City]": "East Eric", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guinea", "Customer_Behaviour[Timestamp]": 1466644963000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.72, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 42995.8, "Customer_Behaviour[Daily Internet Usage]": 105.69, "Customer_Behaviour[Ad Topic Line]": "Synergized context-sensitive database", "Customer_Behaviour[City]": "Jacobstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kuwait", "Customer_Behaviour[Timestamp]": 1456685564000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.85, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 31343.39, "Customer_Behaviour[Daily Internet Usage]": 145.96, "Customer_Behaviour[Ad Topic Line]": "Profit-focused dedicated utilization", "Customer_Behaviour[City]": "East Stephen", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Vietnam", "Customer_Behaviour[Timestamp]": 1451791335000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.53, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 40763.13, "Customer_Behaviour[Daily Internet Usage]": 168.34, "Customer_Behaviour[Ad Topic Line]": "Stand-alone tangible moderator", "Customer_Behaviour[City]": "Turnerchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guatemala", "Customer_Behaviour[Timestamp]": 1451944118000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.95, "Customer_Behaviour[Age]": 60, "Customer_Behaviour[Area Income]": 36752.24, "Customer_Behaviour[Daily Internet Usage]": 157.04, "Customer_Behaviour[Ad Topic Line]": "Polarized tangible collaboration", "Customer_Behaviour[City]": "Youngfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1464096638000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.88, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Area Income]": 43444.86, "Customer_Behaviour[Daily Internet Usage]": 136.64, "Customer_Behaviour[Ad Topic Line]": "Virtual scalable secured line", "Customer_Behaviour[City]": "Port Melissaberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Singapore", "Customer_Behaviour[Timestamp]": 1454576017000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.73, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 39840.55, "Customer_Behaviour[Daily Internet Usage]": 153.76, "Customer_Behaviour[Ad Topic Line]": "Synchronized leadingedge help-desk", "Customer_Behaviour[City]": "Aliciatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Canada", "Customer_Behaviour[Timestamp]": 1456040568000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.86, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 32593.59, "Customer_Behaviour[Daily Internet Usage]": 145.85, "Customer_Behaviour[Ad Topic Line]": "Total 5thgeneration standardization", "Customer_Behaviour[City]": "Josephstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1466961386000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.08, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 41629.86, "Customer_Behaviour[Daily Internet Usage]": 123.91, "Customer_Behaviour[Ad Topic Line]": "Sharable grid-enabled matrix", "Customer_Behaviour[City]": "West Ericfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1451799273000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.23, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 43313.73, "Customer_Behaviour[Daily Internet Usage]": 106.86, "Customer_Behaviour[Ad Topic Line]": "Balanced asynchronous hierarchy", "Customer_Behaviour[City]": "New Brendafurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kenya", "Customer_Behaviour[Timestamp]": 1457460043000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.86, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 51633.34, "Customer_Behaviour[Daily Internet Usage]": 116.53, "Customer_Behaviour[Ad Topic Line]": "Face-to-face even-keeled website", "Customer_Behaviour[City]": "Kentmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1463465660000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.22, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 37345.24, "Customer_Behaviour[Daily Internet Usage]": 120.9, "Customer_Behaviour[Ad Topic Line]": "User-friendly client-server instruction set", "Customer_Behaviour[City]": "North Russellborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1455158402000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.51, "Customer_Behaviour[Age]": 58, "Customer_Behaviour[Area Income]": 39132.64, "Customer_Behaviour[Daily Internet Usage]": 140.83, "Customer_Behaviour[Ad Topic Line]": "Assimilated fault-tolerant hub", "Customer_Behaviour[City]": "Penatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1466042484000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.89, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 68519.96, "Customer_Behaviour[Daily Internet Usage]": 163.38, "Customer_Behaviour[Ad Topic Line]": "Compatible systemic function", "Customer_Behaviour[City]": "Hartmanchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cyprus", "Customer_Behaviour[Timestamp]": 1454473274000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.01, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 34127.21, "Customer_Behaviour[Daily Internet Usage]": 151.95, "Customer_Behaviour[Ad Topic Line]": "Front-line tangible alliance", "Customer_Behaviour[City]": "Hansenmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1466478881000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 53.3, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 44893.71, "Customer_Behaviour[Daily Internet Usage]": 111.94, "Customer_Behaviour[Ad Topic Line]": "Self-enabling optimal initiative", "Customer_Behaviour[City]": "West Jessicahaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mauritania", "Customer_Behaviour[Timestamp]": 1462568851000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 34.87, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 59621.02, "Customer_Behaviour[Daily Internet Usage]": 200.23, "Customer_Behaviour[Ad Topic Line]": "Configurable logistical Graphical User Interface", "Customer_Behaviour[City]": "Davilachester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Czech Republic", "Customer_Behaviour[Timestamp]": 1465753963000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.6, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 20856.54, "Customer_Behaviour[Daily Internet Usage]": 170.49, "Customer_Behaviour[Ad Topic Line]": "Virtual bandwidth-monitored initiative", "Customer_Behaviour[City]": "North Ricardotown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Chile", "Customer_Behaviour[Timestamp]": 1452497782000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.95, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 68737.75, "Customer_Behaviour[Daily Internet Usage]": 136.59, "Customer_Behaviour[Ad Topic Line]": "Cloned object-oriented benchmark", "Customer_Behaviour[City]": "Millerbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkmenistan", "Customer_Behaviour[Timestamp]": 1458810772000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.94, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 76893.84, "Customer_Behaviour[Daily Internet Usage]": 154.97, "Customer_Behaviour[Ad Topic Line]": "Fundamental fault-tolerant neural-net", "Customer_Behaviour[City]": "Garciaview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Latvia", "Customer_Behaviour[Timestamp]": 1455435024000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.7, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 53441.69, "Customer_Behaviour[Daily Internet Usage]": 133.99, "Customer_Behaviour[Ad Topic Line]": "Compatible intangible customer loyalty", "Customer_Behaviour[City]": "Williamstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkey", "Customer_Behaviour[Timestamp]": 1455132051000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.35, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 41356.31, "Customer_Behaviour[Daily Internet Usage]": 119.84, "Customer_Behaviour[Ad Topic Line]": "Distributed 3rdgeneration definition", "Customer_Behaviour[City]": "West Connor", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kazakhstan", "Customer_Behaviour[Timestamp]": 1461422078000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 34.86, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 49942.66, "Customer_Behaviour[Daily Internet Usage]": 154.75, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive cohesive budgetary management", "Customer_Behaviour[City]": "West Justin", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bahrain", "Customer_Behaviour[Timestamp]": 1466272592000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.42, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 74445.18, "Customer_Behaviour[Daily Internet Usage]": 143.94, "Customer_Behaviour[Ad Topic Line]": "Diverse executive groupware", "Customer_Behaviour[City]": "West Tinashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Pierre and Miquelon", "Customer_Behaviour[Timestamp]": 1468915158000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.32, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 49309.14, "Customer_Behaviour[Daily Internet Usage]": 239.52, "Customer_Behaviour[Ad Topic Line]": "Synergized cohesive array", "Customer_Behaviour[City]": "Jamesfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1466941938000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.77, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 58348.41, "Customer_Behaviour[Daily Internet Usage]": 123.51, "Customer_Behaviour[Ad Topic Line]": "Universal even-keeled analyzer", "Customer_Behaviour[City]": "Harveyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turks and Caicos Islands", "Customer_Behaviour[Timestamp]": 1462320093000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.32, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 62060.11, "Customer_Behaviour[Daily Internet Usage]": 128.17, "Customer_Behaviour[Ad Topic Line]": "Monitored real-time superstructure", "Customer_Behaviour[City]": "North Kevinside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1464038078000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.03, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 24030.06, "Customer_Behaviour[Daily Internet Usage]": 150.84, "Customer_Behaviour[Ad Topic Line]": "Automated static concept", "Customer_Behaviour[City]": "Christinetown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1469285243000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.44, "Customer_Behaviour[Age]": 56, "Customer_Behaviour[Area Income]": 43450.11, "Customer_Behaviour[Daily Internet Usage]": 168.27, "Customer_Behaviour[Ad Topic Line]": "Profit-focused attitude-oriented task-force", "Customer_Behaviour[City]": "Petersonfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tajikistan", "Customer_Behaviour[Timestamp]": 1455117797000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.2, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 25408.21, "Customer_Behaviour[Daily Internet Usage]": 161.16, "Customer_Behaviour[Ad Topic Line]": "Cross-platform multimedia algorithm", "Customer_Behaviour[City]": "New Lindaberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liechtenstein", "Customer_Behaviour[Timestamp]": 1461505335000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.7, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Area Income]": 62784.85, "Customer_Behaviour[Daily Internet Usage]": 123.13, "Customer_Behaviour[Ad Topic Line]": "Progressive non-volatile neural-net", "Customer_Behaviour[City]": "Port Crystal", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "France", "Customer_Behaviour[Timestamp]": 1452315202000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.84, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 42042.95, "Customer_Behaviour[Daily Internet Usage]": 121.05, "Customer_Behaviour[Ad Topic Line]": "Programmable uniform productivity", "Customer_Behaviour[City]": "South Jasminebury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Albania", "Customer_Behaviour[Timestamp]": 1466270606000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.25, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 54875.95, "Customer_Behaviour[Daily Internet Usage]": 109.77, "Customer_Behaviour[Ad Topic Line]": "De-engineered fault-tolerant database", "Customer_Behaviour[City]": "Charlottefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1467207305000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.02, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 50199.77, "Customer_Behaviour[Daily Internet Usage]": 125.22, "Customer_Behaviour[Ad Topic Line]": "Configurable bottom-line application", "Customer_Behaviour[City]": "West Lindseybury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Thailand", "Customer_Behaviour[Timestamp]": 1460526172000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.58, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 56694.12, "Customer_Behaviour[Daily Internet Usage]": 136.94, "Customer_Behaviour[Ad Topic Line]": "Proactive next generation knowledge user", "Customer_Behaviour[City]": "Lake David", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1456478328000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.66, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 27086.4, "Customer_Behaviour[Daily Internet Usage]": 156.54, "Customer_Behaviour[Ad Topic Line]": "Devolved responsive structure", "Customer_Behaviour[City]": "Tinaton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Honduras", "Customer_Behaviour[Timestamp]": 1468841611000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.37, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Area Income]": 32847.53, "Customer_Behaviour[Daily Internet Usage]": 144.27, "Customer_Behaviour[Ad Topic Line]": "De-engineered solution-oriented open architecture", "Customer_Behaviour[City]": "Alexanderfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Guiana", "Customer_Behaviour[Timestamp]": 1451952173000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.88, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 32006.82, "Customer_Behaviour[Daily Internet Usage]": 148.61, "Customer_Behaviour[Ad Topic Line]": "Customizable modular Internet solution", "Customer_Behaviour[City]": "West Pamela", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Northern Mariana Islands", "Customer_Behaviour[Timestamp]": 1463274186000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.67, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 48913.07, "Customer_Behaviour[Daily Internet Usage]": 133.18, "Customer_Behaviour[Ad Topic Line]": "Stand-alone encompassing throughput", "Customer_Behaviour[City]": "West Amanda", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lebanon", "Customer_Behaviour[Timestamp]": 1462440516000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.01, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 46339.25, "Customer_Behaviour[Daily Internet Usage]": 127.26, "Customer_Behaviour[Ad Topic Line]": "Re-engineered real-time success", "Customer_Behaviour[City]": "Garciamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tonga", "Customer_Behaviour[Timestamp]": 1467745185000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.05, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 66348.95, "Customer_Behaviour[Daily Internet Usage]": 141.36, "Customer_Behaviour[Ad Topic Line]": "Digitized contextually-based product", "Customer_Behaviour[City]": "South Kyle", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Southern Territories", "Customer_Behaviour[Timestamp]": 1462446569000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.53, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 66873.9, "Customer_Behaviour[Daily Internet Usage]": 167.22, "Customer_Behaviour[Ad Topic Line]": "Organic interactive support", "Customer_Behaviour[City]": "Combsstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Serbia", "Customer_Behaviour[Timestamp]": 1458919059000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.52, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 72270.88, "Customer_Behaviour[Daily Internet Usage]": 171.62, "Customer_Behaviour[Ad Topic Line]": "Function-based stable alliance", "Customer_Behaviour[City]": "Lake Allenville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "New Caledonia", "Customer_Behaviour[Timestamp]": 1453561333000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 52.62, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 73863.25, "Customer_Behaviour[Daily Internet Usage]": 176.52, "Customer_Behaviour[Ad Topic Line]": "Enterprise-wide foreground emulation", "Customer_Behaviour[City]": "Port Juan", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Seychelles", "Customer_Behaviour[Timestamp]": 1454358635000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.25, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 62378.05, "Customer_Behaviour[Daily Internet Usage]": 152.36, "Customer_Behaviour[Ad Topic Line]": "Customer-focused incremental system engine", "Customer_Behaviour[City]": "Michellefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mayotte", "Customer_Behaviour[Timestamp]": 1453570746000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 33.52, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 42191.61, "Customer_Behaviour[Daily Internet Usage]": 165.56, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented optimizing middleware", "Customer_Behaviour[City]": "Jessicahaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cambodia", "Customer_Behaviour[Timestamp]": 1462830878000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.92, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Area Income]": 23975.35, "Customer_Behaviour[Daily Internet Usage]": 161.16, "Customer_Behaviour[Ad Topic Line]": "Extended interactive model", "Customer_Behaviour[City]": "Roberttown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Pierre and Miquelon", "Customer_Behaviour[Timestamp]": 1465826391000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.55, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 41851.38, "Customer_Behaviour[Daily Internet Usage]": 169.4, "Customer_Behaviour[Ad Topic Line]": "Upgradable even-keeled challenge", "Customer_Behaviour[City]": "New Amanda", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1455866970000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.89, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 47160.53, "Customer_Behaviour[Daily Internet Usage]": 110.68, "Customer_Behaviour[Ad Topic Line]": "Horizontal national architecture", "Customer_Behaviour[City]": "North April", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "France", "Customer_Behaviour[Timestamp]": 1461112913000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.06, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 44174.25, "Customer_Behaviour[Daily Internet Usage]": 105.0, "Customer_Behaviour[Ad Topic Line]": "Adaptive contextually-based methodology", "Customer_Behaviour[City]": "Port Paultown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Austria", "Customer_Behaviour[Timestamp]": 1460469668000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.5, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 67050.16, "Customer_Behaviour[Daily Internet Usage]": 135.31, "Customer_Behaviour[Ad Topic Line]": "Configurable dynamic adapter", "Customer_Behaviour[City]": "East Vincentstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Zambia", "Customer_Behaviour[Timestamp]": 1458041148000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 36.87, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 29398.61, "Customer_Behaviour[Daily Internet Usage]": 195.91, "Customer_Behaviour[Ad Topic Line]": "Self-enabling incremental collaboration", "Customer_Behaviour[City]": "New Rebecca", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Anguilla", "Customer_Behaviour[Timestamp]": 1453981840000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.47, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 60953.93, "Customer_Behaviour[Daily Internet Usage]": 219.79, "Customer_Behaviour[Ad Topic Line]": "Secured scalable Graphical User Interface", "Customer_Behaviour[City]": "Port Brookeland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Martinique", "Customer_Behaviour[Timestamp]": 1467820599000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 36.31, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 57983.3, "Customer_Behaviour[Daily Internet Usage]": 168.92, "Customer_Behaviour[Ad Topic Line]": "Reverse-engineered well-modulated capability", "Customer_Behaviour[City]": "East Yvonnechester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Eritrea", "Customer_Behaviour[Timestamp]": 1460940573000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.23, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Area Income]": 52736.33, "Customer_Behaviour[Daily Internet Usage]": 115.35, "Customer_Behaviour[Ad Topic Line]": "Integrated coherent pricing structure", "Customer_Behaviour[City]": "Burgessside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mexico", "Customer_Behaviour[Timestamp]": 1468718036000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.91, "Customer_Behaviour[Age]": 19, "Customer_Behaviour[Area Income]": 53309.61, "Customer_Behaviour[Daily Internet Usage]": 184.94, "Customer_Behaviour[Ad Topic Line]": "Upgradable directional system engine", "Customer_Behaviour[City]": "Port Kathleenfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Nauru", "Customer_Behaviour[Timestamp]": 1465482246000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.87, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Area Income]": 43698.53, "Customer_Behaviour[Daily Internet Usage]": 126.97, "Customer_Behaviour[Ad Topic Line]": "Public-key non-volatile implementation", "Customer_Behaviour[City]": "Charlenetown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Barthelemy", "Customer_Behaviour[Timestamp]": 1464661038000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 37.45, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 31281.01, "Customer_Behaviour[Daily Internet Usage]": 167.86, "Customer_Behaviour[Ad Topic Line]": "Horizontal high-level concept", "Customer_Behaviour[City]": "South Johnnymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Antigua and Barbuda", "Customer_Behaviour[Timestamp]": 1460259016000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.84, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 45800.48, "Customer_Behaviour[Daily Internet Usage]": 111.59, "Customer_Behaviour[Ad Topic Line]": "Reduced multimedia project", "Customer_Behaviour[City]": "Hannaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1455002485000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.38, "Customer_Behaviour[Age]": 59, "Customer_Behaviour[Area Income]": 42362.49, "Customer_Behaviour[Daily Internet Usage]": 158.56, "Customer_Behaviour[Ad Topic Line]": "Object-based modular functionalities", "Customer_Behaviour[City]": "East Anthony", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1466183476000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.6, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 45400.5, "Customer_Behaviour[Daily Internet Usage]": 113.7, "Customer_Behaviour[Ad Topic Line]": "Organic asynchronous hierarchy", "Customer_Behaviour[City]": "Rogerburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1453965029000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.73, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 60812.77, "Customer_Behaviour[Daily Internet Usage]": 144.71, "Customer_Behaviour[Ad Topic Line]": "Proactive client-server productivity", "Customer_Behaviour[City]": "Andersonchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cote d'Ivoire", "Customer_Behaviour[Timestamp]": 1460155705000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.2, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 26023.99, "Customer_Behaviour[Daily Internet Usage]": 123.8, "Customer_Behaviour[Ad Topic Line]": "Balanced value-added database", "Customer_Behaviour[City]": "Meyersstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1466157526000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.56, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 62318.38, "Customer_Behaviour[Daily Internet Usage]": 125.45, "Customer_Behaviour[Ad Topic Line]": "Seamless composite budgetary management", "Customer_Behaviour[City]": "Michelleside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kenya", "Customer_Behaviour[Timestamp]": 1461618939000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.67, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 28019.09, "Customer_Behaviour[Daily Internet Usage]": 153.69, "Customer_Behaviour[Ad Topic Line]": "Face-to-face reciprocal methodology", "Customer_Behaviour[City]": "Port Brian", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Zimbabwe", "Customer_Behaviour[Timestamp]": 1462783495000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.88, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 19991.72, "Customer_Behaviour[Daily Internet Usage]": 136.85, "Customer_Behaviour[Ad Topic Line]": "Upgradable even-keeled hardware", "Customer_Behaviour[City]": "Kristintown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Madagascar", "Customer_Behaviour[Timestamp]": 1456790166000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.52, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 66929.03, "Customer_Behaviour[Daily Internet Usage]": 219.69, "Customer_Behaviour[Ad Topic Line]": "Versatile responsive knowledge user", "Customer_Behaviour[City]": "Davisfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Kitts and Nevis", "Customer_Behaviour[Timestamp]": 1459664242000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.34, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 31215.88, "Customer_Behaviour[Daily Internet Usage]": 148.93, "Customer_Behaviour[Ad Topic Line]": "Proactive radical support", "Customer_Behaviour[City]": "Alvaradoport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bangladesh", "Customer_Behaviour[Timestamp]": 1460929151000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.73, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 34191.23, "Customer_Behaviour[Daily Internet Usage]": 142.04, "Customer_Behaviour[Ad Topic Line]": "Versatile content-based protocol", "Customer_Behaviour[City]": "Monicaview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bangladesh", "Customer_Behaviour[Timestamp]": 1468081413000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.68, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 51067.54, "Customer_Behaviour[Daily Internet Usage]": 258.62, "Customer_Behaviour[Ad Topic Line]": "Seamless cohesive conglomeration", "Customer_Behaviour[City]": "Katieport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Faroe Islands", "Customer_Behaviour[Timestamp]": 1467118262000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.34, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 46693.76, "Customer_Behaviour[Daily Internet Usage]": 152.86, "Customer_Behaviour[Ad Topic Line]": "De-engineered actuating hierarchy", "Customer_Behaviour[City]": "East Brittanyville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1466267578000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.09, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 19345.36, "Customer_Behaviour[Daily Internet Usage]": 180.42, "Customer_Behaviour[Ad Topic Line]": "Balanced motivating help-desk", "Customer_Behaviour[City]": "West Travismouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Heard Island and McDonald Islands", "Customer_Behaviour[Timestamp]": 1464439117000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.99, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 37713.23, "Customer_Behaviour[Daily Internet Usage]": 108.15, "Customer_Behaviour[Ad Topic Line]": "Sharable optimal capacity", "Customer_Behaviour[City]": "Brownton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bahamas", "Customer_Behaviour[Timestamp]": 1468710534000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.03, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 57846.68, "Customer_Behaviour[Daily Internet Usage]": 120.85, "Customer_Behaviour[Ad Topic Line]": "Advanced systemic productivity", "Customer_Behaviour[City]": "Keithtown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Netherlands Antilles", "Customer_Behaviour[Timestamp]": 1455752820000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.03, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 28387.42, "Customer_Behaviour[Daily Internet Usage]": 129.33, "Customer_Behaviour[Ad Topic Line]": "User-friendly bandwidth-monitored attitude", "Customer_Behaviour[City]": "South Jade", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tuvalu", "Customer_Behaviour[Timestamp]": 1467191071000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 60.53, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 56759.48, "Customer_Behaviour[Daily Internet Usage]": 123.28, "Customer_Behaviour[Ad Topic Line]": "Networked even-keeled workforce", "Customer_Behaviour[City]": "Williamsport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1462789308000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.58, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 28028.74, "Customer_Behaviour[Daily Internet Usage]": 255.07, "Customer_Behaviour[Ad Topic Line]": "Cross-group value-added success", "Customer_Behaviour[City]": "Port Katelynview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Congo", "Customer_Behaviour[Timestamp]": 1459795019000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.66, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 72684.44, "Customer_Behaviour[Daily Internet Usage]": 139.42, "Customer_Behaviour[Ad Topic Line]": "Upgradable asymmetric emulation", "Customer_Behaviour[City]": "Lake Jesus", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Dominican Republic", "Customer_Behaviour[Timestamp]": 1455965571000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.04, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 65499.93, "Customer_Behaviour[Daily Internet Usage]": 147.92, "Customer_Behaviour[Ad Topic Line]": "Universal transitional Graphical User Interface", "Customer_Behaviour[City]": "Andrewborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Serbia", "Customer_Behaviour[Timestamp]": 1464638879000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.84, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 41232.89, "Customer_Behaviour[Daily Internet Usage]": 171.72, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered 3rdgeneration migration", "Customer_Behaviour[City]": "New Keithburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Trinidad and Tobago", "Customer_Behaviour[Timestamp]": 1457573779000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.87, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 51869.87, "Customer_Behaviour[Daily Internet Usage]": 119.65, "Customer_Behaviour[Ad Topic Line]": "Team-oriented dynamic forecast", "Customer_Behaviour[City]": "Kevinberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1457648932000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.41, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 59144.02, "Customer_Behaviour[Daily Internet Usage]": 160.73, "Customer_Behaviour[Ad Topic Line]": "Customer-focused zero-defect process improvement", "Customer_Behaviour[City]": "Lovemouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Egypt", "Customer_Behaviour[Timestamp]": 1454685997000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.92, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 33951.63, "Customer_Behaviour[Daily Internet Usage]": 145.08, "Customer_Behaviour[Ad Topic Line]": "Focused systemic benchmark", "Customer_Behaviour[City]": "Taylorhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1464730906000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.01, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 48347.64, "Customer_Behaviour[Daily Internet Usage]": 127.37, "Customer_Behaviour[Ad Topic Line]": "Organized 24/7 middleware", "Customer_Behaviour[City]": "Butlerfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United States of America", "Customer_Behaviour[Timestamp]": 1465637872000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.99, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 49282.87, "Customer_Behaviour[Daily Internet Usage]": 177.46, "Customer_Behaviour[Ad Topic Line]": "Phased full-range hardware", "Customer_Behaviour[City]": "Masseyshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ecuador", "Customer_Behaviour[Timestamp]": 1462045324000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.38, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 25603.93, "Customer_Behaviour[Daily Internet Usage]": 159.6, "Customer_Behaviour[Ad Topic Line]": "Polarized analyzing intranet", "Customer_Behaviour[City]": "Port Blake", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Spain", "Customer_Behaviour[Timestamp]": 1468805797000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.59, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 28265.81, "Customer_Behaviour[Daily Internet Usage]": 121.81, "Customer_Behaviour[Ad Topic Line]": "Digitized disintermediate ability", "Customer_Behaviour[City]": "Brandymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Indonesia", "Customer_Behaviour[Timestamp]": 1458628898000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.84, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 70592.81, "Customer_Behaviour[Daily Internet Usage]": 167.42, "Customer_Behaviour[Ad Topic Line]": "Public-key real-time definition", "Customer_Behaviour[City]": "Port Jessica", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1467105546000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.48, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 29359.2, "Customer_Behaviour[Daily Internet Usage]": 141.34, "Customer_Behaviour[Ad Topic Line]": "Reverse-engineered 24hour hardware", "Customer_Behaviour[City]": "Yuton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Eritrea", "Customer_Behaviour[Timestamp]": 1467245973000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.2, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 51315.38, "Customer_Behaviour[Daily Internet Usage]": 119.3, "Customer_Behaviour[Ad Topic Line]": "Distributed maximized ability", "Customer_Behaviour[City]": "Welchshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belgium", "Customer_Behaviour[Timestamp]": 1459683516000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.49, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Area Income]": 43974.49, "Customer_Behaviour[Daily Internet Usage]": 159.77, "Customer_Behaviour[Ad Topic Line]": "Fully-configurable holistic throughput", "Customer_Behaviour[City]": "Timothyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "American Samoa", "Customer_Behaviour[Timestamp]": 1460126144000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.19, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 33987.27, "Customer_Behaviour[Daily Internet Usage]": 117.3, "Customer_Behaviour[Ad Topic Line]": "Progressive uniform budgetary management", "Customer_Behaviour[City]": "Lake Stephenborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Thailand", "Customer_Behaviour[Timestamp]": 1458932555000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.12, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 28210.03, "Customer_Behaviour[Daily Internet Usage]": 124.54, "Customer_Behaviour[Ad Topic Line]": "Synergistic stable infrastructure", "Customer_Behaviour[City]": "Silvaton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greece", "Customer_Behaviour[Timestamp]": 1463088726000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.7, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 49158.5, "Customer_Behaviour[Daily Internet Usage]": 120.25, "Customer_Behaviour[Ad Topic Line]": "Expanded zero administration attitude", "Customer_Behaviour[City]": "Florestown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guernsey", "Customer_Behaviour[Timestamp]": 1462889551000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.7, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 42898.21, "Customer_Behaviour[Daily Internet Usage]": 126.95, "Customer_Behaviour[Ad Topic Line]": "Innovative regional structure", "Customer_Behaviour[City]": "Jensenton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1464327327000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.35, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 70232.95, "Customer_Behaviour[Daily Internet Usage]": 132.63, "Customer_Behaviour[Ad Topic Line]": "Universal asymmetric workforce", "Customer_Behaviour[City]": "Rivasland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Macao", "Customer_Behaviour[Timestamp]": 1465766513000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.56, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 63102.19, "Customer_Behaviour[Daily Internet Usage]": 124.85, "Customer_Behaviour[Ad Topic Line]": "Business-focused client-driven forecast", "Customer_Behaviour[City]": "Helenborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1452175131000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 58.21, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 47575.44, "Customer_Behaviour[Daily Internet Usage]": 105.94, "Customer_Behaviour[Ad Topic Line]": "Open-source global strategy", "Customer_Behaviour[City]": "Pattymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Djibouti", "Customer_Behaviour[Timestamp]": 1454864795000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.12, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 39031.89, "Customer_Behaviour[Daily Internet Usage]": 113.8, "Customer_Behaviour[Ad Topic Line]": "Stand-alone motivating moratorium", "Customer_Behaviour[City]": "South Alexisborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cote d'Ivoire", "Customer_Behaviour[Timestamp]": 1455521261000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.99, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 61068.26, "Customer_Behaviour[Daily Internet Usage]": 121.07, "Customer_Behaviour[Ad Topic Line]": "Profound bottom-line standardization", "Customer_Behaviour[City]": "New Charleschester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Romania", "Customer_Behaviour[Timestamp]": 1458812040000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.3, "Customer_Behaviour[Age]": 58, "Customer_Behaviour[Area Income]": 49090.51, "Customer_Behaviour[Daily Internet Usage]": 173.43, "Customer_Behaviour[Ad Topic Line]": "Managed client-server access", "Customer_Behaviour[City]": "East Breannafurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cayman Islands", "Customer_Behaviour[Timestamp]": 1459800072000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.86, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 18819.34, "Customer_Behaviour[Daily Internet Usage]": 166.86, "Customer_Behaviour[Ad Topic Line]": "Horizontal modular success", "Customer_Behaviour[City]": "Estesfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1467998041000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.79, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 47997.75, "Customer_Behaviour[Daily Internet Usage]": 132.08, "Customer_Behaviour[Ad Topic Line]": "Team-oriented zero-defect initiative", "Customer_Behaviour[City]": "South Aaron", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "American Samoa", "Customer_Behaviour[Timestamp]": 1454287949000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.61, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 65856.74, "Customer_Behaviour[Daily Internet Usage]": 136.18, "Customer_Behaviour[Ad Topic Line]": "Progressive intermediate throughput", "Customer_Behaviour[City]": "Catherinefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ethiopia", "Customer_Behaviour[Timestamp]": 1451679469000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.94, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 68447.17, "Customer_Behaviour[Daily Internet Usage]": 128.16, "Customer_Behaviour[Ad Topic Line]": "Assimilated next generation firmware", "Customer_Behaviour[City]": "North Kimberly", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Morocco", "Customer_Behaviour[Timestamp]": 1462062193000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.65, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 63649.04, "Customer_Behaviour[Daily Internet Usage]": 138.87, "Customer_Behaviour[Ad Topic Line]": "Business-focused background synergy", "Customer_Behaviour[City]": "North Aaronburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Western Sahara", "Customer_Behaviour[Timestamp]": 1462746267000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.61, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Area Income]": 27241.11, "Customer_Behaviour[Daily Internet Usage]": 156.99, "Customer_Behaviour[Ad Topic Line]": "Ergonomic methodical encoding", "Customer_Behaviour[City]": "Danielview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "New Zealand", "Customer_Behaviour[Timestamp]": 1459835655000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.6, "Customer_Behaviour[Age]": 55, "Customer_Behaviour[Area Income]": 55121.65, "Customer_Behaviour[Daily Internet Usage]": 168.29, "Customer_Behaviour[Ad Topic Line]": "Switchable analyzing encryption", "Customer_Behaviour[City]": "Lake Ian", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cambodia", "Customer_Behaviour[Timestamp]": 1468260763000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.39, "Customer_Behaviour[Age]": 58, "Customer_Behaviour[Area Income]": 32252.38, "Customer_Behaviour[Daily Internet Usage]": 154.23, "Customer_Behaviour[Ad Topic Line]": "Programmable uniform website", "Customer_Behaviour[City]": "West Shannon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Australia", "Customer_Behaviour[Timestamp]": 1455444409000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.69, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 37345.34, "Customer_Behaviour[Daily Internet Usage]": 109.22, "Customer_Behaviour[Ad Topic Line]": "Fundamental methodical support", "Customer_Behaviour[City]": "South Jackieberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guam", "Customer_Behaviour[Timestamp]": 1459475832000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 64.75, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 63001.03, "Customer_Behaviour[Daily Internet Usage]": 117.66, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered stable leverage", "Customer_Behaviour[City]": "North Sarashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1459905548000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.9, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 48467.68, "Customer_Behaviour[Daily Internet Usage]": 114.53, "Customer_Behaviour[Ad Topic Line]": "Cross-group human-resource time-frame", "Customer_Behaviour[City]": "East Jessefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Kingdom", "Customer_Behaviour[Timestamp]": 1456340891000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.32, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 27964.6, "Customer_Behaviour[Daily Internet Usage]": 125.65, "Customer_Behaviour[Ad Topic Line]": "Realigned intangible benchmark", "Customer_Behaviour[City]": "Rochabury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Yemen", "Customer_Behaviour[Timestamp]": 1461781530000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.66, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 49101.67, "Customer_Behaviour[Daily Internet Usage]": 118.16, "Customer_Behaviour[Ad Topic Line]": "Grass-roots mission-critical emulation", "Customer_Behaviour[City]": "Wrightview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Antigua and Barbuda", "Customer_Behaviour[Timestamp]": 1457489237000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.86, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Area Income]": 53188.69, "Customer_Behaviour[Daily Internet Usage]": 134.46, "Customer_Behaviour[Ad Topic Line]": "Proactive encompassing paradigm", "Customer_Behaviour[City]": "Perryburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Guiana", "Customer_Behaviour[Timestamp]": 1452360783000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.15, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 36424.94, "Customer_Behaviour[Daily Internet Usage]": 112.72, "Customer_Behaviour[Ad Topic Line]": "Automated multi-state toolset", "Customer_Behaviour[City]": "Richardsonshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cyprus", "Customer_Behaviour[Timestamp]": 1469319736000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.72, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 28275.48, "Customer_Behaviour[Daily Internet Usage]": 120.12, "Customer_Behaviour[Ad Topic Line]": "Managed didactic flexibility", "Customer_Behaviour[City]": "Kimberlymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Pierre and Miquelon", "Customer_Behaviour[Timestamp]": 1455371873000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.04, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 48098.86, "Customer_Behaviour[Daily Internet Usage]": 161.58, "Customer_Behaviour[Ad Topic Line]": "Cross-platform neutral system engine", "Customer_Behaviour[City]": "Meghanchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Poland", "Customer_Behaviour[Timestamp]": 1462703108000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.6, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 68448.94, "Customer_Behaviour[Daily Internet Usage]": 135.08, "Customer_Behaviour[Ad Topic Line]": "Focused high-level frame", "Customer_Behaviour[City]": "Tammyshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1455735057000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.83, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 35684.82, "Customer_Behaviour[Daily Internet Usage]": 129.01, "Customer_Behaviour[Ad Topic Line]": "Total human-resource flexibility", "Customer_Behaviour[City]": "Greerport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saudi Arabia", "Customer_Behaviour[Timestamp]": 1454045956000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.86, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 51171.23, "Customer_Behaviour[Daily Internet Usage]": 161.24, "Customer_Behaviour[Ad Topic Line]": "Ergonomic zero tolerance encoding", "Customer_Behaviour[City]": "East Sharon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ghana", "Customer_Behaviour[Timestamp]": 1456235748000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.77, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 58847.07, "Customer_Behaviour[Daily Internet Usage]": 141.13, "Customer_Behaviour[Ad Topic Line]": "Cross-platform zero-defect structure", "Customer_Behaviour[City]": "Johnstonmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iran", "Customer_Behaviour[Timestamp]": 1468063082000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.2, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 57739.03, "Customer_Behaviour[Daily Internet Usage]": 110.66, "Customer_Behaviour[Ad Topic Line]": "Innovative maximized groupware", "Customer_Behaviour[City]": "East Heatherside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "New Zealand", "Customer_Behaviour[Timestamp]": 1458385776000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 38.63, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Area Income]": 57777.11, "Customer_Behaviour[Daily Internet Usage]": 222.11, "Customer_Behaviour[Ad Topic Line]": "Cross-platform logistical pricing structure", "Customer_Behaviour[City]": "Chapmanmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1460026265000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.91, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 51691.55, "Customer_Behaviour[Daily Internet Usage]": 181.02, "Customer_Behaviour[Ad Topic Line]": "Future-proofed fresh-thinking conglomeration", "Customer_Behaviour[City]": "Elizabethstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Africa", "Customer_Behaviour[Timestamp]": 1468765564000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.01, "Customer_Behaviour[Age]": 53, "Customer_Behaviour[Area Income]": 51463.17, "Customer_Behaviour[Daily Internet Usage]": 161.77, "Customer_Behaviour[Ad Topic Line]": "Sharable multimedia conglomeration", "Customer_Behaviour[City]": "East Brettton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ecuador", "Customer_Behaviour[Timestamp]": 1456869997000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.55, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 51593.46, "Customer_Behaviour[Daily Internet Usage]": 151.18, "Customer_Behaviour[Ad Topic Line]": "Robust object-oriented Graphic Interface", "Customer_Behaviour[City]": "Westshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Micronesia", "Customer_Behaviour[Timestamp]": 1452717515000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 53.54, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 47314.45, "Customer_Behaviour[Daily Internet Usage]": 108.03, "Customer_Behaviour[Ad Topic Line]": "Optimized systemic capability", "Customer_Behaviour[City]": "Julietown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Palau", "Customer_Behaviour[Timestamp]": 1466679901000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.19, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 55358.88, "Customer_Behaviour[Daily Internet Usage]": 136.99, "Customer_Behaviour[Ad Topic Line]": "Right-sized system-worthy project", "Customer_Behaviour[City]": "Adamsbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "France", "Customer_Behaviour[Timestamp]": 1453085473000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.76, "Customer_Behaviour[Age]": 51, "Customer_Behaviour[Area Income]": 45522.44, "Customer_Behaviour[Daily Internet Usage]": 195.07, "Customer_Behaviour[Ad Topic Line]": "Versatile optimizing projection", "Customer_Behaviour[City]": "North Angelastad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1468817602000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.36, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 46931.03, "Customer_Behaviour[Daily Internet Usage]": 110.84, "Customer_Behaviour[Ad Topic Line]": "Universal multi-state system engine", "Customer_Behaviour[City]": "Amandafort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belarus", "Customer_Behaviour[Timestamp]": 1467335524000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 61.04, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 75805.12, "Customer_Behaviour[Daily Internet Usage]": 149.21, "Customer_Behaviour[Ad Topic Line]": "Operative didactic Local Area Network", "Customer_Behaviour[City]": "Ronaldport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Benin", "Customer_Behaviour[Timestamp]": 1462203088000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 44.33, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 43386.07, "Customer_Behaviour[Daily Internet Usage]": 120.63, "Customer_Behaviour[Ad Topic Line]": "Ergonomic empowering frame", "Customer_Behaviour[City]": "Estradashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guyana", "Customer_Behaviour[Timestamp]": 1452763679000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 52.84, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 28495.21, "Customer_Behaviour[Daily Internet Usage]": 122.31, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered mobile encoding", "Customer_Behaviour[City]": "Hobbsbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1468664044000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.04, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 67323.0, "Customer_Behaviour[Daily Internet Usage]": 182.11, "Customer_Behaviour[Ad Topic Line]": "Organic logistical adapter", "Customer_Behaviour[City]": "New Christinatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Qatar", "Customer_Behaviour[Timestamp]": 1454518473000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.03, "Customer_Behaviour[Age]": 55, "Customer_Behaviour[Area Income]": 28186.65, "Customer_Behaviour[Daily Internet Usage]": 150.77, "Customer_Behaviour[Ad Topic Line]": "Programmable didactic capacity", "Customer_Behaviour[City]": "Port Georgebury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1457767116000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.18, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 65899.68, "Customer_Behaviour[Daily Internet Usage]": 126.44, "Customer_Behaviour[Ad Topic Line]": "Reactive impactful challenge", "Customer_Behaviour[City]": "West Leahton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1463702448000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.57, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 23410.75, "Customer_Behaviour[Daily Internet Usage]": 130.86, "Customer_Behaviour[Ad Topic Line]": "Implemented asynchronous application", "Customer_Behaviour[City]": "Reginamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belgium", "Customer_Behaviour[Timestamp]": 1460732837000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 42.06, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 43241.19, "Customer_Behaviour[Daily Internet Usage]": 131.55, "Customer_Behaviour[Ad Topic Line]": "Multi-layered secondary software", "Customer_Behaviour[City]": "Jamesmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1467168524000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.15, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 41335.84, "Customer_Behaviour[Daily Internet Usage]": 117.3, "Customer_Behaviour[Ad Topic Line]": "Expanded value-added emulation", "Customer_Behaviour[City]": "Brandonbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hong Kong", "Customer_Behaviour[Timestamp]": 1468536209000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.19, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Area Income]": 52581.16, "Customer_Behaviour[Daily Internet Usage]": 173.05, "Customer_Behaviour[Ad Topic Line]": "Stand-alone empowering benchmark", "Customer_Behaviour[City]": "Leahside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guatemala", "Customer_Behaviour[Timestamp]": 1453583757000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.77, "Customer_Behaviour[Age]": 54, "Customer_Behaviour[Area Income]": 57667.99, "Customer_Behaviour[Daily Internet Usage]": 132.27, "Customer_Behaviour[Ad Topic Line]": "Face-to-face dedicated flexibility", "Customer_Behaviour[City]": "Port Sherrystad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malta", "Customer_Behaviour[Timestamp]": 1464751070000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.33, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 31072.44, "Customer_Behaviour[Daily Internet Usage]": 169.4, "Customer_Behaviour[Ad Topic Line]": "Optimized attitude-oriented initiative", "Customer_Behaviour[City]": "Josephmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Japan", "Customer_Behaviour[Timestamp]": 1458024861000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.8, "Customer_Behaviour[Age]": 57, "Customer_Behaviour[Area Income]": 43708.88, "Customer_Behaviour[Daily Internet Usage]": 152.94, "Customer_Behaviour[Ad Topic Line]": "Virtual executive implementation", "Customer_Behaviour[City]": "Destinyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Namibia", "Customer_Behaviour[Timestamp]": 1455460681000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.44, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 48453.55, "Customer_Behaviour[Daily Internet Usage]": 119.27, "Customer_Behaviour[Ad Topic Line]": "Enhanced intermediate standardization", "Customer_Behaviour[City]": "Mezaton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1462338097000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.19, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 61004.51, "Customer_Behaviour[Daily Internet Usage]": 123.08, "Customer_Behaviour[Ad Topic Line]": "Versatile solution-oriented secured line", "Customer_Behaviour[City]": "North Mark", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1463055072000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.59, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 58677.69, "Customer_Behaviour[Daily Internet Usage]": 113.69, "Customer_Behaviour[Ad Topic Line]": "User-centric solution-oriented emulation", "Customer_Behaviour[City]": "Brittanyborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Monaco", "Customer_Behaviour[Timestamp]": 1469251299000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.57, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 56435.6, "Customer_Behaviour[Daily Internet Usage]": 131.98, "Customer_Behaviour[Ad Topic Line]": "Multi-channeled non-volatile website", "Customer_Behaviour[City]": "West Ericaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1453554858000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.23, "Customer_Behaviour[Age]": 52, "Customer_Behaviour[Area Income]": 41521.28, "Customer_Behaviour[Daily Internet Usage]": 122.59, "Customer_Behaviour[Ad Topic Line]": "Self-enabling zero administration neural-net", "Customer_Behaviour[City]": "Ericksonmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sweden", "Customer_Behaviour[Timestamp]": 1451994797000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.35, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 47510.42, "Customer_Behaviour[Daily Internet Usage]": 118.69, "Customer_Behaviour[Ad Topic Line]": "Sharable secondary Graphical User Interface", "Customer_Behaviour[City]": "East Heidi", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Zimbabwe", "Customer_Behaviour[Timestamp]": 1461880705000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.99, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 62466.1, "Customer_Behaviour[Daily Internet Usage]": 124.58, "Customer_Behaviour[Ad Topic Line]": "Innovative homogeneous alliance", "Customer_Behaviour[City]": "New Angelview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Costa Rica", "Customer_Behaviour[Timestamp]": 1455266775000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.8, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 59683.16, "Customer_Behaviour[Daily Internet Usage]": 248.51, "Customer_Behaviour[Ad Topic Line]": "Diverse leadingedge website", "Customer_Behaviour[City]": "Lake Brandonview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1468243417000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.13, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 41097.17, "Customer_Behaviour[Daily Internet Usage]": 120.49, "Customer_Behaviour[Ad Topic Line]": "Optimized intermediate help-desk", "Customer_Behaviour[City]": "Morganport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1454028319000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.11, "Customer_Behaviour[Age]": 58, "Customer_Behaviour[Area Income]": 39799.73, "Customer_Behaviour[Daily Internet Usage]": 195.69, "Customer_Behaviour[Ad Topic Line]": "Sharable reciprocal project", "Customer_Behaviour[City]": "Browntown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Netherlands", "Customer_Behaviour[Timestamp]": 1452011204000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.93, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 57887.64, "Customer_Behaviour[Daily Internet Usage]": 111.8, "Customer_Behaviour[Ad Topic Line]": "Reactive demand-driven strategy", "Customer_Behaviour[City]": "Bradleyside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sierra Leone", "Customer_Behaviour[Timestamp]": 1465518915000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 36.56, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 42838.29, "Customer_Behaviour[Daily Internet Usage]": 195.89, "Customer_Behaviour[Ad Topic Line]": "Team-oriented bi-directional secured line", "Customer_Behaviour[City]": "West Ryan", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Uganda", "Customer_Behaviour[Timestamp]": 1451661264000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 51.58, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 49822.78, "Customer_Behaviour[Daily Internet Usage]": 115.91, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented system-worthy forecast", "Customer_Behaviour[City]": "Johnsontown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brunei Darussalam", "Customer_Behaviour[Timestamp]": 1461505570000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.6, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 48206.04, "Customer_Behaviour[Daily Internet Usage]": 185.47, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered interactive neural-net", "Customer_Behaviour[City]": "New Henry", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mayotte", "Customer_Behaviour[Timestamp]": 1462214221000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.46, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 66187.58, "Customer_Behaviour[Daily Internet Usage]": 151.63, "Customer_Behaviour[Ad Topic Line]": "Ameliorated leadingedge help-desk", "Customer_Behaviour[City]": "South Lisa", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Albania", "Customer_Behaviour[Timestamp]": 1460055177000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 52.67, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 14775.5, "Customer_Behaviour[Daily Internet Usage]": 191.26, "Customer_Behaviour[Ad Topic Line]": "Persevering 5thgeneration knowledge user", "Customer_Behaviour[City]": "New Hollyberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jersey", "Customer_Behaviour[Timestamp]": 1463639858000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 59.96, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 77143.61, "Customer_Behaviour[Daily Internet Usage]": 197.66, "Customer_Behaviour[Ad Topic Line]": "Expanded modular application", "Customer_Behaviour[City]": "Staceyfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1452760024000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.49, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 36884.23, "Customer_Behaviour[Daily Internet Usage]": 170.04, "Customer_Behaviour[Ad Topic Line]": "Front-line actuating functionalities", "Customer_Behaviour[City]": "North Brittanyburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liechtenstein", "Customer_Behaviour[Timestamp]": 1460531256000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.35, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 44304.13, "Customer_Behaviour[Daily Internet Usage]": 119.86, "Customer_Behaviour[Ad Topic Line]": "Inverse stable synergy", "Customer_Behaviour[City]": "Lake Charlottestad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kenya", "Customer_Behaviour[Timestamp]": 1460061482000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.63, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 25767.16, "Customer_Behaviour[Daily Internet Usage]": 142.23, "Customer_Behaviour[Ad Topic Line]": "Operative full-range forecast", "Customer_Behaviour[City]": "Tammymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Luxembourg", "Customer_Behaviour[Timestamp]": 1457622464000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.84, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 37605.11, "Customer_Behaviour[Daily Internet Usage]": 139.32, "Customer_Behaviour[Ad Topic Line]": "Operative secondary functionalities", "Customer_Behaviour[City]": "Lake Vanessa", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cyprus", "Customer_Behaviour[Timestamp]": 1462091232000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.32, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 67682.32, "Customer_Behaviour[Daily Internet Usage]": 127.65, "Customer_Behaviour[Ad Topic Line]": "Managed 24hour analyzer", "Customer_Behaviour[City]": "Port Douglasborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Netherlands", "Customer_Behaviour[Timestamp]": 1458292119000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 53.22, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 44307.18, "Customer_Behaviour[Daily Internet Usage]": 108.85, "Customer_Behaviour[Ad Topic Line]": "Horizontal client-server database", "Customer_Behaviour[City]": "Port Aprilville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United States Virgin Islands", "Customer_Behaviour[Timestamp]": 1464242637000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.51, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 23942.61, "Customer_Behaviour[Daily Internet Usage]": 127.2, "Customer_Behaviour[Ad Topic Line]": "Digitized homogeneous core", "Customer_Behaviour[City]": "Lake Faith", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Western Sahara", "Customer_Behaviour[Timestamp]": 1461939000000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 36.91, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Area Income]": 54645.2, "Customer_Behaviour[Daily Internet Usage]": 159.69, "Customer_Behaviour[Ad Topic Line]": "Ameliorated coherent open architecture", "Customer_Behaviour[City]": "North Samantha", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Zimbabwe", "Customer_Behaviour[Timestamp]": 1456297980000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.47, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 46780.09, "Customer_Behaviour[Daily Internet Usage]": 141.52, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented bifurcated contingency", "Customer_Behaviour[City]": "Holderville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Chad", "Customer_Behaviour[Timestamp]": 1459021066000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 57.51, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 47682.28, "Customer_Behaviour[Daily Internet Usage]": 105.71, "Customer_Behaviour[Ad Topic Line]": "Re-engineered zero-defect open architecture", "Customer_Behaviour[City]": "Jeffreymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Moldova", "Customer_Behaviour[Timestamp]": 1459414423000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.49, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 47968.32, "Customer_Behaviour[Daily Internet Usage]": 124.67, "Customer_Behaviour[Ad Topic Line]": "Synchronized full-range portal", "Customer_Behaviour[City]": "Smithside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Vietnam", "Customer_Behaviour[Timestamp]": 1465906090000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.69, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 48758.92, "Customer_Behaviour[Daily Internet Usage]": 108.27, "Customer_Behaviour[Ad Topic Line]": "Integrated encompassing support", "Customer_Behaviour[City]": "Vanessastad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jersey", "Customer_Behaviour[Timestamp]": 1462994022000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.21, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 49206.4, "Customer_Behaviour[Daily Internet Usage]": 115.6, "Customer_Behaviour[Ad Topic Line]": "Realigned 24/7 core", "Customer_Behaviour[City]": "Carterland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mexico", "Customer_Behaviour[Timestamp]": 1456630475000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.46, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 56683.32, "Customer_Behaviour[Daily Internet Usage]": 113.53, "Customer_Behaviour[Ad Topic Line]": "Enhanced tertiary utilization", "Customer_Behaviour[City]": "Cervantesshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malawi", "Customer_Behaviour[Timestamp]": 1462094605000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 61.88, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 38260.89, "Customer_Behaviour[Daily Internet Usage]": 108.18, "Customer_Behaviour[Ad Topic Line]": "Balanced disintermediate conglomeration", "Customer_Behaviour[City]": "North Debrashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1464595347000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.03, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 35764.49, "Customer_Behaviour[Daily Internet Usage]": 255.57, "Customer_Behaviour[Ad Topic Line]": "Networked local secured line", "Customer_Behaviour[City]": "East Mike", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Uruguay", "Customer_Behaviour[Timestamp]": 1464545520000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.87, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 62939.5, "Customer_Behaviour[Daily Internet Usage]": 190.41, "Customer_Behaviour[Ad Topic Line]": "Programmable empowering orchestration", "Customer_Behaviour[City]": "North Angelatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1462900427000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.34, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 32549.95, "Customer_Behaviour[Daily Internet Usage]": 173.75, "Customer_Behaviour[Ad Topic Line]": "Object-based motivating instruction set", "Customer_Behaviour[City]": "Clarkborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tokelau", "Customer_Behaviour[Timestamp]": 1459315778000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.39, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 51257.26, "Customer_Behaviour[Daily Internet Usage]": 107.19, "Customer_Behaviour[Ad Topic Line]": "Realigned intermediate application", "Customer_Behaviour[City]": "Josephberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Armenia", "Customer_Behaviour[Timestamp]": 1453642898000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 41.53, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 67575.12, "Customer_Behaviour[Daily Internet Usage]": 158.81, "Customer_Behaviour[Ad Topic Line]": "Optional tangible productivity", "Customer_Behaviour[City]": "South Jeanneport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mayotte", "Customer_Behaviour[Timestamp]": 1463963574000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 46.84, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 34903.67, "Customer_Behaviour[Daily Internet Usage]": 123.22, "Customer_Behaviour[Ad Topic Line]": "Virtual homogeneous budgetary management", "Customer_Behaviour[City]": "Jonesshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Macao", "Customer_Behaviour[Timestamp]": 1463337890000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 37.74, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 65773.49, "Customer_Behaviour[Daily Internet Usage]": 190.95, "Customer_Behaviour[Ad Topic Line]": "Balanced uniform algorithm", "Customer_Behaviour[City]": "Lake James", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Denmark", "Customer_Behaviour[Timestamp]": 1464353137000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.36, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 49597.08, "Customer_Behaviour[Daily Internet Usage]": 115.79, "Customer_Behaviour[Ad Topic Line]": "Fully-configurable asynchronous firmware", "Customer_Behaviour[City]": "Port Jennifer", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "El Salvador", "Customer_Behaviour[Timestamp]": 1456466416000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 55.46, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 42078.89, "Customer_Behaviour[Daily Internet Usage]": 108.1, "Customer_Behaviour[Ad Topic Line]": "Exclusive systematic algorithm", "Customer_Behaviour[City]": "Chrismouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1456096031000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.66, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 46197.59, "Customer_Behaviour[Daily Internet Usage]": 151.72, "Customer_Behaviour[Ad Topic Line]": "Exclusive cohesive intranet", "Customer_Behaviour[City]": "Port Beth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1461938906000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.78, "Customer_Behaviour[Age]": 51, "Customer_Behaviour[Area Income]": 49957.0, "Customer_Behaviour[Daily Internet Usage]": 122.04, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented asynchronous Internet solution", "Customer_Behaviour[City]": "West David", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1455210127000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.47, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 24078.93, "Customer_Behaviour[Daily Internet Usage]": 203.9, "Customer_Behaviour[Ad Topic Line]": "Sharable 5thgeneration access", "Customer_Behaviour[City]": "Fraziershire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1469173483000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.62, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 53647.81, "Customer_Behaviour[Daily Internet Usage]": 121.28, "Customer_Behaviour[Ad Topic Line]": "Monitored homogeneous artificial intelligence", "Customer_Behaviour[City]": "Robertfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Macao", "Customer_Behaviour[Timestamp]": 1466908455000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 37.01, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 48826.14, "Customer_Behaviour[Daily Internet Usage]": 216.01, "Customer_Behaviour[Ad Topic Line]": "Secured encompassing Graphical User Interface", "Customer_Behaviour[City]": "Port Derekberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "San Marino", "Customer_Behaviour[Timestamp]": 1458441853000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.91, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 21773.22, "Customer_Behaviour[Daily Internet Usage]": 146.44, "Customer_Behaviour[Ad Topic Line]": "Team-oriented executive core", "Customer_Behaviour[City]": "West Randy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Norfolk Island", "Customer_Behaviour[Timestamp]": 1459487848000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.56, "Customer_Behaviour[Age]": 47, "Customer_Behaviour[Area Income]": 50628.31, "Customer_Behaviour[Daily Internet Usage]": 109.98, "Customer_Behaviour[Ad Topic Line]": "Reduced background data-warehouse", "Customer_Behaviour[City]": "Zacharyton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Paraguay", "Customer_Behaviour[Timestamp]": 1455254419000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 47.0, "Customer_Behaviour[Age]": 56, "Customer_Behaviour[Area Income]": 50491.45, "Customer_Behaviour[Daily Internet Usage]": 149.53, "Customer_Behaviour[Ad Topic Line]": "Public-key bi-directional Graphical User Interface", "Customer_Behaviour[City]": "New Marcusbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bahamas", "Customer_Behaviour[Timestamp]": 1461962421000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.98, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 43241.88, "Customer_Behaviour[Daily Internet Usage]": 150.79, "Customer_Behaviour[Ad Topic Line]": "Front-line fresh-thinking installation", "Customer_Behaviour[City]": "Huffmanchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ethiopia", "Customer_Behaviour[Timestamp]": 1467064307000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.49, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 38645.4, "Customer_Behaviour[Daily Internet Usage]": 130.84, "Customer_Behaviour[Ad Topic Line]": "Assimilated multi-state paradigm", "Customer_Behaviour[City]": "Williamsfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Dominican Republic", "Customer_Behaviour[Timestamp]": 1464656317000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 61.76, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 33553.9, "Customer_Behaviour[Daily Internet Usage]": 114.69, "Customer_Behaviour[Ad Topic Line]": "Open-source local approach", "Customer_Behaviour[City]": "Edwardsport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jamaica", "Customer_Behaviour[Timestamp]": 1464339231000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.3, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 63071.34, "Customer_Behaviour[Daily Internet Usage]": 116.19, "Customer_Behaviour[Ad Topic Line]": "Polarized intangible encoding", "Customer_Behaviour[City]": "Lake Evantown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Barthelemy", "Customer_Behaviour[Timestamp]": 1462778007000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.18, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 39211.49, "Customer_Behaviour[Daily Internet Usage]": 107.92, "Customer_Behaviour[Ad Topic Line]": "Reactive upward-trending migration", "Customer_Behaviour[City]": "Hansenland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Georgia", "Customer_Behaviour[Timestamp]": 1457179421000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.6, "Customer_Behaviour[Age]": 48, "Customer_Behaviour[Area Income]": 65956.71, "Customer_Behaviour[Daily Internet Usage]": 135.67, "Customer_Behaviour[Ad Topic Line]": "Customer-focused fault-tolerant implementation", "Customer_Behaviour[City]": "Port Michaelmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brazil", "Customer_Behaviour[Timestamp]": 1452898185000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 32.6, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 40159.2, "Customer_Behaviour[Daily Internet Usage]": 190.05, "Customer_Behaviour[Ad Topic Line]": "Customizable homogeneous contingency", "Customer_Behaviour[City]": "Tylerport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Syrian Arab Republic", "Customer_Behaviour[Timestamp]": 1455248349000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.76, "Customer_Behaviour[Age]": 51, "Customer_Behaviour[Area Income]": 66980.27, "Customer_Behaviour[Daily Internet Usage]": 162.05, "Customer_Behaviour[Ad Topic Line]": "Face-to-face modular budgetary management", "Customer_Behaviour[City]": "South Davidhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ghana", "Customer_Behaviour[Timestamp]": 1469246682000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 39.3, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 48335.2, "Customer_Behaviour[Daily Internet Usage]": 145.73, "Customer_Behaviour[Ad Topic Line]": "Decentralized bottom-line help-desk", "Customer_Behaviour[City]": "Jonathanland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lithuania", "Customer_Behaviour[Timestamp]": 1456287097000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 64.79, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 42251.59, "Customer_Behaviour[Daily Internet Usage]": 116.07, "Customer_Behaviour[Ad Topic Line]": "Visionary mission-critical application", "Customer_Behaviour[City]": "North Virginia", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Maldives", "Customer_Behaviour[Timestamp]": 1455740569000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.96, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 69868.48, "Customer_Behaviour[Daily Internet Usage]": 193.15, "Customer_Behaviour[Ad Topic Line]": "Stand-alone well-modulated product", "Customer_Behaviour[City]": "East Jason", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cayman Islands", "Customer_Behaviour[Timestamp]": 1455242138000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.99, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 72802.42, "Customer_Behaviour[Daily Internet Usage]": 138.46, "Customer_Behaviour[Ad Topic Line]": "Ameliorated bandwidth-monitored contingency", "Customer_Behaviour[City]": "North Cassie", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Haiti", "Customer_Behaviour[Timestamp]": 1452500292000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.53, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 56129.89, "Customer_Behaviour[Daily Internet Usage]": 141.58, "Customer_Behaviour[Ad Topic Line]": "Front-line neutral alliance", "Customer_Behaviour[City]": "North Destiny", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Arab Emirates", "Customer_Behaviour[Timestamp]": 1461362481000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.55, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 41547.62, "Customer_Behaviour[Daily Internet Usage]": 109.04, "Customer_Behaviour[Ad Topic Line]": "Re-engineered optimal policy", "Customer_Behaviour[City]": "West Gabriellamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Canada", "Customer_Behaviour[Timestamp]": 1454555417000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.66, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 59240.24, "Customer_Behaviour[Daily Internet Usage]": 172.57, "Customer_Behaviour[Ad Topic Line]": "Implemented uniform synergy", "Customer_Behaviour[City]": "Alvarezland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Svalbard & Jan Mayen Islands", "Customer_Behaviour[Timestamp]": 1456085352000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 56.78, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 39939.39, "Customer_Behaviour[Daily Internet Usage]": 124.32, "Customer_Behaviour[Ad Topic Line]": "Mandatory empowering focus group", "Customer_Behaviour[City]": "Melanieton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Senegal", "Customer_Behaviour[Timestamp]": 1466377485000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 35.25, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 47051.02, "Customer_Behaviour[Daily Internet Usage]": 194.44, "Customer_Behaviour[Ad Topic Line]": "Intuitive global website", "Customer_Behaviour[City]": "Waltertown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iran", "Customer_Behaviour[Timestamp]": 1451795987000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.08, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 35349.26, "Customer_Behaviour[Daily Internet Usage]": 125.27, "Customer_Behaviour[Ad Topic Line]": "Synergized clear-thinking protocol", "Customer_Behaviour[City]": "Fosterside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1459067557000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 63.04, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 69784.85, "Customer_Behaviour[Daily Internet Usage]": 159.05, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered multi-state complexity", "Customer_Behaviour[City]": "Davidstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Netherlands Antilles", "Customer_Behaviour[Timestamp]": 1468167956000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 40.18, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 50760.23, "Customer_Behaviour[Daily Internet Usage]": 151.96, "Customer_Behaviour[Ad Topic Line]": "Enhanced intangible portal", "Customer_Behaviour[City]": "Lake Tracy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hong Kong", "Customer_Behaviour[Timestamp]": 1466828493000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 50.48, "Customer_Behaviour[Age]": 50, "Customer_Behaviour[Area Income]": 20592.99, "Customer_Behaviour[Daily Internet Usage]": 162.43, "Customer_Behaviour[Ad Topic Line]": "Switchable real-time product", "Customer_Behaviour[City]": "Dianaville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malawi", "Customer_Behaviour[Timestamp]": 1463424719000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.37, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 72196.29, "Customer_Behaviour[Daily Internet Usage]": 140.77, "Customer_Behaviour[Ad Topic Line]": "Up-sized asymmetric firmware", "Customer_Behaviour[City]": "Lake Matthew", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mexico", "Customer_Behaviour[Timestamp]": 1466878673000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.88, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 64011.26, "Customer_Behaviour[Daily Internet Usage]": 125.12, "Customer_Behaviour[Ad Topic Line]": "Customer-focused explicit challenge", "Customer_Behaviour[City]": "Sarahland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Yemen", "Customer_Behaviour[Timestamp]": 1461268584000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.17, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 66193.81, "Customer_Behaviour[Daily Internet Usage]": 123.62, "Customer_Behaviour[Ad Topic Line]": "Extended leadingedge solution", "Customer_Behaviour[City]": "New Patrick", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Montenegro", "Customer_Behaviour[Timestamp]": 1457264166000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 43.7, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 63126.96, "Customer_Behaviour[Daily Internet Usage]": 173.01, "Customer_Behaviour[Ad Topic Line]": "Front-line bifurcated ability", "Customer_Behaviour[City]": "Nicholasland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mayotte", "Customer_Behaviour[Timestamp]": 1459742268000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 45.01, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 29875.8, "Customer_Behaviour[Daily Internet Usage]": 178.35, "Customer_Behaviour[Ad Topic Line]": "Virtual 5thgeneration emulation", "Customer_Behaviour[City]": "Ronniemouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brazil", "Customer_Behaviour[Timestamp]": 1464990201000, "Customer_Behaviour[Clicked on Ad]": 1}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.95, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 61833.9, "Customer_Behaviour[Daily Internet Usage]": 256.09, "Customer_Behaviour[Ad Topic Line]": "Cloned 5thgeneration orchestration", "Customer_Behaviour[City]": "Wrightburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tunisia", "Customer_Behaviour[Timestamp]": 1459039991000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.47, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 59785.94, "Customer_Behaviour[Daily Internet Usage]": 236.5, "Customer_Behaviour[Ad Topic Line]": "Organic bottom-line service-desk", "Customer_Behaviour[City]": "Davidton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "San Marino", "Customer_Behaviour[Timestamp]": 1457901342000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.37, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 73889.99, "Customer_Behaviour[Daily Internet Usage]": 225.58, "Customer_Behaviour[Ad Topic Line]": "Robust logistical utilization", "Customer_Behaviour[City]": "South Manuel", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iceland", "Customer_Behaviour[Timestamp]": 1464924978000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.91, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 53852.85, "Customer_Behaviour[Daily Internet Usage]": 208.36, "Customer_Behaviour[Ad Topic Line]": "Enhanced dedicated support", "Customer_Behaviour[City]": "Brandonstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Myanmar", "Customer_Behaviour[Timestamp]": 1454014772000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.52, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 51739.63, "Customer_Behaviour[Daily Internet Usage]": 214.23, "Customer_Behaviour[Ad Topic Line]": "Synergistic fresh-thinking array", "Customer_Behaviour[City]": "North Tara", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bosnia and Herzegovina", "Customer_Behaviour[Timestamp]": 1461188962000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.03, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 71511.08, "Customer_Behaviour[Daily Internet Usage]": 187.53, "Customer_Behaviour[Ad Topic Line]": "Intuitive dynamic attitude", "Customer_Behaviour[City]": "Pruittmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1462172458000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.02, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 46179.97, "Customer_Behaviour[Daily Internet Usage]": 209.82, "Customer_Behaviour[Ad Topic Line]": "Business-focused value-added definition", "Customer_Behaviour[City]": "West Guybury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bouvet Island (Bouvetoya)", "Customer_Behaviour[Timestamp]": 1453898296000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.37, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 61389.5, "Customer_Behaviour[Daily Internet Usage]": 201.58, "Customer_Behaviour[Ad Topic Line]": "Synchronized systemic hierarchy", "Customer_Behaviour[City]": "Johnstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Luxembourg", "Customer_Behaviour[Timestamp]": 1460431599000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.82, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 76435.3, "Customer_Behaviour[Daily Internet Usage]": 221.94, "Customer_Behaviour[Ad Topic Line]": "Reactive demand-driven capacity", "Customer_Behaviour[City]": "Kellytown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ukraine", "Customer_Behaviour[Timestamp]": 1454995698000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.98, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 57691.95, "Customer_Behaviour[Daily Internet Usage]": 202.61, "Customer_Behaviour[Ad Topic Line]": "Innovative user-facing extranet", "Customer_Behaviour[City]": "Mackenziemouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Russian Federation", "Customer_Behaviour[Timestamp]": 1461749278000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 64.24, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 59784.18, "Customer_Behaviour[Daily Internet Usage]": 252.36, "Customer_Behaviour[Ad Topic Line]": "Front-line intermediate database", "Customer_Behaviour[City]": "Zacharystad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tunisia", "Customer_Behaviour[Timestamp]": 1460807623000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.38, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 64929.61, "Customer_Behaviour[Daily Internet Usage]": 212.3, "Customer_Behaviour[Ad Topic Line]": "Balanced dynamic application", "Customer_Behaviour[City]": "Bowenview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Helena", "Customer_Behaviour[Timestamp]": 1454891018000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.47, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 57519.64, "Customer_Behaviour[Daily Internet Usage]": 204.86, "Customer_Behaviour[Ad Topic Line]": "Reduced global support", "Customer_Behaviour[City]": "Jamesberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Niger", "Customer_Behaviour[Timestamp]": 1455197182000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.4, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 67058.72, "Customer_Behaviour[Daily Internet Usage]": 198.72, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered demand-driven alliance", "Customer_Behaviour[City]": "Johnport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sri Lanka", "Customer_Behaviour[Timestamp]": 1465412041000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.94, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 58526.04, "Customer_Behaviour[Daily Internet Usage]": 225.29, "Customer_Behaviour[Ad Topic Line]": "Visionary reciprocal circuit", "Customer_Behaviour[City]": "Odomville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Kingdom", "Customer_Behaviour[Timestamp]": 1462310398000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.6, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 67479.62, "Customer_Behaviour[Daily Internet Usage]": 177.55, "Customer_Behaviour[Ad Topic Line]": "Sharable bottom-line solution", "Customer_Behaviour[City]": "Thomasview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1460001376000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.63, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 56113.37, "Customer_Behaviour[Daily Internet Usage]": 239.22, "Customer_Behaviour[Ad Topic Line]": "Upgradable asynchronous circuit", "Customer_Behaviour[City]": "Port Gregory", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Azerbaijan", "Customer_Behaviour[Timestamp]": 1455469515000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.61, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 47708.42, "Customer_Behaviour[Daily Internet Usage]": 183.43, "Customer_Behaviour[Ad Topic Line]": "Customer-focused empowering ability", "Customer_Behaviour[City]": "Lake Amy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1462003633000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.08, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 71228.44, "Customer_Behaviour[Daily Internet Usage]": 169.5, "Customer_Behaviour[Ad Topic Line]": "Stand-alone national attitude", "Customer_Behaviour[City]": "Smithburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1457534733000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.01, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 74543.81, "Customer_Behaviour[Daily Internet Usage]": 222.63, "Customer_Behaviour[Ad Topic Line]": "Advanced full-range migration", "Customer_Behaviour[City]": "New Michaeltown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turks and Caicos Islands", "Customer_Behaviour[Timestamp]": 1467898654000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 64.1, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 60465.72, "Customer_Behaviour[Daily Internet Usage]": 215.93, "Customer_Behaviour[Ad Topic Line]": "Seamless object-oriented structure", "Customer_Behaviour[City]": "East Tiffanyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cote d'Ivoire", "Customer_Behaviour[Timestamp]": 1459527665000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.79, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 74535.94, "Customer_Behaviour[Daily Internet Usage]": 184.1, "Customer_Behaviour[Ad Topic Line]": "Distributed tertiary system engine", "Customer_Behaviour[City]": "Sharpberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bouvet Island (Bouvetoya)", "Customer_Behaviour[Timestamp]": 1458056954000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.51, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 73600.28, "Customer_Behaviour[Daily Internet Usage]": 200.55, "Customer_Behaviour[Ad Topic Line]": "Total 5thgeneration encoding", "Customer_Behaviour[City]": "North Kristine", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Central African Republic", "Customer_Behaviour[Timestamp]": 1467348117000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.84, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 52968.22, "Customer_Behaviour[Daily Internet Usage]": 238.63, "Customer_Behaviour[Ad Topic Line]": "Progressive empowering alliance", "Customer_Behaviour[City]": "Wongland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Albania", "Customer_Behaviour[Timestamp]": 1468012712000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 89.91, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 59593.56, "Customer_Behaviour[Daily Internet Usage]": 194.23, "Customer_Behaviour[Ad Topic Line]": "Innovative background conglomeration", "Customer_Behaviour[City]": "Wallacechester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Maldives", "Customer_Behaviour[Timestamp]": 1468076136000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.49, "Customer_Behaviour[Age]": 20, "Customer_Behaviour[Area Income]": 56884.74, "Customer_Behaviour[Daily Internet Usage]": 202.16, "Customer_Behaviour[Ad Topic Line]": "Polarized 6thgeneration info-mediaries", "Customer_Behaviour[City]": "Bradshawborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guernsey", "Customer_Behaviour[Timestamp]": 1465558293000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.02, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 72272.9, "Customer_Behaviour[Daily Internet Usage]": 210.54, "Customer_Behaviour[Ad Topic Line]": "Operative system-worthy protocol", "Customer_Behaviour[City]": "Johnstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Micronesia", "Customer_Behaviour[Timestamp]": 1457535431000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.0, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 56067.38, "Customer_Behaviour[Daily Internet Usage]": 211.87, "Customer_Behaviour[Ad Topic Line]": "Extended systemic policy", "Customer_Behaviour[City]": "Andersonton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Eritrea", "Customer_Behaviour[Timestamp]": 1457937974000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 49.58, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 56791.75, "Customer_Behaviour[Daily Internet Usage]": 231.94, "Customer_Behaviour[Ad Topic Line]": "Self-enabling holistic process improvement", "Customer_Behaviour[City]": "Johnsport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Benin", "Customer_Behaviour[Timestamp]": 1460044922000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.65, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 63274.88, "Customer_Behaviour[Daily Internet Usage]": 212.79, "Customer_Behaviour[Ad Topic Line]": "Horizontal client-driven hierarchy", "Customer_Behaviour[City]": "South Ronald", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1454592632000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.57, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 61227.59, "Customer_Behaviour[Daily Internet Usage]": 230.93, "Customer_Behaviour[Ad Topic Line]": "User-friendly asymmetric info-mediaries", "Customer_Behaviour[City]": "Lisaberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Egypt", "Customer_Behaviour[Timestamp]": 1463459251000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 89.05, "Customer_Behaviour[Age]": 45, "Customer_Behaviour[Area Income]": 57868.44, "Customer_Behaviour[Daily Internet Usage]": 206.98, "Customer_Behaviour[Ad Topic Line]": "Polarized bandwidth-monitored moratorium", "Customer_Behaviour[City]": "Stewartbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Falkland Islands (Malvinas)", "Customer_Behaviour[Timestamp]": 1459678076000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.41, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 66618.21, "Customer_Behaviour[Daily Internet Usage]": 223.03, "Customer_Behaviour[Ad Topic Line]": "Centralized systematic knowledgebase", "Customer_Behaviour[City]": "Benjaminchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Dominica", "Customer_Behaviour[Timestamp]": 1459805446000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.36, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 73104.47, "Customer_Behaviour[Daily Internet Usage]": 233.56, "Customer_Behaviour[Ad Topic Line]": "Future-proofed grid-enabled implementation", "Customer_Behaviour[City]": "North Wesleychester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jersey", "Customer_Behaviour[Timestamp]": 1467820833000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.7, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 67633.44, "Customer_Behaviour[Daily Internet Usage]": 215.44, "Customer_Behaviour[Ad Topic Line]": "Profound zero administration instruction set", "Customer_Behaviour[City]": "Port Jeffrey", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United States Minor Outlying Islands", "Customer_Behaviour[Timestamp]": 1452730990000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.86, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 64122.36, "Customer_Behaviour[Daily Internet Usage]": 190.25, "Customer_Behaviour[Ad Topic Line]": "Up-sized executive moderator", "Customer_Behaviour[City]": "Lake Josetown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gibraltar", "Customer_Behaviour[Timestamp]": 1454699161000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.08, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 77460.07, "Customer_Behaviour[Daily Internet Usage]": 210.6, "Customer_Behaviour[Ad Topic Line]": "Ergonomic client-driven application", "Customer_Behaviour[City]": "Kimberlyhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turks and Caicos Islands", "Customer_Behaviour[Timestamp]": 1457746759000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.54, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 72524.86, "Customer_Behaviour[Daily Internet Usage]": 172.1, "Customer_Behaviour[Ad Topic Line]": "Multi-channeled asynchronous open system", "Customer_Behaviour[City]": "Port Jodi", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Togo", "Customer_Behaviour[Timestamp]": 1464468110000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.4, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 66699.12, "Customer_Behaviour[Daily Internet Usage]": 247.31, "Customer_Behaviour[Ad Topic Line]": "Adaptive 24hour Graphic Interface", "Customer_Behaviour[City]": "Sylviaview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Palau", "Customer_Behaviour[Timestamp]": 1455317468000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.01, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 57756.89, "Customer_Behaviour[Daily Internet Usage]": 251.0, "Customer_Behaviour[Ad Topic Line]": "Horizontal multi-state interface", "Customer_Behaviour[City]": "West Michaelhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Angola", "Customer_Behaviour[Timestamp]": 1456749117000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.83, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 58019.64, "Customer_Behaviour[Daily Internet Usage]": 162.44, "Customer_Behaviour[Ad Topic Line]": "Diverse stable circuit", "Customer_Behaviour[City]": "Walshhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Nauru", "Customer_Behaviour[Timestamp]": 1453043431000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 86.69, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 62238.58, "Customer_Behaviour[Daily Internet Usage]": 198.56, "Customer_Behaviour[Ad Topic Line]": "Customer-focused attitude-oriented instruction set", "Customer_Behaviour[City]": "South Jennifer", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Chad", "Customer_Behaviour[Timestamp]": 1464329967000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.23, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 68094.85, "Customer_Behaviour[Daily Internet Usage]": 196.23, "Customer_Behaviour[Ad Topic Line]": "Secured clear-thinking middleware", "Customer_Behaviour[City]": "South Daniellefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Qatar", "Customer_Behaviour[Timestamp]": 1458397425000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.41, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 64395.85, "Customer_Behaviour[Daily Internet Usage]": 163.05, "Customer_Behaviour[Ad Topic Line]": "Right-sized value-added initiative", "Customer_Behaviour[City]": "Dianashire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Singapore", "Customer_Behaviour[Timestamp]": 1469248625000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.74, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 72423.97, "Customer_Behaviour[Daily Internet Usage]": 227.56, "Customer_Behaviour[Ad Topic Line]": "Multi-channeled reciprocal artificial intelligence", "Customer_Behaviour[City]": "Hammondport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kazakhstan", "Customer_Behaviour[Timestamp]": 1468951582000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.04, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 60309.58, "Customer_Behaviour[Daily Internet Usage]": 199.43, "Customer_Behaviour[Ad Topic Line]": "Realigned systematic function", "Customer_Behaviour[City]": "Hernandezfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Rwanda", "Customer_Behaviour[Timestamp]": 1455087127000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.86, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 63115.34, "Customer_Behaviour[Daily Internet Usage]": 208.23, "Customer_Behaviour[Ad Topic Line]": "Networked high-level structure", "Customer_Behaviour[City]": "New Jeffreychester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bouvet Island (Bouvetoya)", "Customer_Behaviour[Timestamp]": 1463969704000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.56, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 53673.08, "Customer_Behaviour[Daily Internet Usage]": 210.46, "Customer_Behaviour[Ad Topic Line]": "Advanced modular Local Area Network", "Customer_Behaviour[City]": "South Denisefurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Samoa", "Customer_Behaviour[Timestamp]": 1465132584000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.05, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 66624.6, "Customer_Behaviour[Daily Internet Usage]": 191.14, "Customer_Behaviour[Ad Topic Line]": "Reduced bi-directional strategy", "Customer_Behaviour[City]": "North Anna", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United Arab Emirates", "Customer_Behaviour[Timestamp]": 1453420109000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.4, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 77567.85, "Customer_Behaviour[Daily Internet Usage]": 214.42, "Customer_Behaviour[Ad Topic Line]": "Digitized heuristic solution", "Customer_Behaviour[City]": "Port Destiny", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Antigua and Barbuda", "Customer_Behaviour[Timestamp]": 1465086553000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.78, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 70410.11, "Customer_Behaviour[Daily Internet Usage]": 218.79, "Customer_Behaviour[Ad Topic Line]": "Multi-layered non-volatile Graphical User Interface", "Customer_Behaviour[City]": "Wilsonburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saudi Arabia", "Customer_Behaviour[Timestamp]": 1464114958000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.9, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 66107.84, "Customer_Behaviour[Daily Internet Usage]": 212.67, "Customer_Behaviour[Ad Topic Line]": "Synchronized multimedia model", "Customer_Behaviour[City]": "Murphymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1461313884000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.98, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 65461.92, "Customer_Behaviour[Daily Internet Usage]": 229.22, "Customer_Behaviour[Ad Topic Line]": "Ameliorated upward-trending definition", "Customer_Behaviour[City]": "Taylorberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Seychelles", "Customer_Behaviour[Timestamp]": 1460721074000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.88, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 55353.41, "Customer_Behaviour[Daily Internet Usage]": 254.57, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered human-resource structure", "Customer_Behaviour[City]": "Melissafurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Poland", "Customer_Behaviour[Timestamp]": 1467419062000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.83, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 67516.07, "Customer_Behaviour[Daily Internet Usage]": 200.59, "Customer_Behaviour[Ad Topic Line]": "Managed upward-trending instruction set", "Customer_Behaviour[City]": "East Brianberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Estonia", "Customer_Behaviour[Timestamp]": 1457086428000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 89.15, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 59886.58, "Customer_Behaviour[Daily Internet Usage]": 171.07, "Customer_Behaviour[Ad Topic Line]": "Phased zero administration success", "Customer_Behaviour[City]": "Townsendfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1461569421000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.68, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 74430.08, "Customer_Behaviour[Daily Internet Usage]": 199.08, "Customer_Behaviour[Ad Topic Line]": "Configurable multi-state utilization", "Customer_Behaviour[City]": "Robertbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Colombia", "Customer_Behaviour[Timestamp]": 1468720733000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.06, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 58633.63, "Customer_Behaviour[Daily Internet Usage]": 201.04, "Customer_Behaviour[Ad Topic Line]": "Diverse multi-tasking parallelism", "Customer_Behaviour[City]": "New Tinamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brunei Darussalam", "Customer_Behaviour[Timestamp]": 1461731297000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.65, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 72209.99, "Customer_Behaviour[Daily Internet Usage]": 158.05, "Customer_Behaviour[Ad Topic Line]": "Up-sized tertiary contingency", "Customer_Behaviour[City]": "Ramosstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Finland", "Customer_Behaviour[Timestamp]": 1467494543000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.03, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 60372.64, "Customer_Behaviour[Daily Internet Usage]": 204.52, "Customer_Behaviour[Ad Topic Line]": "Expanded clear-thinking core", "Customer_Behaviour[City]": "North Shannon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Philippines", "Customer_Behaviour[Timestamp]": 1466328275000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.7, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 71136.49, "Customer_Behaviour[Daily Internet Usage]": 222.25, "Customer_Behaviour[Ad Topic Line]": "Open-source coherent monitoring", "Customer_Behaviour[City]": "West Russell", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ecuador", "Customer_Behaviour[Timestamp]": 1465709479000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.03, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 63727.5, "Customer_Behaviour[Daily Internet Usage]": 201.15, "Customer_Behaviour[Ad Topic Line]": "Persevering tertiary capability", "Customer_Behaviour[City]": "Masonhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1452086401000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.91, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 61608.23, "Customer_Behaviour[Daily Internet Usage]": 231.42, "Customer_Behaviour[Ad Topic Line]": "Enterprise-wide bi-directional secured line", "Customer_Behaviour[City]": "Derrickhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cuba", "Customer_Behaviour[Timestamp]": 1454213420000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.47, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 64447.77, "Customer_Behaviour[Daily Internet Usage]": 226.11, "Customer_Behaviour[Ad Topic Line]": "Total directional approach", "Customer_Behaviour[City]": "New Brandy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkey", "Customer_Behaviour[Timestamp]": 1463345320000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.65, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 67669.06, "Customer_Behaviour[Daily Internet Usage]": 212.56, "Customer_Behaviour[Ad Topic Line]": "Robust transitional ability", "Customer_Behaviour[City]": "East Timothy", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Southern Territories", "Customer_Behaviour[Timestamp]": 1458190812000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.04, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 50723.67, "Customer_Behaviour[Daily Internet Usage]": 244.55, "Customer_Behaviour[Ad Topic Line]": "Self-enabling didactic pricing structure", "Customer_Behaviour[City]": "West Alyssa", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malaysia", "Customer_Behaviour[Timestamp]": 1469006844000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.44, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 70547.16, "Customer_Behaviour[Daily Internet Usage]": 230.14, "Customer_Behaviour[Ad Topic Line]": "Customizable tangible hierarchy", "Customer_Behaviour[City]": "Bruceburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Christmas Island", "Customer_Behaviour[Timestamp]": 1460731548000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.15, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 62312.23, "Customer_Behaviour[Daily Internet Usage]": 203.23, "Customer_Behaviour[Ad Topic Line]": "Intuitive explicit conglomeration", "Customer_Behaviour[City]": "Port Robin", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greenland", "Customer_Behaviour[Timestamp]": 1453316977000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.28, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 52686.47, "Customer_Behaviour[Daily Internet Usage]": 254.34, "Customer_Behaviour[Ad Topic Line]": "Right-sized asynchronous website", "Customer_Behaviour[City]": "Port Aliciabury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guadeloupe", "Customer_Behaviour[Timestamp]": 1455522910000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.88, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 78119.5, "Customer_Behaviour[Daily Internet Usage]": 179.58, "Customer_Behaviour[Ad Topic Line]": "Advanced 5thgeneration capability", "Customer_Behaviour[City]": "Port Whitneyhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belgium", "Customer_Behaviour[Timestamp]": 1455046672000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.1, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 57014.84, "Customer_Behaviour[Daily Internet Usage]": 242.37, "Customer_Behaviour[Ad Topic Line]": "Universal asymmetric archive", "Customer_Behaviour[City]": "Jeffreyshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Israel", "Customer_Behaviour[Timestamp]": 1453708373000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.3, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 58337.18, "Customer_Behaviour[Daily Internet Usage]": 216.87, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered regional toolset", "Customer_Behaviour[City]": "North Loriburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Estonia", "Customer_Behaviour[Timestamp]": 1452324496000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.76, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 69285.69, "Customer_Behaviour[Daily Internet Usage]": 237.39, "Customer_Behaviour[Ad Topic Line]": "Customizable zero-defect matrix", "Customer_Behaviour[City]": "South Tomside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Pierre and Miquelon", "Customer_Behaviour[Timestamp]": 1464268710000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.87, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 67938.77, "Customer_Behaviour[Daily Internet Usage]": 213.36, "Customer_Behaviour[Ad Topic Line]": "Front-line fresh-thinking open system", "Customer_Behaviour[City]": "West Brenda", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tonga", "Customer_Behaviour[Timestamp]": 1467144821000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.71, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 61610.05, "Customer_Behaviour[Daily Internet Usage]": 210.23, "Customer_Behaviour[Ad Topic Line]": "Reactive responsive emulation", "Customer_Behaviour[City]": "Greenechester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Taiwan", "Customer_Behaviour[Timestamp]": 1464506967000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.61, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 62667.51, "Customer_Behaviour[Daily Internet Usage]": 228.76, "Customer_Behaviour[Ad Topic Line]": "Enterprise-wide local matrices", "Customer_Behaviour[City]": "Gravesport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Morocco", "Customer_Behaviour[Timestamp]": 1460907963000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.95, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 67714.82, "Customer_Behaviour[Daily Internet Usage]": 238.58, "Customer_Behaviour[Ad Topic Line]": "Persevering even-keeled help-desk", "Customer_Behaviour[City]": "Millerland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Wallis and Futuna", "Customer_Behaviour[Timestamp]": 1460299715000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.07, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 69710.51, "Customer_Behaviour[Daily Internet Usage]": 226.45, "Customer_Behaviour[Ad Topic Line]": "Grass-roots eco-centric instruction set", "Customer_Behaviour[City]": "Port Jessicamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Chile", "Customer_Behaviour[Timestamp]": 1460824715000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.39, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 66269.49, "Customer_Behaviour[Daily Internet Usage]": 214.74, "Customer_Behaviour[Ad Topic Line]": "Fully-configurable incremental Graphical User Interface", "Customer_Behaviour[City]": "Paulport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gabon", "Customer_Behaviour[Timestamp]": 1462263683000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.97, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 55041.6, "Customer_Behaviour[Daily Internet Usage]": 250.0, "Customer_Behaviour[Ad Topic Line]": "Mandatory 3rdgeneration moderator", "Customer_Behaviour[City]": "Cynthiaside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Holy See (Vatican City State)", "Customer_Behaviour[Timestamp]": 1463875318000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.79, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 61771.9, "Customer_Behaviour[Daily Internet Usage]": 214.53, "Customer_Behaviour[Ad Topic Line]": "Managed eco-centric encoding", "Customer_Behaviour[City]": "New Juan", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cameroon", "Customer_Behaviour[Timestamp]": 1459364990000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.7, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 61383.79, "Customer_Behaviour[Daily Internet Usage]": 231.07, "Customer_Behaviour[Ad Topic Line]": "Visionary multi-tasking alliance", "Customer_Behaviour[City]": "Amyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Somalia", "Customer_Behaviour[Timestamp]": 1452354568000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.88, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 63924.82, "Customer_Behaviour[Daily Internet Usage]": 186.48, "Customer_Behaviour[Ad Topic Line]": "Ameliorated tangible hierarchy", "Customer_Behaviour[City]": "Harrishaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lebanon", "Customer_Behaviour[Timestamp]": 1460950916000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.74, "Customer_Behaviour[Age]": 49, "Customer_Behaviour[Area Income]": 66524.8, "Customer_Behaviour[Daily Internet Usage]": 243.37, "Customer_Behaviour[Ad Topic Line]": "Enhanced maximized access", "Customer_Behaviour[City]": "Birdshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hungary", "Customer_Behaviour[Timestamp]": 1459096889000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.29, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 60638.38, "Customer_Behaviour[Daily Internet Usage]": 232.54, "Customer_Behaviour[Ad Topic Line]": "Re-contextualized systemic time-frame", "Customer_Behaviour[City]": "Jacksonmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Niue", "Customer_Behaviour[Timestamp]": 1453927677000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.84, "Customer_Behaviour[Age]": 21, "Customer_Behaviour[Area Income]": 48537.18, "Customer_Behaviour[Daily Internet Usage]": 186.98, "Customer_Behaviour[Ad Topic Line]": "Reactive bi-directional workforce", "Customer_Behaviour[City]": "Hayesmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cyprus", "Customer_Behaviour[Timestamp]": 1454830866000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.72, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 68614.98, "Customer_Behaviour[Daily Internet Usage]": 186.37, "Customer_Behaviour[Ad Topic Line]": "Re-engineered neutral success", "Customer_Behaviour[City]": "Juliaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Costa Rica", "Customer_Behaviour[Timestamp]": 1461042928000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 90.97, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 54520.14, "Customer_Behaviour[Daily Internet Usage]": 180.77, "Customer_Behaviour[Ad Topic Line]": "Multi-lateral empowering throughput", "Customer_Behaviour[City]": "Kimberlytown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Congo", "Customer_Behaviour[Timestamp]": 1455646896000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.18, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 69476.42, "Customer_Behaviour[Daily Internet Usage]": 243.61, "Customer_Behaviour[Ad Topic Line]": "Proactive asymmetric definition", "Customer_Behaviour[City]": "New Johnberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Pitcairn Islands", "Customer_Behaviour[Timestamp]": 1458895215000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.33, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 54989.93, "Customer_Behaviour[Daily Internet Usage]": 240.95, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive zero tolerance Local Area Network", "Customer_Behaviour[City]": "Shawstad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belize", "Customer_Behaviour[Timestamp]": 1458088090000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.84, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 65883.39, "Customer_Behaviour[Daily Internet Usage]": 231.59, "Customer_Behaviour[Ad Topic Line]": "Reduced incremental productivity", "Customer_Behaviour[City]": "Faithview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Singapore", "Customer_Behaviour[Timestamp]": 1457044276000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.05, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 65421.39, "Customer_Behaviour[Daily Internet Usage]": 220.92, "Customer_Behaviour[Ad Topic Line]": "Realigned scalable standardization", "Customer_Behaviour[City]": "Richardsontown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Finland", "Customer_Behaviour[Timestamp]": 1456480473000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.71, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 58476.57, "Customer_Behaviour[Daily Internet Usage]": 200.58, "Customer_Behaviour[Ad Topic Line]": "Team-oriented context-sensitive installation", "Customer_Behaviour[City]": "East Christopherbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cameroon", "Customer_Behaviour[Timestamp]": 1466747422000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.09, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 66636.84, "Customer_Behaviour[Daily Internet Usage]": 214.08, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive systematic budgetary management", "Customer_Behaviour[City]": "Port Christinemouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sweden", "Customer_Behaviour[Timestamp]": 1464037245000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.26, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 63060.55, "Customer_Behaviour[Daily Internet Usage]": 184.03, "Customer_Behaviour[Ad Topic Line]": "Multi-layered tangible portal", "Customer_Behaviour[City]": "New Paul", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bosnia and Herzegovina", "Customer_Behaviour[Timestamp]": 1463027759000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 65.9, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 60550.66, "Customer_Behaviour[Daily Internet Usage]": 211.39, "Customer_Behaviour[Ad Topic Line]": "De-engineered tertiary secured line", "Customer_Behaviour[City]": "Hartport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Czech Republic", "Customer_Behaviour[Timestamp]": 1468678434000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.12, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 46653.75, "Customer_Behaviour[Daily Internet Usage]": 230.91, "Customer_Behaviour[Ad Topic Line]": "Realigned next generation projection", "Customer_Behaviour[City]": "Hurleyborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gibraltar", "Customer_Behaviour[Timestamp]": 1455692757000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.58, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 39699.13, "Customer_Behaviour[Daily Internet Usage]": 199.39, "Customer_Behaviour[Ad Topic Line]": "Decentralized needs-based analyzer", "Customer_Behaviour[City]": "Erikville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Hong Kong", "Customer_Behaviour[Timestamp]": 1463004137000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.2, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 75044.35, "Customer_Behaviour[Daily Internet Usage]": 178.51, "Customer_Behaviour[Ad Topic Line]": "Multi-layered fresh-thinking process improvement", "Customer_Behaviour[City]": "Karenton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Barbados", "Customer_Behaviour[Timestamp]": 1456773995000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.49, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 58996.12, "Customer_Behaviour[Daily Internet Usage]": 237.34, "Customer_Behaviour[Ad Topic Line]": "Persevering eco-centric flexibility", "Customer_Behaviour[City]": "Lake Adrian", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Peru", "Customer_Behaviour[Timestamp]": 1454170529000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.19, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 62475.99, "Customer_Behaviour[Daily Internet Usage]": 228.81, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered needs-based Local Area Network", "Customer_Behaviour[City]": "Mollyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Libyan Arab Jamahiriya", "Customer_Behaviour[Timestamp]": 1454220850000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.4, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 66691.23, "Customer_Behaviour[Daily Internet Usage]": 207.87, "Customer_Behaviour[Ad Topic Line]": "Polarized multimedia system engine", "Customer_Behaviour[City]": "West Daleborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Azerbaijan", "Customer_Behaviour[Timestamp]": 1463954063000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.07, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 44559.43, "Customer_Behaviour[Daily Internet Usage]": 261.02, "Customer_Behaviour[Ad Topic Line]": "Face-to-face analyzing encryption", "Customer_Behaviour[City]": "Stephenborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Afghanistan", "Customer_Behaviour[Timestamp]": 1456826495000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.62, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 73207.15, "Customer_Behaviour[Daily Internet Usage]": 217.79, "Customer_Behaviour[Ad Topic Line]": "Self-enabling even-keeled methodology", "Customer_Behaviour[City]": "Lake Kurtmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Rwanda", "Customer_Behaviour[Timestamp]": 1459757994000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.44, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 60845.55, "Customer_Behaviour[Daily Internet Usage]": 206.79, "Customer_Behaviour[Ad Topic Line]": "Public-key zero-defect analyzer", "Customer_Behaviour[City]": "West Thomas", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greece", "Customer_Behaviour[Timestamp]": 1463318314000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.22, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 61806.31, "Customer_Behaviour[Daily Internet Usage]": 224.58, "Customer_Behaviour[Ad Topic Line]": "Integrated motivating neural-net", "Customer_Behaviour[City]": "New Tyler", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kyrgyz Republic", "Customer_Behaviour[Timestamp]": 1467731650000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.66, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 67080.94, "Customer_Behaviour[Daily Internet Usage]": 168.15, "Customer_Behaviour[Ad Topic Line]": "Operative scalable emulation", "Customer_Behaviour[City]": "Reyesland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gabon", "Customer_Behaviour[Timestamp]": 1466374095000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.59, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 67744.56, "Customer_Behaviour[Daily Internet Usage]": 224.23, "Customer_Behaviour[Ad Topic Line]": "Robust responsive collaboration", "Customer_Behaviour[City]": "Lake Courtney", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1469142875000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.97, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 70449.04, "Customer_Behaviour[Daily Internet Usage]": 216.0, "Customer_Behaviour[Ad Topic Line]": "Programmable empowering middleware", "Customer_Behaviour[City]": "Mariebury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1468374526000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.26, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 70203.74, "Customer_Behaviour[Daily Internet Usage]": 202.77, "Customer_Behaviour[Ad Topic Line]": "Public-key mission-critical core", "Customer_Behaviour[City]": "New Jasmine", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Swaziland", "Customer_Behaviour[Timestamp]": 1465388749000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.95, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 56379.3, "Customer_Behaviour[Daily Internet Usage]": 230.36, "Customer_Behaviour[Ad Topic Line]": "Mandatory dedicated data-warehouse", "Customer_Behaviour[City]": "Lake Brian", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Madagascar", "Customer_Behaviour[Timestamp]": 1456506061000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.23, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 51015.11, "Customer_Behaviour[Daily Internet Usage]": 202.12, "Customer_Behaviour[Ad Topic Line]": "Re-engineered responsive definition", "Customer_Behaviour[City]": "Lake Kevin", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "American Samoa", "Customer_Behaviour[Timestamp]": 1459022056000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.58, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 55479.62, "Customer_Behaviour[Daily Internet Usage]": 248.16, "Customer_Behaviour[Ad Topic Line]": "Cloned explicit middleware", "Customer_Behaviour[City]": "East Sheriville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Moldova", "Customer_Behaviour[Timestamp]": 1453917344000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.68, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 66225.72, "Customer_Behaviour[Daily Internet Usage]": 208.05, "Customer_Behaviour[Ad Topic Line]": "Inverse high-level capability", "Customer_Behaviour[City]": "Leonchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Israel", "Customer_Behaviour[Timestamp]": 1452962430000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.99, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 61270.14, "Customer_Behaviour[Daily Internet Usage]": 230.9, "Customer_Behaviour[Ad Topic Line]": "Inverse bi-directional knowledge user", "Customer_Behaviour[City]": "Taylorport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "French Polynesia", "Customer_Behaviour[Timestamp]": 1455545627000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.24, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 63976.44, "Customer_Behaviour[Daily Internet Usage]": 214.42, "Customer_Behaviour[Ad Topic Line]": "Monitored dynamic instruction set", "Customer_Behaviour[City]": "Munozberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1465262946000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.18, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 52691.79, "Customer_Behaviour[Daily Internet Usage]": 167.67, "Customer_Behaviour[Ad Topic Line]": "Customer-focused full-range neural-net", "Customer_Behaviour[City]": "West Barbara", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bolivia", "Customer_Behaviour[Timestamp]": 1465500747000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.4, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 63966.72, "Customer_Behaviour[Daily Internet Usage]": 236.87, "Customer_Behaviour[Ad Topic Line]": "User-centric intangible contingency", "Customer_Behaviour[City]": "New Gabriel", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malaysia", "Customer_Behaviour[Timestamp]": 1459502474000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.93, "Customer_Behaviour[Age]": 44, "Customer_Behaviour[Area Income]": 74180.05, "Customer_Behaviour[Daily Internet Usage]": 218.22, "Customer_Behaviour[Ad Topic Line]": "Quality-focused scalable utilization", "Customer_Behaviour[City]": "Lake Matthewland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Niue", "Customer_Behaviour[Timestamp]": 1455926780000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.67, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 58909.36, "Customer_Behaviour[Daily Internet Usage]": 239.76, "Customer_Behaviour[Ad Topic Line]": "Seamless impactful info-mediaries", "Customer_Behaviour[City]": "Jamesville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Portugal", "Customer_Behaviour[Timestamp]": 1451616730000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.17, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 69869.66, "Customer_Behaviour[Daily Internet Usage]": 238.45, "Customer_Behaviour[Ad Topic Line]": "Cross-group neutral synergy", "Customer_Behaviour[City]": "West Lucas", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Panama", "Customer_Behaviour[Timestamp]": 1453249575000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.69, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 76408.19, "Customer_Behaviour[Daily Internet Usage]": 216.57, "Customer_Behaviour[Ad Topic Line]": "Monitored content-based implementation", "Customer_Behaviour[City]": "Lake Jasonchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Finland", "Customer_Behaviour[Timestamp]": 1468866785000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.37, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 55015.08, "Customer_Behaviour[Daily Internet Usage]": 207.27, "Customer_Behaviour[Ad Topic Line]": "Quality-focused zero-defect budgetary management", "Customer_Behaviour[City]": "Pearsonfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Pakistan", "Customer_Behaviour[Timestamp]": 1453524457000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.46, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 51636.12, "Customer_Behaviour[Daily Internet Usage]": 231.54, "Customer_Behaviour[Ad Topic Line]": "Intuitive fresh-thinking moderator", "Customer_Behaviour[City]": "Sellerstown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ireland", "Customer_Behaviour[Timestamp]": 1456743606000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.42, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 65791.17, "Customer_Behaviour[Daily Internet Usage]": 213.38, "Customer_Behaviour[Ad Topic Line]": "Quality-focused hybrid frame", "Customer_Behaviour[City]": "Carterport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lao People's Democratic Republic", "Customer_Behaviour[Timestamp]": 1455336968000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.56, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 68030.18, "Customer_Behaviour[Daily Internet Usage]": 213.75, "Customer_Behaviour[Ad Topic Line]": "Business-focused high-level hardware", "Customer_Behaviour[City]": "Greentown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brunei Darussalam", "Customer_Behaviour[Timestamp]": 1457433556000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.59, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 65826.53, "Customer_Behaviour[Daily Internet Usage]": 223.16, "Customer_Behaviour[Ad Topic Line]": "Managed disintermediate capability", "Customer_Behaviour[City]": "North Lisachester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Holy See (Vatican City State)", "Customer_Behaviour[Timestamp]": 1467630229000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.94, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 68333.01, "Customer_Behaviour[Daily Internet Usage]": 173.49, "Customer_Behaviour[Ad Topic Line]": "Function-based incremental standardization", "Customer_Behaviour[City]": "North Alexandra", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Myanmar", "Customer_Behaviour[Timestamp]": 1455111995000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.81, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 51847.26, "Customer_Behaviour[Daily Internet Usage]": 253.17, "Customer_Behaviour[Ad Topic Line]": "Realigned global initiative", "Customer_Behaviour[City]": "Garnerberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "United States Virgin Islands", "Customer_Behaviour[Timestamp]": 1463148759000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.17, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 63580.22, "Customer_Behaviour[Daily Internet Usage]": 228.7, "Customer_Behaviour[Ad Topic Line]": "Business-focused maximized complexity", "Customer_Behaviour[City]": "North Anaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mexico", "Customer_Behaviour[Timestamp]": 1462147316000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.05, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 62161.26, "Customer_Behaviour[Daily Internet Usage]": 236.64, "Customer_Behaviour[Ad Topic Line]": "Upgradable local migration", "Customer_Behaviour[City]": "Hallfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jamaica", "Customer_Behaviour[Timestamp]": 1458512845000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.51, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 53412.32, "Customer_Behaviour[Daily Internet Usage]": 250.03, "Customer_Behaviour[Ad Topic Line]": "Future-proofed modular utilization", "Customer_Behaviour[City]": "Kingshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guinea", "Customer_Behaviour[Timestamp]": 1463650212000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.14, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 78092.95, "Customer_Behaviour[Daily Internet Usage]": 165.27, "Customer_Behaviour[Ad Topic Line]": "Re-engineered impactful software", "Customer_Behaviour[City]": "North Isabellaville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Western Sahara", "Customer_Behaviour[Timestamp]": 1458723151000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.53, "Customer_Behaviour[Age]": 51, "Customer_Behaviour[Area Income]": 46132.18, "Customer_Behaviour[Daily Internet Usage]": 244.91, "Customer_Behaviour[Ad Topic Line]": "Managed 6thgeneration hierarchy", "Customer_Behaviour[City]": "Reyesfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Barbados", "Customer_Behaviour[Timestamp]": 1466914946000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.57, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 70377.23, "Customer_Behaviour[Daily Internet Usage]": 212.38, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive transitional protocol", "Customer_Behaviour[City]": "North Stephanieberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Uruguay", "Customer_Behaviour[Timestamp]": 1458462170000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.49, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 56457.01, "Customer_Behaviour[Daily Internet Usage]": 181.11, "Customer_Behaviour[Ad Topic Line]": "Public-key asynchronous matrix", "Customer_Behaviour[City]": "Sherrishire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brazil", "Customer_Behaviour[Timestamp]": 1458882327000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 61.72, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 67279.06, "Customer_Behaviour[Daily Internet Usage]": 218.49, "Customer_Behaviour[Ad Topic Line]": "Grass-roots systematic hardware", "Customer_Behaviour[City]": "Port Daniel", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1455434137000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.53, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 54773.99, "Customer_Behaviour[Daily Internet Usage]": 236.29, "Customer_Behaviour[Ad Topic Line]": "User-centric composite contingency", "Customer_Behaviour[City]": "Brownview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Myanmar", "Customer_Behaviour[Timestamp]": 1458952322000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.15, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 72042.85, "Customer_Behaviour[Daily Internet Usage]": 194.37, "Customer_Behaviour[Ad Topic Line]": "Ergonomic neutral portal", "Customer_Behaviour[City]": "New Maria", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1457389935000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.59, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 67526.92, "Customer_Behaviour[Daily Internet Usage]": 211.64, "Customer_Behaviour[Ad Topic Line]": "Reverse-engineered maximized focus group", "Customer_Behaviour[City]": "Calebberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Georgia", "Customer_Behaviour[Timestamp]": 1466227053000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.77, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 63497.62, "Customer_Behaviour[Daily Internet Usage]": 211.83, "Customer_Behaviour[Ad Topic Line]": "Public-key intangible Graphical User Interface", "Customer_Behaviour[City]": "Gomezport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guam", "Customer_Behaviour[Timestamp]": 1451636826000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.4, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 60879.48, "Customer_Behaviour[Daily Internet Usage]": 235.01, "Customer_Behaviour[Ad Topic Line]": "Advanced local task-force", "Customer_Behaviour[City]": "Shaneland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tanzania", "Customer_Behaviour[Timestamp]": 1459994258000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.53, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 61467.33, "Customer_Behaviour[Daily Internet Usage]": 236.72, "Customer_Behaviour[Ad Topic Line]": "Profound well-modulated array", "Customer_Behaviour[City]": "East Aaron", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Indonesia", "Customer_Behaviour[Timestamp]": 1456696934000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.8, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 71222.4, "Customer_Behaviour[Daily Internet Usage]": 224.9, "Customer_Behaviour[Ad Topic Line]": "Multi-layered fresh-thinking neural-net", "Customer_Behaviour[City]": "East Michaelland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belize", "Customer_Behaviour[Timestamp]": 1453350643000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.53, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 73474.82, "Customer_Behaviour[Daily Internet Usage]": 223.93, "Customer_Behaviour[Ad Topic Line]": "Synchronized grid-enabled moratorium", "Customer_Behaviour[City]": "South Patrickfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Papua New Guinea", "Customer_Behaviour[Timestamp]": 1469095310000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.67, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 58576.12, "Customer_Behaviour[Daily Internet Usage]": 226.79, "Customer_Behaviour[Ad Topic Line]": "Total grid-enabled application", "Customer_Behaviour[City]": "Charlesbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Comoros", "Customer_Behaviour[Timestamp]": 1468979793000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 62.26, "Customer_Behaviour[Age]": 37, "Customer_Behaviour[Area Income]": 77988.71, "Customer_Behaviour[Daily Internet Usage]": 166.19, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented uniform knowledgebase", "Customer_Behaviour[City]": "West Robertside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malawi", "Customer_Behaviour[Timestamp]": 1464277212000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.38, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 55130.96, "Customer_Behaviour[Daily Internet Usage]": 238.06, "Customer_Behaviour[Ad Topic Line]": "Business-focused holistic benchmark", "Customer_Behaviour[City]": "Port Anthony", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Albania", "Customer_Behaviour[Timestamp]": 1457593651000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.8, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 63551.67, "Customer_Behaviour[Daily Internet Usage]": 249.54, "Customer_Behaviour[Ad Topic Line]": "Public-key solution-oriented focus group", "Customer_Behaviour[City]": "Austinland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Puerto Rico", "Customer_Behaviour[Timestamp]": 1451863286000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.21, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 63394.41, "Customer_Behaviour[Daily Internet Usage]": 233.04, "Customer_Behaviour[Ad Topic Line]": "User-friendly content-based customer loyalty", "Customer_Behaviour[City]": "South Jaimeview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkmenistan", "Customer_Behaviour[Timestamp]": 1451727011000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.11, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 73884.48, "Customer_Behaviour[Daily Internet Usage]": 231.21, "Customer_Behaviour[Ad Topic Line]": "Reactive national success", "Customer_Behaviour[City]": "South Meredithmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Seychelles", "Customer_Behaviour[Timestamp]": 1452201710000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.29, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 57844.96, "Customer_Behaviour[Daily Internet Usage]": 252.07, "Customer_Behaviour[Ad Topic Line]": "Networked regional Local Area Network", "Customer_Behaviour[City]": "Villanuevaton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Liberia", "Customer_Behaviour[Timestamp]": 1452027522000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.31, "Customer_Behaviour[Age]": 32, "Customer_Behaviour[Area Income]": 62792.43, "Customer_Behaviour[Daily Internet Usage]": 238.1, "Customer_Behaviour[Ad Topic Line]": "Assimilated homogeneous service-desk", "Customer_Behaviour[City]": "North Garyhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Nepal", "Customer_Behaviour[Timestamp]": 1466194707000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.07, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 50337.93, "Customer_Behaviour[Daily Internet Usage]": 193.97, "Customer_Behaviour[Ad Topic Line]": "Monitored local Internet solution", "Customer_Behaviour[City]": "Richardsonmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sri Lanka", "Customer_Behaviour[Timestamp]": 1465887729000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.53, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 67686.16, "Customer_Behaviour[Daily Internet Usage]": 204.56, "Customer_Behaviour[Ad Topic Line]": "Customizable methodical Graphical User Interface", "Customer_Behaviour[City]": "New Dawnland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Honduras", "Customer_Behaviour[Timestamp]": 1467783292000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.5, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 68348.99, "Customer_Behaviour[Daily Internet Usage]": 203.84, "Customer_Behaviour[Ad Topic Line]": "Front-line systemic capability", "Customer_Behaviour[City]": "Tranland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Pakistan", "Customer_Behaviour[Timestamp]": 1456581104000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 67.76, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 66176.97, "Customer_Behaviour[Daily Internet Usage]": 242.59, "Customer_Behaviour[Ad Topic Line]": "Programmable high-level benchmark", "Customer_Behaviour[City]": "Anthonyfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cameroon", "Customer_Behaviour[Timestamp]": 1464111778000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.41, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 61428.18, "Customer_Behaviour[Daily Internet Usage]": 259.76, "Customer_Behaviour[Ad Topic Line]": "Grass-roots empowering paradigm", "Customer_Behaviour[City]": "Christopherchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Guinea-Bissau", "Customer_Behaviour[Timestamp]": 1462030042000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.54, "Customer_Behaviour[Age]": 24, "Customer_Behaviour[Area Income]": 57518.73, "Customer_Behaviour[Daily Internet Usage]": 219.75, "Customer_Behaviour[Ad Topic Line]": "Switchable secondary ability", "Customer_Behaviour[City]": "Alexisland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bahamas", "Customer_Behaviour[Timestamp]": 1459354559000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.13, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 70889.68, "Customer_Behaviour[Daily Internet Usage]": 224.98, "Customer_Behaviour[Ad Topic Line]": "Profit-focused systemic support", "Customer_Behaviour[City]": "Johnsonfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1463440866000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.06, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 40345.49, "Customer_Behaviour[Daily Internet Usage]": 225.99, "Customer_Behaviour[Ad Topic Line]": "Phased content-based middleware", "Customer_Behaviour[City]": "Port Davidland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Wallis and Futuna", "Customer_Behaviour[Timestamp]": 1469254731000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.29, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 33239.2, "Customer_Behaviour[Daily Internet Usage]": 219.72, "Customer_Behaviour[Ad Topic Line]": "Synergized well-modulated Graphical User Interface", "Customer_Behaviour[City]": "Lake Michael", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mongolia", "Customer_Behaviour[Timestamp]": 1455568865000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.07, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 68033.54, "Customer_Behaviour[Daily Internet Usage]": 235.56, "Customer_Behaviour[Ad Topic Line]": "Implemented bottom-line implementation", "Customer_Behaviour[City]": "West Michaelshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Denmark", "Customer_Behaviour[Timestamp]": 1453513348000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.92, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 38427.66, "Customer_Behaviour[Daily Internet Usage]": 182.65, "Customer_Behaviour[Ad Topic Line]": "Monitored context-sensitive initiative", "Customer_Behaviour[City]": "Port Calvintown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Russian Federation", "Customer_Behaviour[Timestamp]": 1456449524000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.35, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 53185.34, "Customer_Behaviour[Daily Internet Usage]": 253.48, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive client-server open system", "Customer_Behaviour[City]": "Parkerhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Brazil", "Customer_Behaviour[Timestamp]": 1452478034000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.04, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 71881.84, "Customer_Behaviour[Daily Internet Usage]": 199.76, "Customer_Behaviour[Ad Topic Line]": "Synergistic non-volatile analyzer", "Customer_Behaviour[City]": "Cassandratown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mauritius", "Customer_Behaviour[Timestamp]": 1457218931000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.31, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 47139.21, "Customer_Behaviour[Daily Internet Usage]": 225.87, "Customer_Behaviour[Ad Topic Line]": "Object-based optimal solution", "Customer_Behaviour[City]": "West Dannyberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Djibouti", "Customer_Behaviour[Timestamp]": 1452116602000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.66, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 68877.02, "Customer_Behaviour[Daily Internet Usage]": 175.14, "Customer_Behaviour[Ad Topic Line]": "Profound dynamic attitude", "Customer_Behaviour[City]": "East Debraborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Syrian Arab Republic", "Customer_Behaviour[Timestamp]": 1455767916000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 86.53, "Customer_Behaviour[Age]": 46, "Customer_Behaviour[Area Income]": 46500.11, "Customer_Behaviour[Daily Internet Usage]": 233.36, "Customer_Behaviour[Ad Topic Line]": "Networked responsive application", "Customer_Behaviour[City]": "Colemanshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greece", "Customer_Behaviour[Timestamp]": 1467163161000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.95, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 69805.7, "Customer_Behaviour[Daily Internet Usage]": 201.29, "Customer_Behaviour[Ad Topic Line]": "Customer-focused impactful success", "Customer_Behaviour[City]": "Karenmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Lao People's Democratic Republic", "Customer_Behaviour[Timestamp]": 1459844325000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.37, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 66412.04, "Customer_Behaviour[Daily Internet Usage]": 215.04, "Customer_Behaviour[Ad Topic Line]": "Enhanced regional conglomeration", "Customer_Behaviour[City]": "New Jessicaport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Vietnam", "Customer_Behaviour[Timestamp]": 1452820805000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.61, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 58342.63, "Customer_Behaviour[Daily Internet Usage]": 235.97, "Customer_Behaviour[Ad Topic Line]": "Customizable value-added project", "Customer_Behaviour[City]": "Luisfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Monaco", "Customer_Behaviour[Timestamp]": 1459804993000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.89, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 64188.5, "Customer_Behaviour[Daily Internet Usage]": 201.54, "Customer_Behaviour[Ad Topic Line]": "Switchable multi-state success", "Customer_Behaviour[City]": "West Sharon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Singapore", "Customer_Behaviour[Timestamp]": 1463281850000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 89.21, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 44078.24, "Customer_Behaviour[Daily Internet Usage]": 210.53, "Customer_Behaviour[Ad Topic Line]": "Fundamental clear-thinking knowledgebase", "Customer_Behaviour[City]": "Lake Cynthia", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Reunion", "Customer_Behaviour[Timestamp]": 1468929958000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.44, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 65620.25, "Customer_Behaviour[Daily Internet Usage]": 210.39, "Customer_Behaviour[Ad Topic Line]": "Front-line incremental access", "Customer_Behaviour[City]": "Lake Jacob", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gabon", "Customer_Behaviour[Timestamp]": 1465532517000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.85, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 51816.27, "Customer_Behaviour[Daily Internet Usage]": 153.01, "Customer_Behaviour[Ad Topic Line]": "Digitized interactive initiative", "Customer_Behaviour[City]": "Meyerchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Turkmenistan", "Customer_Behaviour[Timestamp]": 1458374458000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.83, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 67990.84, "Customer_Behaviour[Daily Internet Usage]": 192.81, "Customer_Behaviour[Ad Topic Line]": "Quality-focused 5thgeneration orchestration", "Customer_Behaviour[City]": "Wintersfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ecuador", "Customer_Behaviour[Timestamp]": 1457102018000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.58, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 70701.31, "Customer_Behaviour[Daily Internet Usage]": 230.52, "Customer_Behaviour[Ad Topic Line]": "Configurable mission-critical algorithm", "Customer_Behaviour[City]": "East Carlos", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Jamaica", "Customer_Behaviour[Timestamp]": 1469185510000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 87.16, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 60805.93, "Customer_Behaviour[Daily Internet Usage]": 197.15, "Customer_Behaviour[Ad Topic Line]": "Reduced holistic help-desk", "Customer_Behaviour[City]": "Blairville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "China", "Customer_Behaviour[Timestamp]": 1455191426000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.49, "Customer_Behaviour[Age]": 38, "Customer_Behaviour[Area Income]": 67132.46, "Customer_Behaviour[Daily Internet Usage]": 244.23, "Customer_Behaviour[Ad Topic Line]": "Organic 3rdgeneration encryption", "Customer_Behaviour[City]": "Mosleyburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Vanuatu", "Customer_Behaviour[Timestamp]": 1455449768000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.15, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 55195.61, "Customer_Behaviour[Daily Internet Usage]": 214.49, "Customer_Behaviour[Ad Topic Line]": "Monitored intermediate circuit", "Customer_Behaviour[City]": "West Wendyland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greenland", "Customer_Behaviour[Timestamp]": 1468810279000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 86.76, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 48679.54, "Customer_Behaviour[Daily Internet Usage]": 189.91, "Customer_Behaviour[Ad Topic Line]": "Object-based leadingedge complexity", "Customer_Behaviour[City]": "Lawrenceborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Syrian Arab Republic", "Customer_Behaviour[Timestamp]": 1455092473000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 73.88, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 63109.74, "Customer_Behaviour[Daily Internet Usage]": 233.61, "Customer_Behaviour[Ad Topic Line]": "Digitized zero-defect implementation", "Customer_Behaviour[City]": "Kennethview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Helena", "Customer_Behaviour[Timestamp]": 1451889435000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.65, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 66198.66, "Customer_Behaviour[Daily Internet Usage]": 208.01, "Customer_Behaviour[Ad Topic Line]": "Configurable impactful capacity", "Customer_Behaviour[City]": "Pamelamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ukraine", "Customer_Behaviour[Timestamp]": 1456515354000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.02, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 73174.19, "Customer_Behaviour[Daily Internet Usage]": 219.55, "Customer_Behaviour[Ad Topic Line]": "Distributed leadingedge orchestration", "Customer_Behaviour[City]": "Lesliefort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Malta", "Customer_Behaviour[Timestamp]": 1468420214000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.9, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 66773.83, "Customer_Behaviour[Daily Internet Usage]": 225.47, "Customer_Behaviour[Ad Topic Line]": "Multi-channeled 3rdgeneration model", "Customer_Behaviour[City]": "Garciatown", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Mauritius", "Customer_Behaviour[Timestamp]": 1465627675000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.01, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 59797.64, "Customer_Behaviour[Daily Internet Usage]": 192.5, "Customer_Behaviour[Ad Topic Line]": "Devolved exuding Local Area Network", "Customer_Behaviour[City]": "Evansfurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Slovakia (Slovak Republic)", "Customer_Behaviour[Timestamp]": 1462291370000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.71, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 62109.8, "Customer_Behaviour[Daily Internet Usage]": 246.06, "Customer_Behaviour[Ad Topic Line]": "Phased hybrid intranet", "Customer_Behaviour[City]": "Barbershire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Portugal", "Customer_Behaviour[Timestamp]": 1457690483000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 48.22, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 73882.91, "Customer_Behaviour[Daily Internet Usage]": 214.33, "Customer_Behaviour[Ad Topic Line]": "Inverse national core", "Customer_Behaviour[City]": "Turnerville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Norfolk Island", "Customer_Behaviour[Timestamp]": 1458674087000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.74, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 51409.45, "Customer_Behaviour[Daily Internet Usage]": 234.75, "Customer_Behaviour[Ad Topic Line]": "Quality-focused zero tolerance matrices", "Customer_Behaviour[City]": "West Zacharyborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Ukraine", "Customer_Behaviour[Timestamp]": 1466277014000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.16, "Customer_Behaviour[Age]": 41, "Customer_Behaviour[Area Income]": 70185.06, "Customer_Behaviour[Daily Internet Usage]": 194.95, "Customer_Behaviour[Ad Topic Line]": "Decentralized 24hour approach", "Customer_Behaviour[City]": "Robinsonland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Finland", "Customer_Behaviour[Timestamp]": 1451880035000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.91, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 53223.58, "Customer_Behaviour[Daily Internet Usage]": 222.87, "Customer_Behaviour[Ad Topic Line]": "Distributed bifurcated challenge", "Customer_Behaviour[City]": "Haleberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Burundi", "Customer_Behaviour[Timestamp]": 1451946445000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.37, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 63664.32, "Customer_Behaviour[Daily Internet Usage]": 207.44, "Customer_Behaviour[Ad Topic Line]": "Open-architected system-worthy ability", "Customer_Behaviour[City]": "Estradafurt", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Tonga", "Customer_Behaviour[Timestamp]": 1467174190000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.9, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 71727.51, "Customer_Behaviour[Daily Internet Usage]": 190.95, "Customer_Behaviour[Ad Topic Line]": "Centralized client-driven workforce", "Customer_Behaviour[City]": "Port Juan", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Kyrgyz Republic", "Customer_Behaviour[Timestamp]": 1466205578000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 54.35, "Customer_Behaviour[Age]": 42, "Customer_Behaviour[Area Income]": 76984.21, "Customer_Behaviour[Daily Internet Usage]": 164.02, "Customer_Behaviour[Ad Topic Line]": "Proactive interactive service-desk", "Customer_Behaviour[City]": "Lake Hailey", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Sweden", "Customer_Behaviour[Timestamp]": 1466410929000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.61, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 72154.68, "Customer_Behaviour[Daily Internet Usage]": 190.12, "Customer_Behaviour[Ad Topic Line]": "Assimilated encompassing portal", "Customer_Behaviour[City]": "Meaganfort", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Italy", "Customer_Behaviour[Timestamp]": 1460784273000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.72, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 65704.79, "Customer_Behaviour[Daily Internet Usage]": 179.82, "Customer_Behaviour[Ad Topic Line]": "Cross-group global orchestration", "Customer_Behaviour[City]": "North Monicaville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Belarus", "Customer_Behaviour[Timestamp]": 1453007231000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.87, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 72948.76, "Customer_Behaviour[Daily Internet Usage]": 212.59, "Customer_Behaviour[Ad Topic Line]": "Down-sized bandwidth-monitored core", "Customer_Behaviour[City]": "Mullenside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "South Georgia and the South Sandwich Islands", "Customer_Behaviour[Timestamp]": 1468017010000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 75.81, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 71157.05, "Customer_Behaviour[Daily Internet Usage]": 229.19, "Customer_Behaviour[Ad Topic Line]": "Inverse zero-defect capability", "Customer_Behaviour[City]": "Sanchezland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greenland", "Customer_Behaviour[Timestamp]": 1459108211000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.94, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 74159.69, "Customer_Behaviour[Daily Internet Usage]": 190.84, "Customer_Behaviour[Ad Topic Line]": "Multi-tiered real-time implementation", "Customer_Behaviour[City]": "Rogerland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1461937099000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 71.14, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 69758.31, "Customer_Behaviour[Daily Internet Usage]": 224.82, "Customer_Behaviour[Ad Topic Line]": "Assimilated stable encryption", "Customer_Behaviour[City]": "Newmanberg", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "France", "Customer_Behaviour[Timestamp]": 1466470367000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.85, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 58363.12, "Customer_Behaviour[Daily Internet Usage]": 213.96, "Customer_Behaviour[Ad Topic Line]": "Cloned optimal leverage", "Customer_Behaviour[City]": "Cannonbury", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bulgaria", "Customer_Behaviour[Timestamp]": 1453056355000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 72.18, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 69438.04, "Customer_Behaviour[Daily Internet Usage]": 225.02, "Customer_Behaviour[Ad Topic Line]": "De-engineered attitude-oriented projection", "Customer_Behaviour[City]": "Lisamouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Bolivia", "Customer_Behaviour[Timestamp]": 1465597270000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.55, "Customer_Behaviour[Age]": 35, "Customer_Behaviour[Area Income]": 68016.9, "Customer_Behaviour[Daily Internet Usage]": 219.91, "Customer_Behaviour[Ad Topic Line]": "Extended grid-enabled hierarchy", "Customer_Behaviour[City]": "Port Brittanyville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "British Virgin Islands", "Customer_Behaviour[Timestamp]": 1459206084000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.46, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 56909.3, "Customer_Behaviour[Daily Internet Usage]": 230.78, "Customer_Behaviour[Ad Topic Line]": "Mandatory coherent groupware", "Customer_Behaviour[City]": "Carterton", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "India", "Customer_Behaviour[Timestamp]": 1465031609000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.62, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 57032.36, "Customer_Behaviour[Daily Internet Usage]": 195.68, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered systematic info-mediaries", "Customer_Behaviour[City]": "South Dianeshire", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Iran", "Customer_Behaviour[Timestamp]": 1460669869000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.05, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 65756.36, "Customer_Behaviour[Daily Internet Usage]": 236.08, "Customer_Behaviour[Ad Topic Line]": "Centralized value-added hierarchy", "Customer_Behaviour[City]": "Villanuevastad", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Namibia", "Customer_Behaviour[Timestamp]": 1463508406000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 74.18, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 69874.18, "Customer_Behaviour[Daily Internet Usage]": 203.87, "Customer_Behaviour[Ad Topic Line]": "Front-line even-keeled website", "Customer_Behaviour[City]": "Lake Lisa", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Cayman Islands", "Customer_Behaviour[Timestamp]": 1453257096000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 85.78, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 50038.65, "Customer_Behaviour[Daily Internet Usage]": 232.78, "Customer_Behaviour[Ad Topic Line]": "Persistent fault-tolerant service-desk", "Customer_Behaviour[City]": "Valerieland", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Swaziland", "Customer_Behaviour[Timestamp]": 1469051622000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.98, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 67432.49, "Customer_Behaviour[Daily Internet Usage]": 212.88, "Customer_Behaviour[Ad Topic Line]": "Up-sized maximized model", "Customer_Behaviour[City]": "Patrickmouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Saint Martin", "Customer_Behaviour[Timestamp]": 1465032327000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.6, "Customer_Behaviour[Age]": 39, "Customer_Behaviour[Area Income]": 73392.28, "Customer_Behaviour[Daily Internet Usage]": 194.23, "Customer_Behaviour[Ad Topic Line]": "Organized global flexibility", "Customer_Behaviour[City]": "Lake Deannaborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Rwanda", "Customer_Behaviour[Timestamp]": 1461311313000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.3, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 56735.83, "Customer_Behaviour[Daily Internet Usage]": 232.21, "Customer_Behaviour[Ad Topic Line]": "Balanced executive definition", "Customer_Behaviour[City]": "Davieshaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Gabon", "Customer_Behaviour[Timestamp]": 1460795768000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.47, "Customer_Behaviour[Age]": 28, "Customer_Behaviour[Area Income]": 67033.34, "Customer_Behaviour[Daily Internet Usage]": 226.64, "Customer_Behaviour[Ad Topic Line]": "Focused coherent success", "Customer_Behaviour[City]": "North Kennethside", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Poland", "Customer_Behaviour[Timestamp]": 1466814803000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 83.69, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 68717.0, "Customer_Behaviour[Daily Internet Usage]": 192.57, "Customer_Behaviour[Ad Topic Line]": "Robust context-sensitive neural-net", "Customer_Behaviour[City]": "Shelbyport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Fiji", "Customer_Behaviour[Timestamp]": 1458710855000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.72, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 66861.67, "Customer_Behaviour[Daily Internet Usage]": 225.97, "Customer_Behaviour[Ad Topic Line]": "Fundamental tangible moratorium", "Customer_Behaviour[City]": "New Taylorburgh", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Austria", "Customer_Behaviour[Timestamp]": 1456249066000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 78.24, "Customer_Behaviour[Age]": 23, "Customer_Behaviour[Area Income]": 54106.21, "Customer_Behaviour[Daily Internet Usage]": 199.29, "Customer_Behaviour[Ad Topic Line]": "Sharable value-added solution", "Customer_Behaviour[City]": "Deannaville", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Luxembourg", "Customer_Behaviour[Timestamp]": 1459769991000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 88.82, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 58638.75, "Customer_Behaviour[Daily Internet Usage]": 169.1, "Customer_Behaviour[Ad Topic Line]": "Assimilated discrete strategy", "Customer_Behaviour[City]": "East Johnport", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Slovakia (Slovak Republic)", "Customer_Behaviour[Timestamp]": 1454112337000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 68.25, "Customer_Behaviour[Age]": 29, "Customer_Behaviour[Area Income]": 70324.8, "Customer_Behaviour[Daily Internet Usage]": 220.08, "Customer_Behaviour[Ad Topic Line]": "Phased fault-tolerant definition", "Customer_Behaviour[City]": "Wagnerchester", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Greenland", "Customer_Behaviour[Timestamp]": 1455553129000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.32, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 52416.18, "Customer_Behaviour[Daily Internet Usage]": 165.65, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive next generation Internet solution", "Customer_Behaviour[City]": "Daisymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Moldova", "Customer_Behaviour[Timestamp]": 1457413977000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 90.75, "Customer_Behaviour[Age]": 40, "Customer_Behaviour[Area Income]": 45945.88, "Customer_Behaviour[Daily Internet Usage]": 216.5, "Customer_Behaviour[Ad Topic Line]": "Decentralized methodical capability", "Customer_Behaviour[City]": "Lake Joseph", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Togo", "Customer_Behaviour[Timestamp]": 1457690312000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 82.41, "Customer_Behaviour[Age]": 36, "Customer_Behaviour[Area Income]": 65882.81, "Customer_Behaviour[Daily Internet Usage]": 222.08, "Customer_Behaviour[Ad Topic Line]": "Stand-alone logistical service-desk", "Customer_Behaviour[City]": "North Brandon", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Nicaragua", "Customer_Behaviour[Timestamp]": 1460434962000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.79, "Customer_Behaviour[Age]": 27, "Customer_Behaviour[Area Income]": 55677.12, "Customer_Behaviour[Daily Internet Usage]": 235.94, "Customer_Behaviour[Ad Topic Line]": "Open-architected intangible strategy", "Customer_Behaviour[City]": "Wademouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Canada", "Customer_Behaviour[Timestamp]": 1462144913000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 70.05, "Customer_Behaviour[Age]": 33, "Customer_Behaviour[Area Income]": 75560.65, "Customer_Behaviour[Daily Internet Usage]": 203.44, "Customer_Behaviour[Ad Topic Line]": "Diverse directional hardware", "Customer_Behaviour[City]": "North Raymond", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Croatia", "Customer_Behaviour[Timestamp]": 1458841711000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 77.35, "Customer_Behaviour[Age]": 34, "Customer_Behaviour[Area Income]": 72330.57, "Customer_Behaviour[Daily Internet Usage]": 167.26, "Customer_Behaviour[Ad Topic Line]": "Total bi-directional success", "Customer_Behaviour[City]": "East Troyhaven", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Yemen", "Customer_Behaviour[Timestamp]": 1457525408000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 81.75, "Customer_Behaviour[Age]": 43, "Customer_Behaviour[Area Income]": 52520.75, "Customer_Behaviour[Daily Internet Usage]": 249.45, "Customer_Behaviour[Ad Topic Line]": "Progressive 24/7 definition", "Customer_Behaviour[City]": "Lake Jose", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Barbados", "Customer_Behaviour[Timestamp]": 1465278076000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 66.03, "Customer_Behaviour[Age]": 22, "Customer_Behaviour[Area Income]": 59422.47, "Customer_Behaviour[Daily Internet Usage]": 217.37, "Customer_Behaviour[Ad Topic Line]": "Pre-emptive next generation strategy", "Customer_Behaviour[City]": "Ashleymouth", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "American Samoa", "Customer_Behaviour[Timestamp]": 1464737520000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 79.18, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 58443.99, "Customer_Behaviour[Daily Internet Usage]": 236.96, "Customer_Behaviour[Ad Topic Line]": "Open-source holistic productivity", "Customer_Behaviour[City]": "Lake Danielle", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Algeria", "Customer_Behaviour[Timestamp]": 1452457101000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 76.65, "Customer_Behaviour[Age]": 31, "Customer_Behaviour[Area Income]": 61117.5, "Customer_Behaviour[Daily Internet Usage]": 238.43, "Customer_Behaviour[Ad Topic Line]": "Function-based executive moderator", "Customer_Behaviour[City]": "West Dennis", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Pakistan", "Customer_Behaviour[Timestamp]": 1460962838000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 69.86, "Customer_Behaviour[Age]": 25, "Customer_Behaviour[Area Income]": 50506.44, "Customer_Behaviour[Daily Internet Usage]": 241.36, "Customer_Behaviour[Ad Topic Line]": "Triple-buffered foreground encryption", "Customer_Behaviour[City]": "Austinborough", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "New Zealand", "Customer_Behaviour[Timestamp]": 1452633435000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 84.76, "Customer_Behaviour[Age]": 30, "Customer_Behaviour[Area Income]": 61039.13, "Customer_Behaviour[Daily Internet Usage]": 178.69, "Customer_Behaviour[Ad Topic Line]": "Monitored 24/7 moratorium", "Customer_Behaviour[City]": "South Pamela", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Venezuela", "Customer_Behaviour[Timestamp]": 1463267294000, "Customer_Behaviour[Clicked on Ad]": 0}, {"Customer_Behaviour[Daily Time Spent on Site]": 80.64, "Customer_Behaviour[Age]": 26, "Customer_Behaviour[Area Income]": 46974.15, "Customer_Behaviour[Daily Internet Usage]": 221.59, "Customer_Behaviour[Ad Topic Line]": "Vision-oriented real-time framework", "Customer_Behaviour[City]": "North Laurenview", "Customer_Behaviour[Male]": 0, "Customer_Behaviour[Country]": "Luxembourg", "Customer_Behaviour[Timestamp]": 1464084279000, "Customer_Behaviour[Clicked on Ad]": 0}], "stage_runningstate": "executed"}, {"_id": "64ca9c48ab8472757bd245a2", "mode": "staged", "originalfile": "/FileStore/platform/extra/tempFile1690999873.csv", "in": ["64ca9c48ab8472757bd245a1"], "out": [], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "CustomerBehavior-PBI_AutoML", "comment": "", "pipeline_id": "64ca9c48ab8472757bd2459d", "sub_type": "Automl", "stage_type": "ml", "mlCategory": "Classification", "stage_attributes": {"model_type": "classification", "label": "Customer_Behaviour[Clicked on Ad]", "optimizeBy": "accuracy", "features": ["Customer_Behaviour[Daily Time Spent on Site]", "Customer_Behaviour[Age]", "Customer_Behaviour[Daily Internet Usage]", "Customer_Behaviour[Male]", "Customer_Behaviour[Area Income]_binarizer", "Customer_Behaviour[Ad Topic Line]_stringindexer", "Customer_Behaviour[City]_stringindexer", "Customer_Behaviour[Country]_stringindexer", "Customer_Behaviour[Timestamp]_dayofmonth", "Customer_Behaviour[Timestamp]_month", "Customer_Behaviour[Timestamp]_year"], "percentage": "100", "executionTime": "10", "sampling_value": "", "paascall": 1, "run_id": "", "sampling": 0}, "status": "new", "position": {"x": 187, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/ml-engine/classification.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "aml", "text": "Classification-AutoML", "slug": "auto-ml", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"model_type": "", "label": "", "features": []}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "d2596556-3f80-4d6d-b0c0-61914b958779", "original_schema": [{"inherited": true, "checked": true, "field": "Customer_Behaviour[Daily Time Spent on Site]", "alias": "Customer_Behaviour[Daily Time Spent on Site]", "type": "real", "position": 0}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Age]", "alias": "Customer_Behaviour[Age]", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Daily Internet Usage]", "alias": "Customer_Behaviour[Daily Internet Usage]", "type": "real", "position": 2}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Male]", "alias": "Customer_Behaviour[Male]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Clicked on Ad]", "alias": "Customer_Behaviour[Clicked on Ad]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Area Income]_binarizer", "alias": "Customer_Behaviour[Area Income]_binarizer", "type": "real", "position": 5}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Ad Topic Line]_stringindexer", "alias": "Customer_Behaviour[Ad Topic Line]_stringindexer", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[City]_stringindexer", "alias": "Customer_Behaviour[City]_stringindexer", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Country]_stringindexer", "alias": "Customer_Behaviour[Country]_stringindexer", "type": "real", "position": 8}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Timestamp]_dayofmonth", "alias": "Customer_Behaviour[Timestamp]_dayofmonth", "type": "numeric", "position": 9, "generated": true}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Timestamp]_month", "alias": "Customer_Behaviour[Timestamp]_month", "type": "numeric", "position": 10, "generated": true}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Timestamp]_year", "alias": "Customer_Behaviour[Timestamp]_year", "type": "numeric", "position": 11, "generated": true}], "actual_schema": [{"inherited": true, "checked": true, "field": "Customer_Behaviour[Daily Time Spent on Site]", "alias": "Customer_Behaviour[Daily Time Spent on Site]", "type": "real", "position": 0}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Age]", "alias": "Customer_Behaviour[Age]", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Area Income]", "alias": "Customer_Behaviour[Area Income]", "type": "real", "position": 2}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Daily Internet Usage]", "alias": "Customer_Behaviour[Daily Internet Usage]", "type": "real", "position": 3}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Ad Topic Line]", "alias": "Customer_Behaviour[Ad Topic Line]", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[City]", "alias": "Customer_Behaviour[City]", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Male]", "alias": "Customer_Behaviour[Male]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Country]", "alias": "Customer_Behaviour[Country]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Timestamp]", "alias": "Customer_Behaviour[Timestamp]", "type": "numeric", "position": 8}, {"inherited": true, "checked": true, "field": "Customer_Behaviour[Clicked on Ad]", "alias": "Customer_Behaviour[Clicked on Ad]", "type": "numeric", "position": 9}], "selected_schema": [], "created_at": "2023-08-02 18:11:20.785000", "originalcount": 1000, "samplecount": 500, "samplefile": "/FileStore/platform/sampleData/64ca9c48ab8472757bd245a0/part-00000-9fb367dc-3789-4ede-8c65-c460c1b33b2d-c000.csv", "joinSchema": [], "updated_at": "2023-08-02 18:11:20.837000", "__v": 0, "stage_runningstate": "executed", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": ""}}]